# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: kubernetes-the-hard-way
description: "A Pulumi implementation of Kelsey Hightower's Kubernetes the Hard Way"
repository: https://github.com/UnstoppableMango/pulumi-kubernetes-the-hard-way
license: Apache-2.0
keywords:
  - pulumi
  - command
  - tls
  - kubernetes
  - category/utility # idk
  - kind/component
pluginDownloadURL: github://api.github.com/UnstoppableMango
publisher: UnstoppableMango
attribution: https://github.com/kelseyhightower/kubernetes-the-hard-way/
language:
  csharp:
    rootNamespace: UnMango # TODO: Name that works
    dictionaryConstructors: true
    liftSingleValueMethodReturns: true
    packageReferences:
      Pulumi: 3.*
      Pulumi.Command: 0.9.*
      Pulumi.random: 4.*
      Pulumi.Tls: 5.*
  go:
    generateResourceContainerTypes: true
    liftSingleValueMethodReturns: true
    importBasePath: github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way
  nodejs:
    packageName: "@unmango/pulumi-kubernetes-the-hard-way"
    liftSingleValueMethodReturns: true
    dependencies:
      "@pulumi/pulumi": "^3.0.0"
      "@pulumi/command": "^0.9.0"
      "@pulumi/random": "^4.0.0"
      "@pulumi/tls": "^5.0.0"
    devDependencies:
      typescript: "^3.7.0"
  python:
    liftSingleValueMethodReturns: true
    pyproject:
      enabled: true
    requires:
      pulumi: ">=3.0.0,<4.0.0"
      pulumi-command: ">=0.9.0,<1.0.0"
      pulumi-random: ">=4.0.0,<5.0.0"
      pulumi-tls: ">=5.0.0,<6.0.0"
  java:
    basePackage: com.unmango # TODO: Name that works
    buildFiles: gradle
    liftSingleValueMethodReturns: true
    gradleNexusPublishPluginVersion: 1.1.0
    dependencies:
      com.google.code.findbugs:jsr305: 3.0.2
      com.google.code.gson:gson: 2.8.9
      com.pulumi:command: 0.9.2
      com.pulumi:pulumi: 0.9.9
      com.pulumi:random: 4.16.0
      com.pulumi:tls: 5.0.0
resources:
  kubernetes-the-hard-way:index:Certificate:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      allowedUses:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:index:AllowedUsage"
      caCertPem:
        type: string
      caPrivateKeyPem:
        type: string
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:index:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      dnsNames:
        type: array
        items:
          type: string
        description: List of DNS names for which a certificate is being requested.
      earlyRenewalHours:
        type: integer
        description: TODO
      ipAddresses:
        type: array
        items:
          type: string
        description: List of IP addresses for which a certificate is being requested.
      isCaCertificate:
        type: boolean
      setAuthorityKeyId:
        type: boolean
        description: Should the generated certificate include an authority key identifier.
      setSubjectKeyId:
        type: boolean
        description: Should the generated certificate include a subject key identifier.
      subject:
        $ref: "/tls/v5.0.0/schema.json#/types/tls:index/CertRequestSubject:CertRequestSubject"
      uris:
        type: array
        items:
          type: string
        description: List of URIs for which a certificate is being requested.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
    requiredInputs:
      - algorithm
      - allowedUses
      - caCertPem
      - caPrivateKeyPem
      - validityPeriodHours
    properties:
      cert:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/locallySignedCert:LocallySignedCert"
      certPem:
        type: string
      csr:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/certRequest:CertRequest"
      key:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/privateKey:PrivateKey"
      privateKeyPem:
        type: string
      publicKeyPem:
        type: string
    required:
      - cert
      - certPem
      - csr
      - key
      - privateKeyPem
      - publicKeyPem
    methods:
      installCert: kubernetes-the-hard-way:index:Certificate/installCert
      installKey: kubernetes-the-hard-way:index:Certificate/installKey
  kubernetes-the-hard-way:index:ClusterPki:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
        description: Name of the algorithm to use when generating the private key.
        default: RSA
      clusterName:
        type: string
        description: A name to use for the cluster
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:index:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      nodes:
        type: object
        additionalProperties:
          $ref: "#/types/kubernetes-the-hard-way:index:ClusterPkiNode"
        description: Map of node names to node configuration.
      publicIp:
        type: string
        description: Publicly accessible IP address.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
        default: 2048
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
        default: 8076
    requiredInputs:
      - clusterName
      - nodes
      - publicIp
    properties:
      admin:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The admin certificate.
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      ca:
        $ref: "#/resources/kubernetes-the-hard-way:index:RootCa"
      clusterName:
        type: string
      controllerManager:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The controller manager certificate.
      kubelet:
        type: object
        additionalProperties:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: Map of node name to kubelet certificate.
      kubeProxy:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The kube proxy certificate.
      kubernetes:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The kubernetes certificate.
      kubeScheduler:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The kube scheduler certificate.
      publicIp:
        type: string
        description: The publicly accessible IP for the cluster.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      serviceAccounts:
        $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        description: The service accounts certificate.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
    required:
      - admin
      - algorithm
      - ca
      - clusterName
      - controllerManager
      - kubelet
      - kubeProxy
      - kubernetes
      - kubeScheduler
      - publicIp
      - rsaBits
      - serviceAccounts
      - validityPeriodHours
  kubernetes-the-hard-way:index:EncryptionKey:
    isComponent: true
    inputProperties:
      bytes:
        type: number
        description: The length of the key in bytes.
    properties:
      config:
        type: string
        description: The generated `v1/EncryptionConfig`.
      key:
        $ref: "/random/v4.16.0/schema.json#/resources/random:index/randomBytes:RandomBytes"
    required:
      - config
      - key
  kubernetes-the-hard-way:index:RemoteFile:
    isComponent: true
    inputProperties:
      connection:
        $ref: "/command/v0.9.0/schema.json#/types/command:remote:Connection"
        description: The connection details.
      content:
        type: string
        description: The content of the file.
      path:
        type: string
        description: The path to the file on the remote host.
    requiredInputs:
      - connection
      - content
      - path
    properties:
      command:
        $ref: "/command/v0.9.0/schema.json#/resources/command:remote:Command"
        description: The command resource.
      content:
        type: string
        description: The contents of the remote file.
      path:
        type: string
        description: The path to the file on the remote filesystem.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
    required:
      - command
      - content
      - path
      - stderr
      - stdout
  kubernetes-the-hard-way:index:RootCa:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:index:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      dnsNames:
        type: array
        items:
          type: string
        description: List of DNS names for which a certificate is being requested.
      earlyRenewalHours:
        type: integer
        description: TODO
      ipAddresses:
        type: array
        items:
          type: string
        description: List of IP addresses for which a certificate is being requested.
      setAuthorityKeyId:
        type: boolean
        description: Should the generated certificate include an authority key identifier.
      setSubjectKeyId:
        type: boolean
        description: Should the generated certificate include a subject key identifier.
      uris:
        type: array
        items:
          type: string
        description: List of URIs for which a certificate is being requested.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
      subject:
        $ref: "/tls/v5.0.0/schema.json#/types/tls:index/SelfSignedCertSubject:SelfSignedCertSubject"
    requiredInputs:
      - validityPeriodHours
    properties:
      allowedUses:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:index:AllowedUsage"
      cert:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/selfSignedCert:SelfSignedCert"
      certPem:
        type: string
      key:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/privateKey:PrivateKey"
      privateKeyPem:
        type: string
      publicKeyPem:
        type: string
    required:
      - allowedUses
      - cert
      - certPem
      - key
      - privateKeyPem
      - publicKeyPem
    methods:
      newCertificate: kubernetes-the-hard-way:index:RootCa/newCertificate
      installCert: kubernetes-the-hard-way:index:RootCa/installCert
      installKey: kubernetes-the-hard-way:index:RootCa/installKey
  kubernetes-the-hard-way:tools:Tar:
    isComponent: true
    description: Abstracion over the `tar` utility on a remote system.
    inputProperties:
      archive:
        type: string
        description: Corresponds to the [ARCHIVE] argument.
      connection:
        $ref: "/command/v0.9.0/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      directory:
        type: string
        description: Corresponds to the --directory option.
      extract:
        type: boolean
        description: Corresponds to the --extract option.
      files:
        oneOf:
          - type: array
            items:
              type: string
          - type: string
        description: Corresponds to the [FILE] argument.
      gzip:
        type: boolean
        description: Corresponds to the --gzip option.
    requiredInputs:
      - archive
      - connection
    properties:
      archive:
        type: string
        description: Corresponds to the [ARCHIVE] argument.
      command:
        $ref: "/command/v0.9.0/schema.json#/resources/command:remote:Command"
        description: Represents the remote `tar` operation.
      directory:
        type: string
        description: Corresponds to the --directory option.
      extract:
        type: boolean
        description: Corresponds to the --extract option.
      files:
        type: array
        items:
          type: string
        description: Corresponds to the [FILE] argument.
      gzip:
        type: boolean
        description: Corresponds to the --gzip option.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
    required:
      - archive
      - command
      - extract
      - files
      - stderr
      - stdout
  kubernetes-the-hard-way:tools:Wget:
    isComponent: true
    description: Abstraction over the `wget` utility on a remote system.
    inputProperties:
      connection:
        $ref: "/command/v0.9.0/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      directoryPrefix:
        type: string
        description: Corresponds to the --directory-prefix option.
      httpsOnly:
        type: boolean
        description: Corresponds to the --https-only option.
      noVerbose:
        type: boolean
        description: Corresponds t- the --no-verbose option.
      outputDocument:
        type: string
        description: Corresponds to the --output-document option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      timestamping:
        type: boolean
        description: Corresponds to the --timestamping option.
      url:
        type: string
        description: Corresponse to the [URL] argument.
    requiredInputs:
      - connection
      - url
    properties:
      command:
        $ref: "/command/v0.9.0/schema.json#/resources/command:remote:Command"
        description: Represents the remote `tar` operation.
      directoryPrefix:
        type: string
        description: Corresponds to the --directory-prefix option.
      httpsOnly:
        type: boolean
        description: Corresponds to the --https-only option.
      noVerbose:
        type: boolean
        description: Corresponds to the --no-verbose option.
      outputDocument:
        type: string
        description: Corresponds to the --output-document option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
      timestamping:
        type: boolean
        description: Corresponds to the --timestamping option.
      url:
        type: string
        description: Corresponse to the [URL] argument.
    required:
      - command
      - httpsOnly
      - quiet
      - stderr
      - stdout
      - timestamping
      - url
types:
  kubernetes-the-hard-way:index:Algorithm:
    description: TODO
    type: string
    enum:
      - value: RSA
      - value: ECDSA
      - value: ED25519
  kubernetes-the-hard-way:index:AllowedUsage:
    description: TODO
    type: string
    enum:
      - name: certSigning
        value: cert_signing
      - name: clientAuth
        value: client_auth
      - name: crlSigning
        value: crl_signing
      - name: digitalSignature
        value: digital_signature
      - name: keyEncipherment
        value: key_encipherment
      - name: serverAuth
        value: server_auth
  # https://github.com/pulumi/pulumi-tls/blob/620cb07a95049672bdaab17bf86fade26db051b1/provider/cmd/pulumi-resource-tls/schema.json#L84-L127
  kubernetes-the-hard-way:index:CertRequestSubject:
    description: Polyfill for `tls.CertRequestSubject`.
    type: object
    properties:
      commonName:
        type: string
        description: "Distinguished name: CN"
      country:
        type: string
        description: "Distinguished name: C"
      locality:
        type: string
        description: "Distinguished name: L"
      organization:
        type: string
        description: "Distinguished name: O"
      organizationalUnit:
        type: string
        description: "Distinguished name: OU"
      postalCode:
        type: string
        description: "Distinguished name: PC"
      province:
        type: string
        description: "Distinguished name: ST"
      serialNumber:
        type: string
        description: "Distinguished name: SERIALNUMBER"
      streetAddresses:
        type: array
        items:
          type: string
        description: "Distinguished name: STREET"
  # https://github.com/pulumi/pulumi-command/blob/f122b7ae8d9f2b7649a28b170c6141216a209f04/provider/cmd/pulumi-resource-command/schema.json#L470-L522
  kubernetes-the-hard-way:index:Connection:
    description: Instructions for how to connect to a remote endpoint. Polyfill for `command.ConnectionArgs`.
    type: object
    properties:
      agentSocketPath:
        type: string
        description: SSH Agent socket path. Default to environment variable SSH_AUTH_SOCK if present.
      dialErrorLimit:
        type: integer
        default: 10
        description: Max allowed errors on trying to dial the remote host. -1 set count to unlimited. Default value is 10.
      host:
        type: string
        description: The address of the resource to connect to.
      password:
        type: string
        description: The password we should use for the connection.
      perDialTimeout:
        type: integer
        default: 15
        description: Max number of seconds for each dial attempt. 0 implies no maximum. Default value is 15 seconds.
      port:
        type: integer
        default: 22
        description: The port to connect to.
      privateKey:
        type: string
        description: The contents of an SSH key to use for the connection. This takes preference over the password if provided.
      privateKeyPassword:
        type: string
        description: The password to use in case the private key is encrypted.
      # This also causes the rogue module error
      # proxy:
      #   $ref: "/command/v0.9.0/schema.json#/types/command:remote:ProxyConnection"
      #   description: The connection settings for the bastion/proxy host.
      user:
        type: string
        default: root
        description: The user that we should use for the connection.
    required:
      - host
  kubernetes-the-hard-way:index:ClusterPkiNode:
    type: object
    description: Node inputs for the PKI.
    properties:
      ip:
        type: string
        description: The IP address of the node.
      role:
        $ref: "#/types/kubernetes-the-hard-way:index:NodeRole"
  kubernetes-the-hard-way:index:EcdsaCurve:
    description: TODO
    type: string
    enum:
      - value: P224
      - value: P256
      - value: P384
      - value: P521
  kubernetes-the-hard-way:index:KeyPair:
    description: A certificate and key pair.
    type: object
    properties:
      certPem:
        type: string
        description: The PEM encoded certificate data
      key:
        $ref: "/tls/v5.0.0/schema.json#/resources/tls:index/privateKey:PrivateKey"
        description: The private key.
      privateKeyPem:
        type: string
        description: The PEM encoded private key data.
      publicKeyPem:
        type: string
        description: The PEM encoded public key data.
  kubernetes-the-hard-way:index:NodeRole:
    description: TODO
    type: string
    enum:
      - value: controlplane
      - value: worker
  kubernetes-the-hard-way:index:ResourceOptions:
    description: Polyfill for `pulumi.ComponentResourceOptions`.
    type: object
    properties:
      parent:
        $ref: "pulumi.json#/Any"
functions:
  kubernetes-the-hard-way:index:Certificate/installCert:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - __self__
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
      required:
        - result
  kubernetes-the-hard-way:index:Certificate/installKey:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - __self__
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
      required:
        - result
  kubernetes-the-hard-way:index:installCert:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        keypair:
          $ref: "#/types/kubernetes-the-hard-way:index:KeyPair"
          description: The certificate to install at the remote location.
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - keypair
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
          description: A resource representing the the file on the remote machine.
      required:
        - result
  kubernetes-the-hard-way:index:installControlPlane:
    description: Install PKI onto a controlplane node.
    inputs:
      properties:
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        pki:
          $ref: "#/resources/kubernetes-the-hard-way:index:ClusterPki"
          description: The PKI to install
      required:
        - connection
        - pki
  kubernetes-the-hard-way:index:installKey:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        keypair:
          $ref: "#/types/kubernetes-the-hard-way:index:KeyPair"
          description: The certificate to install.
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - keypair
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
      required:
        - result
  kubernetes-the-hard-way:index:newCertificate:
    description: Creates a Certificate configured for the current authority.
    inputs:
      properties:
        ca:
          $ref: "#/resources/kubernetes-the-hard-way:index:RootCa"
          description: The certificate authority to issue the certificate.
        algorithm:
          $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
          description: Name of the algorithm to use when generating the private key.
        allowedUses:
          type: array
          items:
            $ref: "#/types/kubernetes-the-hard-way:index:AllowedUsage"
        dnsNames:
          type: array
          items:
            type: string
          description: List of DNS names for which a certificate is being requested.
        earlyRenewalHours:
          type: integer
          description: TODO
        ecdsaCurve:
          $ref: "#/types/kubernetes-the-hard-way:index:EcdsaCurve"
          description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
        ipAddresses:
          type: array
          items:
            type: string
          description: List of IP addresses for which a certificate is being requested.
        isCaCertificate:
          type: boolean
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        rsaBits:
          type: integer
          description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
        setAuthorityKeyId:
          type: boolean
          description: Should the generated certificate include an authority key identifier.
        setSubjectKeyId:
          type: boolean
          description: Should the generated certificate include a subject key identifier.
        subject:
          # $ref: "/tls/v5.0.0/schema.json#/types/tls:index/CertRequestSubject:CertRequestSubject"
          $ref: "#/types/kubernetes-the-hard-way:index:CertRequestSubject"
        uris:
          type: array
          items:
            type: string
          description: List of URIs for which a certificate is being requested.
        validityPeriodHours:
          type: integer
          description: Number of hours, after initial issuing, that the certificate will remain valid.
      required:
        - algorithm
        - allowedUses
        - ca
        - name
        - validityPeriodHours
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
      required:
        - result
  kubernetes-the-hard-way:index:RootCa/newCertificate:
    description: Creates a Certificate configured for the current authority.
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:index:RootCa"
        algorithm:
          $ref: "#/types/kubernetes-the-hard-way:index:Algorithm"
          description: Name of the algorithm to use when generating the private key.
        allowedUses:
          type: array
          items:
            $ref: "#/types/kubernetes-the-hard-way:index:AllowedUsage"
        dnsNames:
          type: array
          items:
            type: string
          description: List of DNS names for which a certificate is being requested.
        earlyRenewalHours:
          type: integer
          description: TODO
        ecdsaCurve:
          $ref: "#/types/kubernetes-the-hard-way:index:EcdsaCurve"
          description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
        ipAddresses:
          type: array
          items:
            type: string
          description: List of IP addresses for which a certificate is being requested.
        isCaCertificate:
          type: boolean
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        rsaBits:
          type: integer
          description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
        setAuthorityKeyId:
          type: boolean
          description: Should the generated certificate include an authority key identifier.
        setSubjectKeyId:
          type: boolean
          description: Should the generated certificate include a subject key identifier.
        subject:
          # $ref: "/tls/v5.0.0/schema.json#/types/tls:index/CertRequestSubject:CertRequestSubject"
          $ref: "#/types/kubernetes-the-hard-way:index:CertRequestSubject"
        uris:
          type: array
          items:
            type: string
          description: List of URIs for which a certificate is being requested.
        validityPeriodHours:
          type: integer
          description: Number of hours, after initial issuing, that the certificate will remain valid.
      required:
        - __self__
        - algorithm
        - allowedUses
        - name
        - validityPeriodHours
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
          description: The issued certificate.
      required:
        - result
  kubernetes-the-hard-way:index:RootCa/installCert:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - __self__
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
      required:
        - result
  kubernetes-the-hard-way:index:RootCa/installKey:
    description: Creates a RemoteFile resource representing the copy operation.
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:index:Certificate"
        connection:
          $ref: "#/types/kubernetes-the-hard-way:index:Connection"
          description: The connection details.
        name:
          type: string
          plain: true
        options:
          $ref: "#/types/kubernetes-the-hard-way:index:ResourceOptions"
          plain: true
        path:
          type: string
          description: The path to install to.
      required:
        - __self__
        - connection
        - name
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:index:RemoteFile"
      required:
        - result
