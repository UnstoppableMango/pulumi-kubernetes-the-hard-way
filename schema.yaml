# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: kubernetes-the-hard-way
description: "A Pulumi implementation of Kelsey Hightower's Kubernetes the Hard Way"
repository: https://github.com/UnstoppableMango/pulumi-kubernetes-the-hard-way
license: Apache-2.0
keywords:
  - pulumi
  - command
  - tls
  - kubernetes
  - category/utility # idk
  - kind/component
pluginDownloadURL: github://api.github.com/UnstoppableMango
publisher: UnstoppableMango
attribution: https://github.com/kelseyhightower/kubernetes-the-hard-way/
language:
  csharp:
    rootNamespace: UnMango # TODO: Name that works
    dictionaryConstructors: true
    liftSingleValueMethodReturns: true
    packageReferences:
      Pulumi: 3.*
      Pulumi.Command: 0.9.*
      Pulumi.random: 4.*
      Pulumi.Tls: 5.*
  go:
    generateResourceContainerTypes: true
    liftSingleValueMethodReturns: true
    importBasePath: github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way
    packageImportAliases:
      github.com/pulumi/pulumi-command/sdk/go/command/remote: pulumiCommand
      github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way: kthw
  nodejs:
    packageName: "@unmango/pulumi-kubernetes-the-hard-way"
    liftSingleValueMethodReturns: true
    dependencies:
      "@pulumi/pulumi": "^3.0.0"
      "@pulumi/command": "^0.9.0"
      "@pulumi/random": "^4.0.0"
      "@pulumi/tls": "^5.0.0"
    devDependencies:
      typescript: "^3.7.0"
  python:
    liftSingleValueMethodReturns: true
    pyproject:
      enabled: true
    requires:
      pulumi: ">=3.0.0,<4.0.0"
      pulumi-command: ">=0.9.0,<1.0.0"
      pulumi-random: ">=4.0.0,<5.0.0"
      pulumi-tls: ">=5.0.0,<6.0.0"
  java:
    basePackage: com.unmango # TODO: Name that works
    buildFiles: gradle
    liftSingleValueMethodReturns: true
    gradleNexusPublishPluginVersion: 1.1.0
    dependencies:
      com.google.code.findbugs:jsr305: 3.0.2
      com.google.code.gson:gson: 2.8.9
      com.pulumi:command: 0.9.2
      com.pulumi:pulumi: 0.9.9
      com.pulumi:random: 4.16.0
      com.pulumi:tls: 5.0.0
resources:
  kubernetes-the-hard-way:tls:Certificate:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:tls:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      allowedUses:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tls:AllowedUsage"
      caCertPem:
        type: string
      caPrivateKeyPem:
        type: string
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:tls:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      dnsNames:
        type: array
        items:
          type: string
        description: List of DNS names for which a certificate is being requested.
      earlyRenewalHours:
        type: integer
        description: TODO
      ipAddresses:
        type: array
        items:
          type: string
        description: List of IP addresses for which a certificate is being requested.
      isCaCertificate:
        type: boolean
      setAuthorityKeyId:
        type: boolean
        description: Should the generated certificate include an authority key identifier.
      setSubjectKeyId:
        type: boolean
        description: Should the generated certificate include a subject key identifier.
      subject:
        $ref: "/tls/v5.0.2/schema.json#/types/tls:index/CertRequestSubject:CertRequestSubject"
      uris:
        type: array
        items:
          type: string
        description: List of URIs for which a certificate is being requested.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
    requiredInputs:
      - algorithm
      - allowedUses
      - caCertPem
      - caPrivateKeyPem
      - validityPeriodHours
    properties:
      cert:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/locallySignedCert:LocallySignedCert"
      certPem:
        type: string
      csr:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/certRequest:CertRequest"
      key:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/privateKey:PrivateKey"
      privateKeyPem:
        type: string
      publicKeyPem:
        type: string
    required:
      - cert
      - certPem
      - csr
      - key
      - privateKeyPem
      - publicKeyPem
  kubernetes-the-hard-way:tls:ClusterPki:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:tls:Algorithm"
        description: Name of the algorithm to use when generating the private key.
        default: RSA
      clusterName:
        type: string
        description: A name to use for the cluster
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:tls:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      nodes:
        type: object
        additionalProperties:
          $ref: "#/types/kubernetes-the-hard-way:tls:ClusterPkiNode"
        description: Map of node names to node configuration.
      publicIp:
        type: string
        description: Publicly accessible IP address.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
        default: 2048
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
        default: 8076
    requiredInputs:
      - clusterName
      - nodes
      - publicIp
    properties:
      admin:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The admin certificate.
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:tls:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      ca:
        $ref: "#/resources/kubernetes-the-hard-way:tls:RootCa"
      clusterName:
        type: string
      controllerManager:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The controller manager certificate.
      kubelet:
        type: object
        additionalProperties:
          $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: Map of node name to kubelet certificate.
      kubeProxy:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The kube proxy certificate.
      kubernetes:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The kubernetes certificate.
      kubeScheduler:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The kube scheduler certificate.
      publicIp:
        type: string
        description: The publicly accessible IP for the cluster.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      serviceAccounts:
        $ref: "#/resources/kubernetes-the-hard-way:tls:Certificate"
        description: The service accounts certificate.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
    required:
      - admin
      - algorithm
      - ca
      - clusterName
      - controllerManager
      - kubelet
      - kubeProxy
      - kubernetes
      - kubeScheduler
      - publicIp
      - rsaBits
      - serviceAccounts
      - validityPeriodHours
    methods:
      getKubeconfig: kubernetes-the-hard-way:tls:ClusterPki/getKubeconfig
  kubernetes-the-hard-way:tls:EncryptionKey:
    isComponent: true
    inputProperties:
      bytes:
        type: number
        description: The length of the key in bytes.
    properties:
      config:
        type: string
        description: The generated `v1/EncryptionConfig`.
      key:
        $ref: "/random/v4.16.0/schema.json#/resources/random:index/randomBytes:RandomBytes"
    required:
      - config
      - key
  kubernetes-the-hard-way:remote:EtcdInstall:
    isComponent: true
    description: Represents an etcd binary on a remote system.
    inputProperties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The etcd CPU architecture.
      caPem:
        type: string
        description: The PEM encoded CA data.
      certPem:
        type: string
        description: The PEM encoded certificate data.
      configurationDirectory:
        type: string
        description: The directory to store etcd configuration.
        default: /etc/etcd
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      dataDirectory:
        type: string
        description: The directory etcd will use.
        default: /var/lib/etcd
      downloadDirectory:
        type: string
        description: Temporary directory to download files to. Defaults to `/tmp/<random string>`.
      installDirectory:
        type: string
        description: Directory to install the `etcd` and `etcdctl` binaries.
        default: /usr/local/bin
      internalIp:
        type: string
        description: IP used to serve client requests and communicate with etcd peers.
      keyPem:
        type: string
        description: The PEM encoded key data.
      systemdDirectory:
        type: string
        description: The systemd service file dirctory.
        default: /etc/system/systemd
      version:
        type: string
        description: The version of etcd to install.
    requiredInputs:
      - caPem
      - certPem
      - connection
      - internalIp
      - keyPem
    properties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The etcd CPU architecture.
      archiveName:
        type: string
        description: The name of the etcd release archive.
      caFile:
        $ref: "#/resources/kubernetes-the-hard-way:remote:File"
        description: The remote certificate authority file.
      certFile:
        $ref: "#/resources/kubernetes-the-hard-way:remote:File"
        description: The remote certificate file.
      configurationDirectory:
        type: string
        description: The directory to store etcd configuration.
      configurationMkdir:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mkdir"
        description: The command used to create the configuration directory.
      dataDirectory:
        type: string
        description: The directory etcd will use.
      dataMkdir:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mkdir"
        description: The command used to create the data directory.
      download:
        $ref: "#/resources/kubernetes-the-hard-way:remote:Download"
        description: The etcd download operation.
      downloadDirectory:
        type: string
        description: The directory where the etcd binary was downloaded to.
      downloadMkdir:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mkdir"
        description: The operation to create the download directory.
      etcdPath:
        type: string
        description: The path to the etcd binary on the remote system.
      etcdctlPath:
        type: string
        description: The path to the etcdctl binary on the remote system.
      installDirectory:
        type: string
        description: Directory to install the `etcd` and `etcdctl` binaries.
      installMkdir:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mkdir"
        description: The operation to create the install directory.
      internalIp:
        type: string
        description: IP used to serve client requests and communicate with etcd peers.
      keyFile:
        $ref: "#/resources/kubernetes-the-hard-way:remote:File"
        description: The remote key file.
      mvEtcd:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mv"
        description: The operation to move the etcd binary to the install directory.
      mvEtcdctl:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mv"
        description: The operation to move the etcdctl binary to the install directory.
      name:
        type: string
        description: The name of the resource.
      systemdService:
        $ref: "#/resources/kubernetes-the-hard-way:remote:SystemdService"
        description: The remote systemd service.
      tar:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Tar"
        description: The tar operation.
      url:
        type: string
        description: The url used to download etcd.
      version:
        type: string
        description: The version of etcd downloaded.
    required:
      - architecture
      - archiveName
      - configurationDirectory
      - configurationMkdir
      - dataDirectory
      - dataMkdir
      - download
      - downloadDirectory
      - downloadMkdir
      - etcdPath
      - etcdctlPath
      - installDirectory
      - installMkdir
      - internalIp
      - mvEtcd
      - mvEtcdctl
      - name
      - systemdService
      - tar
      - url
      - version
    methods:
      etcdctl: kubernetes-the-hard-way:remote:EtcdInstall/etcdctl
  kubernetes-the-hard-way:remote:Download:
    isComponent: true
    description: Represents a file to be downloaded on a remote system.
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system
      destination:
        type: string
        description: The fully qualified path on the remote system where the file
          should be downloaded to.
      removeOnDelete:
        type: boolean
        description: Remove the downloaded file when the resource is deleted.
      url:
        type: string
        description: The URL for the file to be downloaded.
    requiredInputs:
      - connection
      - destination
      - url
    properties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system
      destination:
        type: string
        description: The fully qualified path on the remote system where the file
          should be downloaded to.
      mkdir:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Mkdir"
        description: Represents the command used to create the remote directory.
      url:
        type: string
        description: The URL for the file to be downloaded.
      wget:
        $ref: "#/resources/kubernetes-the-hard-way:tools:Wget"
        description: Represents the wget command used to download the file.
    required:
      - connection
      - destination
      - mkdir
      - url
      - wget
  kubernetes-the-hard-way:remote:File:
    isComponent: true
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      content:
        type: string
        description: The content of the file.
      path:
        type: string
        description: The path to the file on the remote host.
    requiredInputs:
      - connection
      - content
      - path
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: The command resource.
      content:
        type: string
        description: The contents of the remote file.
      path:
        type: string
        description: The path to the file on the remote filesystem.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
    required:
      - command
      - content
      - path
      - stderr
      - stdout
  kubernetes-the-hard-way:remote:KubeApiServerInstall:
    isComponent: true
    description: Installs kube-apiserver on a remote system.
    inputProperties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-apiserver CPU architecture.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `etcd` and `etcdctl` binaries.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-apiserver to install.
    properties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-apiserver CPU architecture.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: The command resource.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `kube-apiserver` binary.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-apiserver to install.
    required:
      - architecture
      - command
      - connection
      - installDirectory
      - version
  kubernetes-the-hard-way:remote:KubeControllerManagerInstall:
    isComponent: true
    description: Installs kube-controller-manager on a remote system.
    inputProperties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-controller-manager CPU architecture.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `kube-controller-manager` binary.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-controller-manager to install.
    properties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-controller-manager CPU architecture.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: The command resource.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `kube-controller-manager` binary.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-controller-manager to install.
    required:
      - architecture
      - command
      - connection
      - installDirectory
      - version
  kubernetes-the-hard-way:remote:KubeSchedulerInstall:
    isComponent: true
    description: Installs kube-scheduler on a remote system.
    inputProperties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-scheduler CPU architecture.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `kube-scheduler` binary.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-scheduler to install.
    properties:
      architecture:
        $ref: "#/types/kubernetes-the-hard-way:remote:Architecture"
        description: The kube-scheduler CPU architecture.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: The command resource.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      installDirectory:
        type: string
        description: Directory to install the `etcd` and `etcdctl` binaries.
        default: /usr/local/bin
      version:
        type: string
        description: The version of kube-scheduler to install.
    required:
      - architecture
      - command
      - connection
      - installDirectory
      - version
  kubernetes-the-hard-way:remote:SystemdService:
    isComponent: true
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      directory:
        type: string
        default: /etc/systemd/system
        description: The location to create the service file.
      install:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdInstallSection"
        description: Describes the [Install] section of a systemd service file.
      service:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdServiceSection"
        description: Describes the [Service] section of a systemd service file.
      unit:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdUnitSection"
        description: Describes the [Unit] section of a systemd service file.
    requiredInputs:
      - connection
      - service
    properties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details.
      directory:
        type: string
        default: /etc/systemd/system
        description: The location to create the service file.
      file:
        $ref: "#/resources/kubernetes-the-hard-way:remote:File"
        description: Represents the service file on the remote machine.
      install:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdInstallSection"
        description: Describes the [Install] section of a systemd service file.
      service:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdServiceSection"
        description: Describes the [Service] section of a systemd service file.
      unit:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdUnitSection"
        description: Describes the [Unit] section of a systemd service file.
    required:
      - connection
      - directory
      - file
      - service
    methods:
      disable: kubernetes-the-hard-way:remote:SystemdService/disable
      enable: kubernetes-the-hard-way:remote:SystemdService/enable
      start: kubernetes-the-hard-way:remote:SystemdService/start
  kubernetes-the-hard-way:tls:RootCa:
    isComponent: true
    inputProperties:
      algorithm:
        $ref: "#/types/kubernetes-the-hard-way:tls:Algorithm"
        description: Name of the algorithm to use when generating the private key.
      ecdsaCurve:
        $ref: "#/types/kubernetes-the-hard-way:tls:EcdsaCurve"
        description: When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
      rsaBits:
        type: integer
        description: When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
      dnsNames:
        type: array
        items:
          type: string
        description: List of DNS names for which a certificate is being requested.
      earlyRenewalHours:
        type: integer
        description: TODO
      ipAddresses:
        type: array
        items:
          type: string
        description: List of IP addresses for which a certificate is being requested.
      setAuthorityKeyId:
        type: boolean
        description: Should the generated certificate include an authority key identifier.
      setSubjectKeyId:
        type: boolean
        description: Should the generated certificate include a subject key identifier.
      uris:
        type: array
        items:
          type: string
        description: List of URIs for which a certificate is being requested.
      validityPeriodHours:
        type: integer
        description: Number of hours, after initial issuing, that the certificate will remain valid.
      subject:
        $ref: "/tls/v5.0.2/schema.json#/types/tls:index/SelfSignedCertSubject:SelfSignedCertSubject"
    requiredInputs:
      - validityPeriodHours
    properties:
      allowedUses:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tls:AllowedUsage"
      cert:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/selfSignedCert:SelfSignedCert"
      certPem:
        type: string
      key:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/privateKey:PrivateKey"
      privateKeyPem:
        type: string
      publicKeyPem:
        type: string
    required:
      - allowedUses
      - cert
      - certPem
      - key
      - privateKeyPem
      - publicKeyPem
  kubernetes-the-hard-way:tools:Etcdctl:
    isComponent: true
    description: Abstraction over the `etcdctl` utility on a remote system.
    inputProperties:
      commands:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tools:EtcdctlCommand"
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      endpoints:
        type: string
      env:
        type: object
        additionalProperties:
          type: string
      caCert:
        type: string
      cert:
        type: string
      key:
        type: string
    requiredInputs:
      - connection
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the command run on the remote system.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
  kubernetes-the-hard-way:tools:Mkdir:
    isComponent: true
    description: Represents the `mkdir` utility.
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: The connection details for the remote system.
      directory:
        type: string
        description: The fully qualified path of the directory on the remote system.
      parents:
        type: boolean
        description: Corresponds to the `--parents` option.
      removeOnDelete:
        type: boolean
        description: Remove the created directory when the `Mkdir` resource is deleted or updated.
    requiredInputs:
      - connection
      - directory
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: The remote command.
      directory:
        type: string
        description: The fully qualified path of the directory on the remote system.
      parents:
        type: boolean
        description: Corresponds to the `--parents` option.
      removeOnDelete:
        type: boolean
        description: Remove the created directory when the `Mkdir` resource is deleted or updated.
      stderr:
        type: string
        description: The command's stderr.
      stdout:
        type: string
        description: The command's stdout.
    required:
      - command
      - directory
      - parents
      - removeOnDelete
      - stderr
      - stdout
  kubernetes-the-hard-way:tools:Mktemp:
    isComponent: true
    description: Abstracion over the `mktemp` utility on a remote system.
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      directory:
        type: boolean
        description: Corresponds to the --directory option.
      dryRun:
        type: boolean
        description: Corresponds to the --dry-run option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      suffix:
        type: string
        description: Corresponds to the --suffix option.
      template:
        type: string
        description: Corresponds to the [TEMPLATE] arg.
      tmpdir:
        type: string
        description: Corresponds to the --tmpdir option.
    requiredInputs:
      - connection
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the remote `tar` operation.
      directory:
        type: boolean
        description: Corresponds to the --directory option.
      dryRun:
        type: boolean
        description: Corresponds to the --dry-run option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      suffix:
        type: string
        description: Corresponds to the --suffix option.
      template:
        type: string
        description: Corresponds to the [TEMPLATE] arg.
      tmpdir:
        type: string
        description: Corresponds to the --tmpdir option.
    required:
      - command
      - directory
      - dryRun
      - quiet
  kubernetes-the-hard-way:tools:Mv:
    isComponent: true
    description: Abstraction over the `mv` utility on a remote system.
    inputProperties:
      backup:
        type: boolean
        plain: true
        description: Corresponds to both the -b and --backup options depending on whether [CONTROL] is supplied.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      context:
        type: boolean
        description: Corresponds to the --context option.
      control:
        type: string
        description: Corresponds to the [CONTROL] argument for the --backup option.
      dest:
        type: string
        description: Corresponds to the [DEST] argument.
      directory:
        type: string
        description: Corresponds to the [DIRECTORY] argument.
      force:
        type: boolean
        description: Corresponds to the --force option.
      noClobber:
        type: boolean
        description: Corresponds to the --no-clobber option.
      noTargetDirectory:
        type: boolean
        description: Corresponds to the --no-target-directory option.
      source:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
        description: Corresponds to the [SOURCE] argument.
      stripTrailingSlashes:
        type: boolean
        description: Corresponds to the --strip-trailing-suffix option.
      suffix:
        type: string
        description: Corresponds to the --suffix option.
      targetDirectory:
        type: string
        description: Corresponds to the --target-directory option.
      update:
        type: boolean
        description: Corresponds to the --update option.
      verbose:
        type: boolean
        description: Corresponds to the --verbose option.
    requiredInputs:
      - connection
      - source
    properties:
      backup:
        type: boolean
        description: Corresponds to both the -b and --backup options depending on whether [CONTROL] is supplied.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the command run on the remote system.
      context:
        type: boolean
        description: Corresponds to the --context option.
      control:
        type: string
        description: Corresponds to the [CONTROL] argument for the --backup option.
      dest:
        type: string
        description: Corresponds to the [DEST] argument.
      directory:
        type: string
        description: Corresponds to the [DIRECTORY] argument.
      force:
        type: boolean
        description: Corresponds to the --force option.
      noClobber:
        type: boolean
        description: Corresponds to the --no-clobber option.
      noTargetDirectory:
        type: boolean
        description: Corresponds to the --no-target-directory option.
      source:
        type: array
        items:
          type: string
        description: Corresponds to the [SOURCE] argument.
      stripTrailingSlashes:
        type: boolean
        description: Corresponds to the --strip-trailing-suffix option.
      suffix:
        type: string
        description: Corresponds to the --suffix option.
      targetDirectory:
        type: string
        description: Corresponds to the --target-directory option.
      update:
        type: boolean
        description: Corresponds to the --update option.
      verbose:
        type: boolean
        description: Corresponds to the --verbose option.
    required:
      - backup
      - command
      - context
      - force
      - noClobber
      - noTargetDirectory
      - source
      - stripTrailingSlashes
      - update
      - verbose
  kubernetes-the-hard-way:tools:Rm:
    isComponent: true
    description: Abstraction over the `rm` utility on a remote system.
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      dir:
        type: boolean
        description: Corresponds to the --dir option.
      files:
        oneOf:
          - type: array
            items:
              type: string
          - type: string
        description: Corresponds to the [FILE] argument.
      force:
        type: boolean
        description: Corresponds to the --force option.
      onDelete:
        type: boolean
        plain: true
        description: Whether rm should be run when the resource is created or deleted.
      recursive:
        type: boolean
        description: Corresponds to the --recursive option.
      verbose:
        type: boolean
        description: Corresponds to the --verbose option.
    requiredInputs:
      - connection
      - files
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the command run on the remote system.
      dir:
        type: boolean
        description: Corresponds to the --dir option.
      files:
        type: array
        items:
          type: string
        description: Corresponds to the [FILE] argument.
      force:
        type: boolean
        description: Corresponds to the --force option.
      onDelete:
        type: boolean
        description: Whether rm should be run when the resource is created or deleted.
      recursive:
        type: boolean
        description: Corresponds to the --recursive option.
      verbose:
        type: boolean
        description: Corresponds to the --verbose option.
    required:
      - dir
      - files
      - force
      - onDelete
      - recursive
      - verbose
  kubernetes-the-hard-way:tools:Systemctl:
    isComponent: true
    description: Abstraction over the `systemctl` utility on a remote system.
    inputProperties:
      commands:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tools:SystemctlCommand"
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      serviceName:
        type: string
    requiredInputs:
      - commands
      - connection
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the command run on the remote system.
      commands:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tools:SystemctlCommand"
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      serviceName:
        type: string
    required:
      - command
      - commands
      - connection
  kubernetes-the-hard-way:tools:Tar:
    isComponent: true
    description: Abstracion over the `tar` utility on a remote system.
    inputProperties:
      archive:
        type: string
        description: Corresponds to the [ARCHIVE] argument.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      directory:
        type: string
        description: Corresponds to the --directory option.
      extract:
        type: boolean
        description: Corresponds to the --extract option.
      files:
        oneOf:
          - type: array
            items:
              type: string
          - type: string
        description: Corresponds to the [FILE] argument.
      gzip:
        type: boolean
        description: Corresponds to the --gzip option.
      stripComponents:
        type: integer
        description: Corresponds to the --strip-components option.
    requiredInputs:
      - archive
      - connection
    properties:
      archive:
        type: string
        description: Corresponds to the [ARCHIVE] argument.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the remote `tar` operation.
      directory:
        type: string
        description: Corresponds to the --directory option.
      extract:
        type: boolean
        description: Corresponds to the --extract option.
      files:
        type: array
        items:
          type: string
        description: Corresponds to the [FILE] argument.
      gzip:
        type: boolean
        description: Corresponds to the --gzip option.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
      stripComponents:
        type: integer
        description: Corresponds to the --strip-components option.
    required:
      - archive
      - command
      - extract
      - files
      - stderr
      - stdout
  kubernetes-the-hard-way:tools:Tee:
    isComponent: true
    description: Read from standard input and write to standard output and files.
    inputProperties:
      append:
        type: boolean
        description: Append to the given FILEs, do not overwrite.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      files:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
        description: The file(s) to write to.
      ignoreInterrupts:
        type: boolean
        description: Ignore interrupt signals.
      lifecycle:
        oneOf:
          - $ref: "#/types/kubernetes-the-hard-way:tools:CommandLifecycle"
            plain: true
          - type: array
            plain: true
            items:
              $ref: "#/types/kubernetes-the-hard-way:tools:CommandLifecycle"
              plain: true
        plain: true
        description: At what stage(s) in the resource lifecycle should the command be run.
      outputError:
        $ref: "#/types/kubernetes-the-hard-way:tools:TeeMode"
        description: Set behavior on write error.
      pipe:
        type: boolean
        description: Operate in a more appropriate MODE with pipes.
      stdin:
        type: string
      version:
        type: boolean
        description: Output version information and exit.
    requiredInputs:
      - connection
      - files
      - stdin
    properties:
      append:
        type: boolean
        description: Append to the given FILEs, do not overwrite.
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the command run on the remote system.
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      files:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
        description: The file(s) to write to.
      ignoreInterrupts:
        type: boolean
        description: Ignore interrupt signals.
      lifecycle:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:tools:CommandLifecycle"
        description: At what stage(s) in the resource lifecycle should the command be run.
      outputError:
        $ref: "#/types/kubernetes-the-hard-way:tools:TeeMode"
        description: Set behavior on write error.
      pipe:
        type: boolean
        description: Operate in a more appropriate MODE with pipes.
      stdin:
        type: string
    required:
      - append
      - command
      - connection
      - files
      - ignoreInterrupts
      - lifecycle
      - pipe
      - stdin
  kubernetes-the-hard-way:tools:Wget:
    isComponent: true
    description: Abstraction over the `wget` utility on a remote system.
    inputProperties:
      connection:
        $ref: "/command/v0.9.2/schema.json#/types/command:remote:Connection"
        description: Connection details for the remote system.
      directoryPrefix:
        type: string
        description: Corresponds to the --directory-prefix option.
      httpsOnly:
        type: boolean
        description: Corresponds to the --https-only option.
      noVerbose:
        type: boolean
        description: Corresponds t- the --no-verbose option.
      outputDocument:
        type: string
        description: Corresponds to the --output-document option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      timestamping:
        type: boolean
        description: Corresponds to the --timestamping option.
      url:
        type: string
        description: Corresponse to the [URL] argument.
    requiredInputs:
      - connection
      - url
    properties:
      command:
        $ref: "/command/v0.9.2/schema.json#/resources/command:remote:Command"
        description: Represents the remote `tar` operation.
      directoryPrefix:
        type: string
        description: Corresponds to the --directory-prefix option.
      httpsOnly:
        type: boolean
        description: Corresponds to the --https-only option.
      noVerbose:
        type: boolean
        description: Corresponds to the --no-verbose option.
      outputDocument:
        type: string
        description: Corresponds to the --output-document option.
      quiet:
        type: boolean
        description: Corresponds to the --quiet option.
      stderr:
        type: string
        description: The process' stderr.
      stdin:
        type: string
        description: The process' stdin.
      stdout:
        type: string
        description: The process' stdout.
      timestamping:
        type: boolean
        description: Corresponds to the --timestamping option.
      url:
        type: string
        description: Corresponse to the [URL] argument.
    required:
      - command
      - httpsOnly
      - quiet
      - stderr
      - stdout
      - timestamping
      - url
types:
  kubernetes-the-hard-way:tls:Algorithm:
    description: Private key algorithm.
    type: string
    enum:
      - value: RSA
      - value: ECDSA
      - value: ED25519
  kubernetes-the-hard-way:tls:AllowedUsage:
    description: Certificate allowed usage.
    type: string
    enum:
      - name: certSigning
        value: cert_signing
      - name: clientAuth
        value: client_auth
      - name: crlSigning
        value: crl_signing
      - name: digitalSignature
        value: digital_signature
      - name: keyEncipherment
        value: key_encipherment
      - name: serverAuth
        value: server_auth
  kubernetes-the-hard-way:remote:Architecture:
    description: CPU architecture
    type: string
    enum:
      - value: amd64
      - value: arm64
  # https://github.com/pulumi/pulumi-tls/blob/620cb07a95049672bdaab17bf86fade26db051b1/provider/cmd/pulumi-resource-tls/schema.json#L84-L127
  kubernetes-the-hard-way:index:CertRequestSubject:
    description: Polyfill for `tls.CertRequestSubject`.
    type: object
    properties:
      commonName:
        type: string
        description: "Distinguished name: CN"
      country:
        type: string
        description: "Distinguished name: C"
      locality:
        type: string
        description: "Distinguished name: L"
      organization:
        type: string
        description: "Distinguished name: O"
      organizationalUnit:
        type: string
        description: "Distinguished name: OU"
      postalCode:
        type: string
        description: "Distinguished name: PC"
      province:
        type: string
        description: "Distinguished name: ST"
      serialNumber:
        type: string
        description: "Distinguished name: SERIALNUMBER"
      streetAddresses:
        type: array
        items:
          type: string
        description: "Distinguished name: STREET"
  # https://github.com/pulumi/pulumi-command/blob/f122b7ae8d9f2b7649a28b170c6141216a209f04/provider/cmd/pulumi-resource-command/schema.json#L470-L522
  kubernetes-the-hard-way:index:Connection:
    description: Instructions for how to connect to a remote endpoint. Polyfill for `command.ConnectionArgs`.
    type: object
    properties:
      agentSocketPath:
        type: string
        description: SSH Agent socket path. Default to environment variable SSH_AUTH_SOCK if present.
      dialErrorLimit:
        type: integer
        default: 10
        description: Max allowed errors on trying to dial the remote host. -1 set count to unlimited. Default value is 10.
      host:
        type: string
        description: The address of the resource to connect to.
      password:
        type: string
        description: The password we should use for the connection.
      perDialTimeout:
        type: integer
        default: 15
        description: Max number of seconds for each dial attempt. 0 implies no maximum. Default value is 15 seconds.
      port:
        type: integer
        default: 22
        description: The port to connect to.
      privateKey:
        type: string
        description: The contents of an SSH key to use for the connection. This takes preference over the password if provided.
      privateKeyPassword:
        type: string
        description: The password to use in case the private key is encrypted.
      # This also causes the rogue module error
      # proxy:
      #   $ref: "/command/v0.9.2/schema.json#/types/command:remote:ProxyConnection"
      #   description: The connection settings for the bastion/proxy host.
      user:
        type: string
        default: root
        description: The user that we should use for the connection.
    required:
      - host
  kubernetes-the-hard-way:config:KubeconfigCluster:
    type: object
    properties:
      cluster:
        $ref: "#/types/kubernetes-the-hard-way:config:Cluster"
      name:
        type: string
    required:
      - cluster
      - name
  kubernetes-the-hard-way:config:Cluster:
    type: object
    properties:
      certificateAuthorityData:
        type: string
      server:
        type: string
    required:
      - certificateAuthorityData
      - server
  kubernetes-the-hard-way:tls:ClusterPkiNode:
    type: object
    description: Node inputs for the PKI.
    properties:
      ip:
        type: string
        description: The IP address of the node.
      role:
        $ref: "#/types/kubernetes-the-hard-way:tls:NodeRole"
  kubernetes-the-hard-way:config:KubeconfigContext:
    type: object
    properties:
      context:
        $ref: "#/types/kubernetes-the-hard-way:config:Context"
      name:
        type: string
    required:
      - context
      - name
  kubernetes-the-hard-way:config:Context:
    type: object
    properties:
      cluster:
        type: string
      user:
        type: string
    required:
      - cluster
      - user
  kubernetes-the-hard-way:tls:EcdsaCurve:
    description: TODO
    type: string
    enum:
      - value: P224
      - value: P256
      - value: P384
      - value: P521
  kubernetes-the-hard-way:tls:KeyPair:
    description: A certificate and key pair.
    type: object
    properties:
      certPem:
        type: string
        description: The PEM encoded certificate data
      key:
        $ref: "/tls/v5.0.2/schema.json#/resources/tls:index/privateKey:PrivateKey"
        description: The private key.
      privateKeyPem:
        type: string
        description: The PEM encoded private key data.
      publicKeyPem:
        type: string
        description: The PEM encoded public key data.
  kubernetes-the-hard-way:config:Kubeconfig:
    type: object
    properties:
      clusters:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:config:Cluster"
      contexts:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:config:Context"
      users:
        type: array
        items:
          $ref: "#/types/kubernetes-the-hard-way:config:User"
    required:
      - clusters
      - contexts
      - users
  kubernetes-the-hard-way:config:KubeconfigType:
    type: string
    enum:
      - value: worker
      - value: kube-proxy
      - value: kube-controller-manager
      - value: kube-scheduler
      - value: admin
    description: Kubeconfig type
  kubernetes-the-hard-way:config:KubeconfigAdminOptions:
    type: object
    properties:
      type:
        type: string
        const: admin
        plain: true
      publicIp:
        type: string
    required:
      - type
  kubernetes-the-hard-way:config:KubeconfigKubeControllerManagerOptions:
    type: object
    properties:
      type:
        type: string
        const: kube-controller-manager
        plain: true
      publicIp:
        type: string
    required:
      - type
  kubernetes-the-hard-way:config:KubeconfigKubeProxyOptions:
    type: object
    properties:
      type:
        type: string
        const: kube-proxy
        plain: true
      publicIp:
        type: string
    required:
      - type
  kubernetes-the-hard-way:config:KubeconfigKubeSchedulerOptions:
    type: object
    properties:
      type:
        type: string
        const: kube-scheduler
        plain: true
      publicIp:
        type: string
    required:
      - type
  kubernetes-the-hard-way:config:KubeconfigWorkerOptions:
    type: object
    properties:
      type:
        type: string
        const: worker
        plain: true
      name:
        type: string
      publicIp:
        type: string
    required:
      - name
      - publicIp
  kubernetes-the-hard-way:tls:NodeRole:
    description: TODO
    type: string
    enum:
      - value: controlplane
      - value: worker
  kubernetes-the-hard-way:index:ResourceOptions:
    description: Polyfill for `pulumi.ComponentResourceOptions`.
    type: object
    properties:
      parent:
        $ref: "pulumi.json#/Any"
  kubernetes-the-hard-way:config:KubeconfigUser:
    type: object
    properties:
      name:
        type: string
      user:
        $ref: "#/types/kubernetes-the-hard-way:config:User"
    required:
      - name
      - user
  kubernetes-the-hard-way:config:User:
    type: object
    properties:
      clientCertificateData:
        type: string
      clientKeyData:
        type: string
    required:
      - clientCertificateData
      - clientKeyData
  kubernetes-the-hard-way:remote:SystemdInstallSection:
    type: object
    description: https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#%5BInstall%5D%20Section%20Options
    properties:
      wantedBy:
        type: array
        items:
          type: string
        description: A symbolic link is created in the .wants/, .requires/, or .upholds/ directory
          of each of the listed units when this unit is installed by systemctl enable.
  kubernetes-the-hard-way:remote:SystemdServiceExitType:
    type: string
    enum:
      - value: main
      - value: cgroup
  kubernetes-the-hard-way:remote:SystemdServiceRestart:
    type: string
    enum:
      - value: "no"
      - value: on-success
      - value: on-failure
      - value: on-abnormal
      - value: on-watchdog
      - value: on-abort
      - value: always
  kubernetes-the-hard-way:remote:SystemdServiceType:
    type: string
    enum:
      - value: simple
      - value: exec
      - value: forking
      - value: oneshot
      - value: dbus
      - value: notify
      - value: notify-reload
      - value: idle
  kubernetes-the-hard-way:remote:SystemdServiceSection:
    type: object
    description: https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html#
    properties:
      execStart:
        type: string # This can technically be an array when type is oneshot
        description: Commands that are executed when this service is started.
      exitType:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdServiceExitType"
        description: Specifies when the manager should consider the service to be finished.
      restart:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdServiceRestart"
        description: Configures whether the service shall be restarted when the service process exits, is killed, or a timeout is reached.
      restartSec:
        type: string
        description: Configures the time to sleep before restarting a service (as configured with Restart=).
      type:
        $ref: "#/types/kubernetes-the-hard-way:remote:SystemdServiceType"
        description: Configures the mechanism via which the service notifies the manager that the service start-up has finished.
  kubernetes-the-hard-way:remote:SystemdUnitSection:
    type: object
    description: https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#
    properties:
      bindsTo:
        type: array
        items:
          type: string
        description: Configures requirement dependencies, very similar in style to Requires=.
      description:
        type: string
        description: A short human readable title of the unit.
      documentation:
        type: array
        items:
          type: string
        description: A space-separated list of URIs referencing documentation for this unit or its configuration.
      requires:
        type: array
        items:
          type: string
        description: Similar to Wants=, but declares a stronger requirement dependency.
      requisite:
        type: array
        items:
          type: string
        description: Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
      wants:
        type: array
        items:
          type: string
        description: Configures (weak) requirement dependencies on other units.
  kubernetes-the-hard-way:tools:EtcdctlCommand:
    type: string
    enum:
      - value: member
      - value: list
  kubernetes-the-hard-way:tls:Bundle:
    type: object
    properties:
      caPem:
        type: string
      certPem:
        type: string
      keyPem:
        type: string
    required:
      - caPem
      - certPem
      - keyPem
  kubernetes-the-hard-way:tools:SystemctlCommand:
    type: string
    enum:
      - value: daemon-reload
      - value: disable
      - value: enable
      - value: start
      - value: stop
  kubernetes-the-hard-way:tools:TeeMode:
    type: string
    enum:
      - value: warn
      - value: warn-nopipe
      - value: exit
      - value: exit-nopipe
  kubernetes-the-hard-way:tools:CommandLifecycle:
    type: string
    enum:
      - value: create
      - value: update
      - value: delete
  kubernetes-the-hard-way:tools:KubeApiServerCommandOptions:
    type: object
    properties:
      advertiseAddress:
        type: string
      allowPrivileged:
        type: boolean
      apiServerCount:
        type: number
      auditLogMaxAge:
        type: number
      auditLogMaxBackup:
        type: number
      auditLogMaxSize:
        type: number
      auditLogPath:
        type: string
      authorizationMode:
        type: array
        items:
          type: string
      bindAddress:
        type: string
      clientCaFile:
        type: string
      enableAdmissionPlugins:
        type: array
        items:
          type: string
      etcdCaFile:
        type: string
      etcdCertFile:
        type: string
      etcdServers:
        type: array
        items:
          type: string
      eventTtl:
        type: string
      encryptionProviderConfig:
        type: string
      kubeletCertificateAuthority:
        type: string
      kubeletClientCertificate:
        type: string
      kubeletClientKey:
        type: string
      runtimeConfig:
        type: string
      serviceAccountKeyFile:
        type: string
      serviceAccountSigningKeyFile:
        type: string
      serviceAccountIssuer:
        type: string
      serviceClusterIpRange:
        type: string
      serviceNodePortRange:
        type: string
      tlsCertFile:
        type: string
      tlsPrivateKeyFile:
        type: string
      v: # TODO: What does this refer to
        type: number
  kubernetes-the-hard-way:tools:KubeApiServerConfiguration:
    type: object
    properties:
      caPem:
        type: string
      caKeyPem:
        type: string
      keyPem:
        type: string
      certPem:
        type: string
      saKeyPem:
        type: string
      saPem:
        type: string
      encryptionConfig:
        type: string
  kubernetes-the-hard-way:tools:KubeControllerManagerCommandOptions:
    type: object
    properties:
      bindAddress:
        type: string
      clusterCidr:
        type: string
      clusterName:
        type: string
      clusterSigningCertFile:
        type: string
      clusterSigningKeyFile:
        type: string
      kubeconfig:
        type: string
      leaderElect:
        type: boolean
      rootCaFile:
        type: string
      serviceAccountPrivateKeyFile:
        type: string
      serviceClusterIpRange:
        type: string
      useServiceAccountCredentials:
        type: boolean
      v: # TODO: What does this refer to
        type: number
  kubernetes-the-hard-way:tools:KubeSchedulerCommandOptions:
    type: object
    properties:
      config:
        type: string
      v: # TODO: What does this refer to
        type: number
functions:
  kubernetes-the-hard-way:tls:ClusterPki/getKubeconfig:
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:tls:ClusterPki"
          description: The pki used to configure the kubeconfig.
        options:
          plain: true
          oneOf:
            - $ref: "#/types/kubernetes-the-hard-way:config:KubeconfigAdminOptions"
            - $ref: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeControllerManagerOptions"
            - $ref: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeProxyOptions"
            - $ref: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeSchedulerOptions"
            - $ref: "#/types/kubernetes-the-hard-way:config:KubeconfigWorkerOptions"
          discriminator:
            propertyName: type
            mapping:
              admin: "#/types/kubernetes-the-hard-way:config:KubeconfigAdminOptions"
              kube-controller-manager: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeControllerManagerOptions"
              kube-proxy: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeProxyOptions"
              kube-scheduler: "#/types/kubernetes-the-hard-way:config:KubeconfigKubeSchedulerOptions"
              worker: "#/types/kubernetes-the-hard-way:config:KubeconfigWorkerOptions"
      required:
        - __self__
        - options
    outputs:
      properties:
        result:
          $ref: "#/types/kubernetes-the-hard-way:config:Kubeconfig"
      required:
        - result
  kubernetes-the-hard-way:remote:EtcdInstall/etcdctl:
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:remote:EtcdInstall"
      required:
        - __self__
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:tools:Etcdctl"
      required:
        - result
  kubernetes-the-hard-way:remote:SystemdService/disable:
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:remote:SystemdService"
      required:
        - __self__
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:tools:Systemctl"
      required:
        - result
  kubernetes-the-hard-way:remote:SystemdService/enable:
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:remote:SystemdService"
      required:
        - __self__
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:tools:Systemctl"
      required:
        - result
  kubernetes-the-hard-way:remote:SystemdService/start:
    inputs:
      properties:
        __self__:
          $ref: "#/resources/kubernetes-the-hard-way:remote:SystemdService"
      required:
        - __self__
    outputs:
      properties:
        result:
          $ref: "#/resources/kubernetes-the-hard-way:tools:Systemctl"
      required:
        - result
