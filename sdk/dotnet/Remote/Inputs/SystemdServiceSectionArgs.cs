// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Remote.Inputs
{

    /// <summary>
    /// https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html#
    /// </summary>
    public sealed class SystemdServiceSectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Commands that are executed when this service is started.
        /// </summary>
        [Input("execStart")]
        public Input<string>? ExecStart { get; set; }

        /// <summary>
        /// Specifies when the manager should consider the service to be finished.
        /// </summary>
        [Input("exitType")]
        public Input<UnMango.KubernetesTheHardWay.Remote.SystemdServiceExitType>? ExitType { get; set; }

        /// <summary>
        /// Configures whether the service shall be restarted when the service process exits, is killed, or a timeout is reached.
        /// </summary>
        [Input("restart")]
        public Input<UnMango.KubernetesTheHardWay.Remote.SystemdServiceRestart>? Restart { get; set; }

        /// <summary>
        /// Configures the time to sleep before restarting a service (as configured with Restart=).
        /// </summary>
        [Input("restartSec")]
        public Input<string>? RestartSec { get; set; }

        /// <summary>
        /// Configures the mechanism via which the service notifies the manager that the service start-up has finished.
        /// </summary>
        [Input("type")]
        public Input<UnMango.KubernetesTheHardWay.Remote.SystemdServiceType>? Type { get; set; }

        public SystemdServiceSectionArgs()
        {
        }
        public static new SystemdServiceSectionArgs Empty => new SystemdServiceSectionArgs();
    }
}
