// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Remote
{
    /// <summary>
    /// Configures etcd on a remote system.
    /// </summary>
    [KubernetesTheHardWayResourceType("kubernetes-the-hard-way:remote:EtcdConfiguration")]
    public partial class EtcdConfiguration : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// The remote certificate authority file.
        /// </summary>
        [Output("caFile")]
        public Output<UnMango.KubernetesTheHardWay.Remote.File> CaFile { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded certificate authority data.
        /// </summary>
        [Output("caPem")]
        public Output<string> CaPem { get; private set; } = null!;

        /// <summary>
        /// The remote certificate file.
        /// </summary>
        [Output("certFile")]
        public Output<UnMango.KubernetesTheHardWay.Remote.File> CertFile { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded certificate data.
        /// </summary>
        [Output("certPem")]
        public Output<string> CertPem { get; private set; } = null!;

        /// <summary>
        /// The directory to store etcd configuration.
        /// </summary>
        [Output("configurationDirectory")]
        public Output<string> ConfigurationDirectory { get; private set; } = null!;

        /// <summary>
        /// The configuration mkdir operation.
        /// </summary>
        [Output("configurationMkdir")]
        public Output<UnMango.KubernetesTheHardWay.Tools.Mkdir> ConfigurationMkdir { get; private set; } = null!;

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Output("connection")]
        public Output<Pulumi.Command.Remote.Outputs.Connection> Connection { get; private set; } = null!;

        /// <summary>
        /// The directory etcd will store its data.
        /// </summary>
        [Output("dataDirectory")]
        public Output<string> DataDirectory { get; private set; } = null!;

        /// <summary>
        /// The data mkdir operation.
        /// </summary>
        [Output("dataMkdir")]
        public Output<UnMango.KubernetesTheHardWay.Tools.Mkdir> DataMkdir { get; private set; } = null!;

        /// <summary>
        /// The path to the `etcd` binary.
        /// </summary>
        [Output("etcdPath")]
        public Output<string> EtcdPath { get; private set; } = null!;

        /// <summary>
        /// The IP used to serve client requests and communicate with etcd peers.
        /// </summary>
        [Output("internalIp")]
        public Output<string> InternalIp { get; private set; } = null!;

        /// <summary>
        /// The remote key file.
        /// </summary>
        [Output("keyFile")]
        public Output<UnMango.KubernetesTheHardWay.Remote.File> KeyFile { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded key data.
        /// </summary>
        [Output("keyPem")]
        public Output<string> KeyPem { get; private set; } = null!;


        /// <summary>
        /// Create a EtcdConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EtcdConfiguration(string name, EtcdConfigurationArgs args, ComponentResourceOptions? options = null)
            : base("kubernetes-the-hard-way:remote:EtcdConfiguration", name, args ?? new EtcdConfigurationArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/UnstoppableMango",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class EtcdConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The PEM encoded certificate authority data.
        /// </summary>
        [Input("caPem", required: true)]
        public Input<string> CaPem { get; set; } = null!;

        /// <summary>
        /// The PEM encoded certificate data.
        /// </summary>
        [Input("certPem", required: true)]
        public Input<string> CertPem { get; set; } = null!;

        /// <summary>
        /// The directory to store etcd configuration.
        /// </summary>
        [Input("configurationDirectory")]
        public Input<string>? ConfigurationDirectory { get; set; }

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Input("connection", required: true)]
        public Input<Pulumi.Command.Remote.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        /// <summary>
        /// The directory etcd will store its data.
        /// </summary>
        [Input("dataDirectory")]
        public Input<string>? DataDirectory { get; set; }

        /// <summary>
        /// The path to the `etcd` binary.
        /// </summary>
        [Input("etcdPath", required: true)]
        public Input<string> EtcdPath { get; set; } = null!;

        /// <summary>
        /// The IP used to serve client requests and communicate with etcd peers.
        /// </summary>
        [Input("internalIp", required: true)]
        public Input<string> InternalIp { get; set; } = null!;

        /// <summary>
        /// The PEM encoded key data.
        /// </summary>
        [Input("keyPem", required: true)]
        public Input<string> KeyPem { get; set; } = null!;

        public EtcdConfigurationArgs()
        {
            ConfigurationDirectory = "/etc/etcd";
            DataDirectory = "/var/lib/etcd";
        }
        public static new EtcdConfigurationArgs Empty => new EtcdConfigurationArgs();
    }
}
