// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Remote
{
    /// <summary>
    /// Configures Kubernetes Control Plane on a remote system.
    /// </summary>
    [KubernetesTheHardWayResourceType("kubernetes-the-hard-way:remote:KubernetesControlPlaneConfiguration")]
    public partial class KubernetesControlPlaneConfiguration : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// The PEM encoded certificate authority key.
        /// </summary>
        [Output("caKey")]
        public Output<string> CaKey { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded certificate authority data.
        /// </summary>
        [Output("caPem")]
        public Output<string> CaPem { get; private set; } = null!;

        /// <summary>
        /// The directory to store Kubernetes Control Plane configuration.
        /// </summary>
        [Output("configurationDirectory")]
        public Output<string?> ConfigurationDirectory { get; private set; } = null!;

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Output("connection")]
        public Output<Pulumi.Command.Remote.Outputs.Connection> Connection { get; private set; } = null!;

        /// <summary>
        /// The YAML encryption configuration manifest.
        /// </summary>
        [Output("encryptionConfig")]
        public Output<string> EncryptionConfig { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded Kube API Server certificate key.
        /// </summary>
        [Output("kubeApiServerKey")]
        public Output<string> KubeApiServerKey { get; private set; } = null!;

        /// <summary>
        /// The path to the 'kube-apiserver' binary.
        /// </summary>
        [Output("kubeApiServerPath")]
        public Output<string?> KubeApiServerPath { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded Kube API Server certificate data.
        /// </summary>
        [Output("kubeApiServerPem")]
        public Output<string> KubeApiServerPem { get; private set; } = null!;

        /// <summary>
        /// The kube-controller-manager kubeconfig configuration
        /// </summary>
        [Output("kubeControllerManagerKubeconfig")]
        public Output<UnMango.KubernetesTheHardWay.Config.Outputs.Kubeconfig> KubeControllerManagerKubeconfig { get; private set; } = null!;

        /// <summary>
        /// The path to the 'kube-controller-manager' binary.
        /// </summary>
        [Output("kubeControllerManagerPath")]
        public Output<string?> KubeControllerManagerPath { get; private set; } = null!;

        /// <summary>
        /// The kube-scheduler configuration manifest.
        /// </summary>
        [Output("kubeSchedulerConfig")]
        public Output<string> KubeSchedulerConfig { get; private set; } = null!;

        /// <summary>
        /// The kube-scheduler kubeconfig configuration
        /// </summary>
        [Output("kubeSchedulerKubeconfig")]
        public Output<UnMango.KubernetesTheHardWay.Config.Outputs.Kubeconfig> KubeSchedulerKubeconfig { get; private set; } = null!;

        /// <summary>
        /// The path to the 'kube-scheduler' binary.
        /// </summary>
        [Output("kubeSchedulerPath")]
        public Output<string?> KubeSchedulerPath { get; private set; } = null!;

        /// <summary>
        /// The path to the 'kubectl' binary.
        /// </summary>
        [Output("kubectlPath")]
        public Output<string?> KubectlPath { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded Service Accounts certificate key.
        /// </summary>
        [Output("serviceAccountsKey")]
        public Output<string> ServiceAccountsKey { get; private set; } = null!;

        /// <summary>
        /// The PEM encoded Service Accounts certificate data.
        /// </summary>
        [Output("serviceAccountsPem")]
        public Output<string> ServiceAccountsPem { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesControlPlaneConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesControlPlaneConfiguration(string name, KubernetesControlPlaneConfigurationArgs args, ComponentResourceOptions? options = null)
            : base("kubernetes-the-hard-way:remote:KubernetesControlPlaneConfiguration", name, args ?? new KubernetesControlPlaneConfigurationArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/UnstoppableMango",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class KubernetesControlPlaneConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The PEM encoded certificate authority key.
        /// </summary>
        [Input("caKey", required: true)]
        public Input<string> CaKey { get; set; } = null!;

        /// <summary>
        /// The PEM encoded certificate authority data.
        /// </summary>
        [Input("caPem", required: true)]
        public Input<string> CaPem { get; set; } = null!;

        /// <summary>
        /// The directory to store Kubernetes Control Plane configuration.
        /// </summary>
        [Input("configurationDirectory")]
        public Input<string>? ConfigurationDirectory { get; set; }

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Input("connection", required: true)]
        public Input<Pulumi.Command.Remote.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        /// <summary>
        /// The YAML encryption configuration manifest.
        /// </summary>
        [Input("encryptionConfig", required: true)]
        public Input<string> EncryptionConfig { get; set; } = null!;

        /// <summary>
        /// The PEM encoded Kube API Server certificate key.
        /// </summary>
        [Input("kubeApiServerKey", required: true)]
        public Input<string> KubeApiServerKey { get; set; } = null!;

        /// <summary>
        /// The path to the 'kube-apiserver' binary.
        /// </summary>
        [Input("kubeApiServerPath")]
        public Input<string>? KubeApiServerPath { get; set; }

        /// <summary>
        /// The PEM encoded Kube API Server certificate data.
        /// </summary>
        [Input("kubeApiServerPem", required: true)]
        public Input<string> KubeApiServerPem { get; set; } = null!;

        /// <summary>
        /// The kube-controller-manager kubeconfig configuration
        /// </summary>
        [Input("kubeControllerManagerKubeconfig", required: true)]
        public Input<UnMango.KubernetesTheHardWay.Config.Inputs.KubeconfigArgs> KubeControllerManagerKubeconfig { get; set; } = null!;

        /// <summary>
        /// The path to the 'kube-controller-manager' binary.
        /// </summary>
        [Input("kubeControllerManagerPath")]
        public Input<string>? KubeControllerManagerPath { get; set; }

        /// <summary>
        /// The kube-scheduler configuration manifest.
        /// </summary>
        [Input("kubeSchedulerConfig", required: true)]
        public Input<string> KubeSchedulerConfig { get; set; } = null!;

        /// <summary>
        /// The kube-scheduler kubeconfig configuration
        /// </summary>
        [Input("kubeSchedulerKubeconfig", required: true)]
        public Input<UnMango.KubernetesTheHardWay.Config.Inputs.KubeconfigArgs> KubeSchedulerKubeconfig { get; set; } = null!;

        /// <summary>
        /// The path to the 'kube-scheduler' binary.
        /// </summary>
        [Input("kubeSchedulerPath")]
        public Input<string>? KubeSchedulerPath { get; set; }

        /// <summary>
        /// The path to the 'kubectl' binary.
        /// </summary>
        [Input("kubectlPath")]
        public Input<string>? KubectlPath { get; set; }

        /// <summary>
        /// The PEM encoded Service Accounts certificate key.
        /// </summary>
        [Input("serviceAccountsKey", required: true)]
        public Input<string> ServiceAccountsKey { get; set; } = null!;

        /// <summary>
        /// The PEM encoded Service Accounts certificate data.
        /// </summary>
        [Input("serviceAccountsPem", required: true)]
        public Input<string> ServiceAccountsPem { get; set; } = null!;

        public KubernetesControlPlaneConfigurationArgs()
        {
            ConfigurationDirectory = "/etc/kubernetes/config";
        }
        public static new KubernetesControlPlaneConfigurationArgs Empty => new KubernetesControlPlaneConfigurationArgs();
    }
}
