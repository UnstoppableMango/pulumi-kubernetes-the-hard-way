// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Remote
{
    /// <summary>
    /// Kube API Server systemd service file. Will likely get replaced with a static function when https://github.com/pulumi/pulumi/issues/7583 gets resolved.
    /// </summary>
    [KubernetesTheHardWayResourceType("kubernetes-the-hard-way:remote:KubeApiServerService")]
    public partial class KubeApiServerService : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// If set, any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate
        /// </summary>
        [Output("clientCaFile")]
        public Output<string?> ClientCaFile { get; private set; } = null!;

        /// <summary>
        /// KubeApiServer configuration.
        /// </summary>
        [Output("configuration")]
        public Output<UnMango.KubernetesTheHardWay.Remote.Outputs.KubeApiServerProps> Configuration { get; private set; } = null!;

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Output("connection")]
        public Output<Pulumi.Command.Remote.Outputs.Connection> Connection { get; private set; } = null!;

        /// <summary>
        /// Optional systemd unit description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The location to create the service file.
        /// </summary>
        [Output("directory")]
        public Output<string?> Directory { get; private set; } = null!;

        /// <summary>
        /// Optional systemd unit documentation
        /// </summary>
        [Output("documentation")]
        public Output<string?> Documentation { get; private set; } = null!;

        /// <summary>
        /// List of etcd servers to connect with (scheme://ip:port), comma separatedList of etcd servers to connect with (scheme://ip:port), comma separated
        /// </summary>
        [Output("etcdServers")]
        public Output<string?> EtcdServers { get; private set; } = null!;

        /// <summary>
        /// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
        /// </summary>
        [Output("restart")]
        public Output<UnMango.KubernetesTheHardWay.Remote.SystemdServiceRestart?> Restart { get; private set; } = null!;

        /// <summary>
        /// Optionally override the systemd service RestartSec. Defaults to `5`.
        /// </summary>
        [Output("restartSec")]
        public Output<string?> RestartSec { get; private set; } = null!;

        /// <summary>
        /// The remote systemd service.
        /// </summary>
        [Output("service")]
        public Output<UnMango.KubernetesTheHardWay.Remote.SystemdService> Service { get; private set; } = null!;

        /// <summary>
        /// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
        /// </summary>
        [Output("wantedBy")]
        public Output<string?> WantedBy { get; private set; } = null!;


        /// <summary>
        /// Create a KubeApiServerService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubeApiServerService(string name, KubeApiServerServiceArgs args, ComponentResourceOptions? options = null)
            : base("kubernetes-the-hard-way:remote:KubeApiServerService", name, args ?? new KubeApiServerServiceArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/UnstoppableMango",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class KubeApiServerServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set, any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate
        /// </summary>
        [Input("clientCaFile")]
        public Input<string>? ClientCaFile { get; set; }

        /// <summary>
        /// KubeApiServer configuration.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<UnMango.KubernetesTheHardWay.Remote.Inputs.KubeApiServerProps> Configuration { get; set; } = null!;

        /// <summary>
        /// The parameters with which to connect to the remote host.
        /// </summary>
        [Input("connection", required: true)]
        public Input<Pulumi.Command.Remote.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        /// <summary>
        /// Optional systemd unit description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The location to create the service file.
        /// </summary>
        [Input("directory")]
        public Input<string>? Directory { get; set; }

        /// <summary>
        /// Optional systemd unit documentation
        /// </summary>
        [Input("documentation")]
        public Input<string>? Documentation { get; set; }

        /// <summary>
        /// List of etcd servers to connect with (scheme://ip:port), comma separatedList of etcd servers to connect with (scheme://ip:port), comma separated
        /// </summary>
        [Input("etcdServers")]
        public Input<string>? EtcdServers { get; set; }

        /// <summary>
        /// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
        /// </summary>
        [Input("restart")]
        public Input<UnMango.KubernetesTheHardWay.Remote.SystemdServiceRestart>? Restart { get; set; }

        /// <summary>
        /// Optionally override the systemd service RestartSec. Defaults to `5`.
        /// </summary>
        [Input("restartSec")]
        public Input<string>? RestartSec { get; set; }

        /// <summary>
        /// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
        /// </summary>
        [Input("wantedBy")]
        public Input<string>? WantedBy { get; set; }

        public KubeApiServerServiceArgs()
        {
        }
        public static new KubeApiServerServiceArgs Empty => new KubeApiServerServiceArgs();
    }
}
