// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Config.Outputs
{

    [OutputType]
    public sealed class KubeletConfiguration
    {
        public readonly string ApiVersion;
        public readonly Outputs.KubeletConfigurationAuthentication Authentication;
        public readonly Outputs.KubeletConfigurationAuthorization Authorization;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string CgroupDriver;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly ImmutableArray<string> ClusterDNS;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string ClusterDomain;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string ContainerRuntimeEndpoint;
        public readonly string Kind;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string PodCIDR;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string ResolvConf;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string RuntimeRequestTimeout;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string TlsCertFile;
        /// <summary>
        /// TODO
        /// </summary>
        public readonly string TlsPrivateKeyFile;

        [OutputConstructor]
        private KubeletConfiguration(
            string apiVersion,

            Outputs.KubeletConfigurationAuthentication authentication,

            Outputs.KubeletConfigurationAuthorization authorization,

            string cgroupDriver,

            ImmutableArray<string> clusterDNS,

            string clusterDomain,

            string containerRuntimeEndpoint,

            string kind,

            string podCIDR,

            string resolvConf,

            string runtimeRequestTimeout,

            string tlsCertFile,

            string tlsPrivateKeyFile)
        {
            ApiVersion = apiVersion;
            Authentication = authentication;
            Authorization = authorization;
            CgroupDriver = cgroupDriver;
            ClusterDNS = clusterDNS;
            ClusterDomain = clusterDomain;
            ContainerRuntimeEndpoint = containerRuntimeEndpoint;
            Kind = kind;
            PodCIDR = podCIDR;
            ResolvConf = resolvConf;
            RuntimeRequestTimeout = runtimeRequestTimeout;
            TlsCertFile = tlsCertFile;
            TlsPrivateKeyFile = tlsPrivateKeyFile;
        }
    }
}
