// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Tools.Inputs
{

    /// <summary>
    /// Abstraction over the `hostnamectl` utility on a remote system.
    /// </summary>
    public sealed class HostnamectlOptsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The argument for the specified `command`.
        /// </summary>
        [Input("arg")]
        public Input<string>? Arg { get; set; }

        /// <summary>
        /// Corresponds to the {COMMAND} argument.
        /// </summary>
        [Input("command", required: true)]
        public Input<UnMango.KubernetesTheHardWay.Tools.HostnamectlCommand> Command { get; set; } = null!;

        /// <summary>
        /// Print a short help text and exit.
        /// </summary>
        [Input("help")]
        public Input<bool>? Help { get; set; }

        /// <summary>
        /// Execute the operation remotely. Specify a hostname, or a username and hostname separated by '@', to connect to.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Shows output formatted as JSON.
        /// </summary>
        [Input("json")]
        public Input<UnMango.KubernetesTheHardWay.Tools.HostnamectlJsonMode>? Json { get; set; }

        /// <summary>
        /// Execute operation on a local container. Specify a container name to connect to, optionally prefixed by a user name to connect as and a separating '@' character.
        /// </summary>
        [Input("machine")]
        public Input<string>? Machine { get; set; }

        /// <summary>
        /// Do not query the user for authentication for privileged operations.
        /// </summary>
        [Input("noAskPassword")]
        public Input<bool>? NoAskPassword { get; set; }

        /// <summary>
        /// If status is invoked (or no explicit command is given) and one of these switches is specified, hostnamectl will print out just this selected hostname. Same as `static` and `transient`.
        /// </summary>
        [Input("pretty")]
        public Input<bool>? Pretty { get; set; }

        /// <summary>
        /// If status is invoked (or no explicit command is given) and one of these switches is specified, hostnamectl will print out just this selected hostname. Same as `transient` and `pretty`.
        /// </summary>
        [Input("static")]
        public Input<bool>? Static { get; set; }

        /// <summary>
        /// If status is invoked (or no explicit command is given) and one of these switches is specified, hostnamectl will print out just this selected hostname. Same as `static` and `pretty`.
        /// </summary>
        [Input("transient")]
        public Input<bool>? Transient { get; set; }

        /// <summary>
        /// Print a short version string and exit.
        /// </summary>
        [Input("version")]
        public Input<bool>? Version { get; set; }

        public HostnamectlOptsArgs()
        {
        }
        public static new HostnamectlOptsArgs Empty => new HostnamectlOptsArgs();
    }
}
