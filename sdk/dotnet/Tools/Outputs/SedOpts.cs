// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Tools.Outputs
{

    /// <summary>
    /// Abstraction over the `sed` utility on a remote system.
    /// </summary>
    [OutputType]
    public sealed class SedOpts
    {
        /// <summary>
        /// annotate program execution.
        /// </summary>
        public readonly bool? Debug;
        /// <summary>
        /// add the script to the commands to be executed.
        /// </summary>
        public readonly ImmutableArray<string> Expressions;
        /// <summary>
        /// add the contents of script-file to the commands to be executed.
        /// </summary>
        public readonly ImmutableArray<string> Files;
        /// <summary>
        /// follow symlinks when processing in place
        /// </summary>
        public readonly bool? FollowSymlinks;
        /// <summary>
        /// display this help and exit.
        /// </summary>
        public readonly bool? Help;
        /// <summary>
        /// edit files in place (makes backup if SUFFIX supplied)
        /// </summary>
        public readonly string? InPlace;
        /// <summary>
        /// corresponds to the [input-file]... argument(s).
        /// </summary>
        public readonly ImmutableArray<string> InputFiles;
        /// <summary>
        /// specify the desired line-wrap length for the `l' command
        /// </summary>
        public readonly int? LineLength;
        /// <summary>
        /// separate lines by NUL characters
        /// </summary>
        public readonly bool? NullData;
        /// <summary>
        /// disable all GNU extensions.
        /// </summary>
        public readonly bool? Posix;
        /// <summary>
        /// suppress automatic printing of pattern space. Same as `silent`.
        /// </summary>
        public readonly bool? Quiet;
        /// <summary>
        /// use extended regular expressions in the script (for portability use POSIX -E).
        /// </summary>
        public readonly bool? RegexpExtended;
        /// <summary>
        /// operate in sandbox mode (disable e/r/w commands).
        /// </summary>
        public readonly bool? Sandbox;
        /// <summary>
        /// script only if no other script.
        /// </summary>
        public readonly string? Script;
        /// <summary>
        /// consider files as separate rather than as a single, continuous long stream.
        /// </summary>
        public readonly bool? Separate;
        /// <summary>
        /// suppress automatic printing of pattern space. Same as `quiet`.
        /// </summary>
        public readonly bool? Silent;
        /// <summary>
        /// load minimal amounts of data from the input files and flush the output buffers more often.
        /// </summary>
        public readonly bool? Unbuffered;
        /// <summary>
        /// output version information and exit.
        /// </summary>
        public readonly bool? Version;

        [OutputConstructor]
        private SedOpts(
            bool? debug,

            ImmutableArray<string> expressions,

            ImmutableArray<string> files,

            bool? followSymlinks,

            bool? help,

            string? inPlace,

            ImmutableArray<string> inputFiles,

            int? lineLength,

            bool? nullData,

            bool? posix,

            bool? quiet,

            bool? regexpExtended,

            bool? sandbox,

            string? script,

            bool? separate,

            bool? silent,

            bool? unbuffered,

            bool? version)
        {
            Debug = debug;
            Expressions = expressions;
            Files = files;
            FollowSymlinks = followSymlinks;
            Help = help;
            InPlace = inPlace;
            InputFiles = inputFiles;
            LineLength = lineLength;
            NullData = nullData;
            Posix = posix;
            Quiet = quiet;
            RegexpExtended = regexpExtended;
            Sandbox = sandbox;
            Script = script;
            Separate = separate;
            Silent = silent;
            Unbuffered = unbuffered;
            Version = version;
        }
    }
}
