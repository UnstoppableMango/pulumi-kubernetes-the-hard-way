// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Tools.Outputs
{

    /// <summary>
    /// Abstraction over the `curl` utility on a remote system. Transfer a URL.
    /// </summary>
    [OutputType]
    public sealed class CurlOpts
    {
        /// <summary>
        /// (HTTP) Connect through an abstract Unix domain socket, instead of using the network.
        /// </summary>
        public readonly string? AbstractUnixSocket;
        /// <summary>
        /// (HTTPS)  This  option enables the alt-svc parser in curl.
        /// </summary>
        public readonly string? AltSvc;
        /// <summary>
        /// (HTTP) Tells curl to figure out authentication method by itself, and use the most secure one the remote site claims to support.
        /// </summary>
        public readonly bool? AnyAuth;
        /// <summary>
        /// (FTP SFTP) When used in an upload, this makes curl append to the target file instead of overwriting it.
        /// </summary>
        public readonly bool? Append;
        /// <summary>
        /// Use AWS V4 signature authentication in the transfer.
        /// </summary>
        public readonly string? AwsSigv4;
        /// <summary>
        /// (HTTP) Tells curl to use HTTP Basic authentication with the remote host.
        /// </summary>
        public readonly bool? Basic;
        /// <summary>
        /// (TLS)  Tells curl to use the specified certificate file to verify the peer.
        /// </summary>
        public readonly string? Cacert;
        /// <summary>
        /// (TLS) Tells curl to use the specified certificate directory to verify the peer.
        /// </summary>
        public readonly string? Capath;
        /// <summary>
        /// (TLS)  Tells  curl to use the specified client certificate file when getting a file with HTTPS, FTPS or another SSL-based protocol.
        /// </summary>
        public readonly string? Cert;
        /// <summary>
        /// (TLS) Tells curl to verify the status of the server certificate by using the Certificate Status Request (aka. OCSP stapling) TLS extension.
        /// </summary>
        public readonly bool? CertStatus;
        /// <summary>
        /// (TLS) Tells curl what type the provided client certificate is using.
        /// </summary>
        public readonly UnMango.KubernetesTheHardWay.Tools.CurlCertType? CertType;
        /// <summary>
        /// (TLS) Specifies which ciphers to use in the connection.
        /// </summary>
        public readonly string? Ciphers;
        /// <summary>
        /// (HTTP) Request a compressed response using one of the algorithms curl supports, and automatically decompress the content.
        /// </summary>
        public readonly bool? Compressed;
        /// <summary>
        /// (SCP SFTP) Enables built-in SSH compression.
        /// </summary>
        public readonly bool? CompressedSsh;
        /// <summary>
        /// Specify a text file to read curl arguments from.
        /// </summary>
        public readonly string? Config;
        /// <summary>
        /// Maximum  time  in seconds that you allow curl's connection to take.
        /// </summary>
        public readonly int? ConnectTimeout;
        /// <summary>
        /// For a request to the given HOST1:PORT1 pair, connect to HOST2:PORT2 instead.
        /// </summary>
        public readonly string? ConnectTo;
        /// <summary>
        /// Continue/Resume a previous file transfer at the given offset.
        /// </summary>
        public readonly string? ContinueAt;
        /// <summary>
        /// (HTTP) Pass the data to the HTTP server in the Cookie header.
        /// </summary>
        public readonly string? Cookie;
        /// <summary>
        /// (HTTP)  Specify  to which file you want curl to write all cookies after a completed operation.
        /// </summary>
        public readonly string? CookieJar;
        /// <summary>
        /// When used in conjunction with the -o, --output option, curl will create the necessary local directory hierarchy as needed.
        /// </summary>
        public readonly bool? CreateDirs;
        /// <summary>
        /// (SFTP SCP FILE) When curl is used to create files remotely using one of the supported protocols, this option allows the user to set which 'mode' to set on the file at creation time, instead of the default 0644.
        /// </summary>
        public readonly string? CreateFileMode;
        /// <summary>
        /// (FTP SMTP) Convert LF to CRLF in upload. Useful for MVS (OS/390).
        /// </summary>
        public readonly bool? Crlf;
        /// <summary>
        /// (TLS) Provide a file using PEM format with a Certificate Revocation List that may specify peer certificates that are to be considered revoked.
        /// </summary>
        public readonly string? CrlfFile;
        /// <summary>
        /// (TLS)  Tells curl to request specific curves to use during SSL session establishment according to RFC 8422, 5.1.
        /// </summary>
        public readonly string? Curves;
        /// <summary>
        /// (HTTP  MQTT) Sends the specified data in a POST request to the HTTP server, in the same way that a browser does when a user has filled in an HTML form and presses the submit button.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// (HTTP) This is just an alias for -d, --data.
        /// </summary>
        public readonly string? DataAscii;
        /// <summary>
        /// (HTTP) This posts data exactly as specified with no extra processing whatsoever.
        /// </summary>
        public readonly string? DataBinary;
        /// <summary>
        /// (HTTP) This posts data similarly to -d, --data but without the special interpretation of the @ character.
        /// </summary>
        public readonly string? DataRaw;
        /// <summary>
        /// (HTTP) This posts data, similar to the other -d, --data options with the exception that this performs URL-encoding.
        /// </summary>
        public readonly string? DataUrlEncode;
        /// <summary>
        /// (GSS/kerberos) Set LEVEL to tell the server what it is allowed to delegate when it comes to user credentials.
        /// </summary>
        public readonly UnMango.KubernetesTheHardWay.Tools.CurlDelegationLevel? Delegation;
        /// <summary>
        /// (HTTP) Enables HTTP Digest authentication.
        /// </summary>
        public readonly bool? Digest;
        /// <summary>
        /// If used as the first parameter on the command line, the curlrc config file will not be read and used.
        /// </summary>
        public readonly bool? Disable;
        /// <summary>
        /// (FTP) Tell curl to disable the use of the EPRT and LPRT commands when doing active FTP transfers
        /// </summary>
        public readonly bool? DisableEprt;
        /// <summary>
        /// (FTP)  Tell  curl to disable the use of the EPSV command when doing passive FTP transfers
        /// </summary>
        public readonly bool? DisableEpsv;
        /// <summary>
        /// (HTTP) This tells curl to exit if passed a url containing a username.
        /// </summary>
        public readonly bool? DisallowUsernameInUrl;
        /// <summary>
        /// (DNS)  Tell  curl  to send outgoing DNS requests through &lt;interface&gt;.
        /// </summary>
        public readonly string? DnsInterface;
        /// <summary>
        /// (DNS) Tell curl to bind to &lt;ip-address&gt; when making IPv4 DNS requests, so that the DNS requests originate from this address.
        /// </summary>
        public readonly string? DnsIpv4Addr;
        /// <summary>
        /// (DNS) Tell curl to bind to &lt;ip-address&gt; when making IPv6 DNS requests, so that the DNS requests originate from this address.
        /// </summary>
        public readonly string? DnsIpv6Addr;
        /// <summary>
        /// Set the list of DNS servers to be used instead of the system default.
        /// </summary>
        public readonly string? DnsServers;
        /// <summary>
        /// Same as --cert-status but used for DoH (DNS-over-HTTPS).
        /// </summary>
        public readonly bool? DohCertStatus;
        /// <summary>
        /// Same as -k, --insecure but used for DoH (DNS-over-HTTPS).
        /// </summary>
        public readonly bool? DohInsecure;
        /// <summary>
        /// Specifies which DNS-over-HTTPS (DoH) server to use to resolve hostnames, instead of using the default name resolver mechanism.
        /// </summary>
        public readonly string? DohUrl;
        /// <summary>
        /// (HTTP FTP) Write the received protocol headers to the specified file.
        /// </summary>
        public readonly string? DumpHeader;
        /// <summary>
        /// (TLS) Specify the path name to the Entropy Gathering Daemon socket.
        /// </summary>
        public readonly string? EgdFile;
        /// <summary>
        /// (TLS) Select the OpenSSL crypto engine to use for cipher operations.
        /// </summary>
        public readonly string? Engine;
        /// <summary>
        /// (HTTP) This option makes a conditional HTTP request for the specific ETag read from the given file by sending a custom If-None-Match header using the stored ETag.
        /// </summary>
        public readonly string? EtagCompare;
        /// <summary>
        /// (HTTP) This option saves an HTTP ETag to the specified file.
        /// </summary>
        public readonly string? EtagSave;
        /// <summary>
        /// (HTTP)  Maximum  time in seconds that you allow curl to wait for a 100-continue response when curl emits an Expects: 100-continue header in its request.
        /// </summary>
        public readonly int? Expect100Timeout;
        /// <summary>
        /// (HTTP) Fail silently (no output at all) on server errors.
        /// </summary>
        public readonly bool? Fail;
        /// <summary>
        /// Fail and exit on the first detected transfer error.
        /// </summary>
        public readonly bool? FailEarly;
        /// <summary>
        /// (HTTP)  Return an error on server errors where the HTTP response code is 400 or greater).
        /// </summary>
        public readonly bool? FailWithBody;
        /// <summary>
        /// (TLS) Tells curl to use false start during the TLS handshake.
        /// </summary>
        public readonly bool? FalseStart;
        /// <summary>
        /// (HTTP SMTP IMAP) For HTTP protocol family, this lets curl emulate a filled-in form in which a user has pressed the submit button.
        /// </summary>
        public readonly string? Form;
        /// <summary>
        /// (HTTP) Tells curl to pass on names of multipart form fields and files using backslash-escaping instead of percent-encoding.
        /// </summary>
        public readonly bool? FormEscape;
        /// <summary>
        /// (HTTP SMTP IMAP) Similar to -F, --form except that the value string for the named parameter is used literally.
        /// </summary>
        public readonly string? FormName;
        /// <summary>
        /// (FTP) When an FTP server asks for 'account data' after user name and password has been provided, this data is sent off using the ACCT command.
        /// </summary>
        public readonly string? FtpAccount;
        /// <summary>
        /// (FTP) If authenticating with the USER and PASS commands fails, send this command.
        /// </summary>
        public readonly string? FtpAlternativeUser;
        /// <summary>
        /// (FTP  SFTP) When an FTP or SFTP URL/operation uses a path that does not currently exist on the server, the standard behavior of curl is to fail.
        /// </summary>
        public readonly bool? FtpCreateDirs;
        /// <summary>
        /// (FTP) Control what method curl should use to reach a file on an FTP(S) server.
        /// </summary>
        public readonly string? FtpMethod;
        /// <summary>
        /// (FTP) Use passive mode for the data connection.
        /// </summary>
        public readonly bool? FtpPasv;
        /// <summary>
        /// (FTP)  Reverses  the  default  initiator/listener  roles  when connecting with FTP.
        /// </summary>
        public readonly string? FtpPort;
        /// <summary>
        /// (FTP) Tell curl to send a PRET command before PASV (and EPSV).
        /// </summary>
        public readonly bool? FtpPret;
        /// <summary>
        /// (FTP)  Tell  curl  to  not use the IP address the server suggests in its response to curl's PASV command when curl connects the data connection.
        /// </summary>
        public readonly bool? FtpSkipPasvIp;
        /// <summary>
        /// (FTP) Sets the CCC mode. The passive mode will not initiate the shutdown, but instead wait for the server to do it, and will not reply to the shutdown from the  server.
        /// </summary>
        public readonly string? FtpSslCccMode;
        /// <summary>
        /// Corresponds to the URLs argument.
        /// </summary>
        public readonly ImmutableArray<string> Urls;

        [OutputConstructor]
        private CurlOpts(
            string? abstractUnixSocket,

            string? altSvc,

            bool? anyAuth,

            bool? append,

            string? awsSigv4,

            bool? basic,

            string? cacert,

            string? capath,

            string? cert,

            bool? certStatus,

            UnMango.KubernetesTheHardWay.Tools.CurlCertType? certType,

            string? ciphers,

            bool? compressed,

            bool? compressedSsh,

            string? config,

            int? connectTimeout,

            string? connectTo,

            string? continueAt,

            string? cookie,

            string? cookieJar,

            bool? createDirs,

            string? createFileMode,

            bool? crlf,

            string? crlfFile,

            string? curves,

            string? data,

            string? dataAscii,

            string? dataBinary,

            string? dataRaw,

            string? dataUrlEncode,

            UnMango.KubernetesTheHardWay.Tools.CurlDelegationLevel? delegation,

            bool? digest,

            bool? disable,

            bool? disableEprt,

            bool? disableEpsv,

            bool? disallowUsernameInUrl,

            string? dnsInterface,

            string? dnsIpv4Addr,

            string? dnsIpv6Addr,

            string? dnsServers,

            bool? dohCertStatus,

            bool? dohInsecure,

            string? dohUrl,

            string? dumpHeader,

            string? egdFile,

            string? engine,

            string? etagCompare,

            string? etagSave,

            int? expect100Timeout,

            bool? fail,

            bool? failEarly,

            bool? failWithBody,

            bool? falseStart,

            string? form,

            bool? formEscape,

            string? formName,

            string? ftpAccount,

            string? ftpAlternativeUser,

            bool? ftpCreateDirs,

            string? ftpMethod,

            bool? ftpPasv,

            string? ftpPort,

            bool? ftpPret,

            bool? ftpSkipPasvIp,

            string? ftpSslCccMode,

            ImmutableArray<string> urls)
        {
            AbstractUnixSocket = abstractUnixSocket;
            AltSvc = altSvc;
            AnyAuth = anyAuth;
            Append = append;
            AwsSigv4 = awsSigv4;
            Basic = basic;
            Cacert = cacert;
            Capath = capath;
            Cert = cert;
            CertStatus = certStatus;
            CertType = certType;
            Ciphers = ciphers;
            Compressed = compressed;
            CompressedSsh = compressedSsh;
            Config = config;
            ConnectTimeout = connectTimeout;
            ConnectTo = connectTo;
            ContinueAt = continueAt;
            Cookie = cookie;
            CookieJar = cookieJar;
            CreateDirs = createDirs;
            CreateFileMode = createFileMode;
            Crlf = crlf;
            CrlfFile = crlfFile;
            Curves = curves;
            Data = data;
            DataAscii = dataAscii;
            DataBinary = dataBinary;
            DataRaw = dataRaw;
            DataUrlEncode = dataUrlEncode;
            Delegation = delegation;
            Digest = digest;
            Disable = disable;
            DisableEprt = disableEprt;
            DisableEpsv = disableEpsv;
            DisallowUsernameInUrl = disallowUsernameInUrl;
            DnsInterface = dnsInterface;
            DnsIpv4Addr = dnsIpv4Addr;
            DnsIpv6Addr = dnsIpv6Addr;
            DnsServers = dnsServers;
            DohCertStatus = dohCertStatus;
            DohInsecure = dohInsecure;
            DohUrl = dohUrl;
            DumpHeader = dumpHeader;
            EgdFile = egdFile;
            Engine = engine;
            EtagCompare = etagCompare;
            EtagSave = etagSave;
            Expect100Timeout = expect100Timeout;
            Fail = fail;
            FailEarly = failEarly;
            FailWithBody = failWithBody;
            FalseStart = falseStart;
            Form = form;
            FormEscape = formEscape;
            FormName = formName;
            FtpAccount = ftpAccount;
            FtpAlternativeUser = ftpAlternativeUser;
            FtpCreateDirs = ftpCreateDirs;
            FtpMethod = ftpMethod;
            FtpPasv = ftpPasv;
            FtpPort = ftpPort;
            FtpPret = ftpPret;
            FtpSkipPasvIp = ftpSkipPasvIp;
            FtpSslCccMode = ftpSslCccMode;
            Urls = urls;
        }
    }
}
