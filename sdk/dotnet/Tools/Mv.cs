// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.KubernetesTheHardWay.Tools
{
    /// <summary>
    /// Abstraction over the `mv` utility on a remote system.
    /// </summary>
    [KubernetesTheHardWayResourceType("kubernetes-the-hard-way:tools:Mv")]
    public partial class Mv : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// Corresponds to both the -b and --backup options depending on whether [CONTROL] is supplied.
        /// </summary>
        [Output("backup")]
        public Output<bool> Backup { get; private set; } = null!;

        /// <summary>
        /// Represents the command run on the remote system.
        /// </summary>
        [Output("command")]
        public Output<Pulumi.Command.Remote.Command> Command { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --context option.
        /// </summary>
        [Output("context")]
        public Output<bool> Context { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the [CONTROL] argument for the --backup option.
        /// </summary>
        [Output("control")]
        public Output<string?> Control { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the [DEST] argument.
        /// </summary>
        [Output("dest")]
        public Output<string?> Dest { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the [DIRECTORY] argument.
        /// </summary>
        [Output("directory")]
        public Output<string?> Directory { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --force option.
        /// </summary>
        [Output("force")]
        public Output<bool> Force { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --no-clobber option.
        /// </summary>
        [Output("noClobber")]
        public Output<bool> NoClobber { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --no-target-directory option.
        /// </summary>
        [Output("noTargetDirectory")]
        public Output<bool> NoTargetDirectory { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the [SOURCE] argument.
        /// </summary>
        [Output("source")]
        public Output<ImmutableArray<string>> Source { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --strip-trailing-suffix option.
        /// </summary>
        [Output("stripTrailingSlashes")]
        public Output<bool> StripTrailingSlashes { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --suffix option.
        /// </summary>
        [Output("suffix")]
        public Output<string?> Suffix { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --target-directory option.
        /// </summary>
        [Output("targetDirectory")]
        public Output<string?> TargetDirectory { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --update option.
        /// </summary>
        [Output("update")]
        public Output<bool> Update { get; private set; } = null!;

        /// <summary>
        /// Corresponds to the --verbose option.
        /// </summary>
        [Output("verbose")]
        public Output<bool> Verbose { get; private set; } = null!;


        /// <summary>
        /// Create a Mv resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Mv(string name, MvArgs args, ComponentResourceOptions? options = null)
            : base("kubernetes-the-hard-way:tools:Mv", name, args ?? new MvArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/UnstoppableMango",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class MvArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Corresponds to both the -b and --backup options depending on whether [CONTROL] is supplied.
        /// </summary>
        [Input("backup")]
        public bool? Backup { get; set; }

        /// <summary>
        /// Connection details for the remote system.
        /// </summary>
        [Input("connection", required: true)]
        public Input<Pulumi.Command.Remote.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        /// <summary>
        /// Corresponds to the --context option.
        /// </summary>
        [Input("context")]
        public Input<bool>? Context { get; set; }

        /// <summary>
        /// Corresponds to the [CONTROL] argument for the --backup option.
        /// </summary>
        [Input("control")]
        public Input<string>? Control { get; set; }

        /// <summary>
        /// Corresponds to the [DEST] argument.
        /// </summary>
        [Input("dest")]
        public Input<string>? Dest { get; set; }

        /// <summary>
        /// Corresponds to the [DIRECTORY] argument.
        /// </summary>
        [Input("directory")]
        public Input<string>? Directory { get; set; }

        /// <summary>
        /// Corresponds to the --force option.
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        /// <summary>
        /// Corresponds to the --no-clobber option.
        /// </summary>
        [Input("noClobber")]
        public Input<bool>? NoClobber { get; set; }

        /// <summary>
        /// Corresponds to the --no-target-directory option.
        /// </summary>
        [Input("noTargetDirectory")]
        public Input<bool>? NoTargetDirectory { get; set; }

        /// <summary>
        /// Corresponds to the [SOURCE] argument.
        /// </summary>
        [Input("source", required: true)]
        public InputUnion<string, ImmutableArray<string>> Source { get; set; } = null!;

        /// <summary>
        /// Corresponds to the --strip-trailing-suffix option.
        /// </summary>
        [Input("stripTrailingSlashes")]
        public Input<bool>? StripTrailingSlashes { get; set; }

        /// <summary>
        /// Corresponds to the --suffix option.
        /// </summary>
        [Input("suffix")]
        public Input<string>? Suffix { get; set; }

        /// <summary>
        /// Corresponds to the --target-directory option.
        /// </summary>
        [Input("targetDirectory")]
        public Input<string>? TargetDirectory { get; set; }

        /// <summary>
        /// Corresponds to the --update option.
        /// </summary>
        [Input("update")]
        public Input<bool>? Update { get; set; }

        /// <summary>
        /// Corresponds to the --verbose option.
        /// </summary>
        [Input("verbose")]
        public Input<bool>? Verbose { get; set; }

        public MvArgs()
        {
        }
        public static new MvArgs Empty => new MvArgs();
    }
}
