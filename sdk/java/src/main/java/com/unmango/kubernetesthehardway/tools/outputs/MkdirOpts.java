// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.tools.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MkdirOpts {
    /**
     * @return The fully qualified path of the directory on the remote system.
     * 
     */
    private String directory;
    /**
     * @return Corresponds to the `--parents` option.
     * 
     */
    private @Nullable Boolean parents;
    /**
     * @return Remove the created directory when the `Mkdir` resource is deleted or updated.
     * 
     */
    private @Nullable Boolean removeOnDelete;

    private MkdirOpts() {}
    /**
     * @return The fully qualified path of the directory on the remote system.
     * 
     */
    public String directory() {
        return this.directory;
    }
    /**
     * @return Corresponds to the `--parents` option.
     * 
     */
    public Optional<Boolean> parents() {
        return Optional.ofNullable(this.parents);
    }
    /**
     * @return Remove the created directory when the `Mkdir` resource is deleted or updated.
     * 
     */
    public Optional<Boolean> removeOnDelete() {
        return Optional.ofNullable(this.removeOnDelete);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MkdirOpts defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String directory;
        private @Nullable Boolean parents;
        private @Nullable Boolean removeOnDelete;
        public Builder() {}
        public Builder(MkdirOpts defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directory = defaults.directory;
    	      this.parents = defaults.parents;
    	      this.removeOnDelete = defaults.removeOnDelete;
        }

        @CustomType.Setter
        public Builder directory(String directory) {
            if (directory == null) {
              throw new MissingRequiredPropertyException("MkdirOpts", "directory");
            }
            this.directory = directory;
            return this;
        }
        @CustomType.Setter
        public Builder parents(@Nullable Boolean parents) {

            this.parents = parents;
            return this;
        }
        @CustomType.Setter
        public Builder removeOnDelete(@Nullable Boolean removeOnDelete) {

            this.removeOnDelete = removeOnDelete;
            return this;
        }
        public MkdirOpts build() {
            final var _resultValue = new MkdirOpts();
            _resultValue.directory = directory;
            _resultValue.parents = parents;
            _resultValue.removeOnDelete = removeOnDelete;
            return _resultValue;
        }
    }
}
