// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.inputs.ConnectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.config.inputs.PodManifestArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticPodArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticPodArgs Empty = new StaticPodArgs();

    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Import(name="connection", required=true)
    private Output<ConnectionArgs> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<ConnectionArgs> connection() {
        return this.connection;
    }

    /**
     * The name of the file on the remote system.
     * 
     */
    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    /**
     * @return The name of the file on the remote system.
     * 
     */
    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    /**
     * The pod manifest.
     * 
     */
    @Import(name="pod", required=true)
    private Output<PodManifestArgs> pod;

    /**
     * @return The pod manifest.
     * 
     */
    public Output<PodManifestArgs> pod() {
        return this.pod;
    }

    private StaticPodArgs() {}

    private StaticPodArgs(StaticPodArgs $) {
        this.connection = $.connection;
        this.fileName = $.fileName;
        this.pod = $.pod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticPodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticPodArgs $;

        public Builder() {
            $ = new StaticPodArgs();
        }

        public Builder(StaticPodArgs defaults) {
            $ = new StaticPodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(Output<ConnectionArgs> connection) {
            $.connection = connection;
            return this;
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(ConnectionArgs connection) {
            return connection(Output.of(connection));
        }

        /**
         * @param fileName The name of the file on the remote system.
         * 
         * @return builder
         * 
         */
        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        /**
         * @param fileName The name of the file on the remote system.
         * 
         * @return builder
         * 
         */
        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        /**
         * @param pod The pod manifest.
         * 
         * @return builder
         * 
         */
        public Builder pod(Output<PodManifestArgs> pod) {
            $.pod = pod;
            return this;
        }

        /**
         * @param pod The pod manifest.
         * 
         * @return builder
         * 
         */
        public Builder pod(PodManifestArgs pod) {
            return pod(Output.of(pod));
        }

        public StaticPodArgs build() {
            if ($.connection == null) {
                throw new MissingRequiredPropertyException("StaticPodArgs", "connection");
            }
            if ($.pod == null) {
                throw new MissingRequiredPropertyException("StaticPodArgs", "pod");
            }
            return $;
        }
    }

}
