// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCniLoopbackPluginConfigurationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCniLoopbackPluginConfigurationArgs Empty = new GetCniLoopbackPluginConfigurationArgs();

    /**
     * CNI version.
     * 
     */
    @Import(name="cniVersion")
    private @Nullable Output<String> cniVersion;

    /**
     * @return CNI version.
     * 
     */
    public Optional<Output<String>> cniVersion() {
        return Optional.ofNullable(this.cniVersion);
    }

    /**
     * CNI plugin name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return CNI plugin name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Path to put the configuration file on the remote system
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path to put the configuration file on the remote system
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * CNI plugin type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return CNI plugin type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetCniLoopbackPluginConfigurationArgs() {}

    private GetCniLoopbackPluginConfigurationArgs(GetCniLoopbackPluginConfigurationArgs $) {
        this.cniVersion = $.cniVersion;
        this.name = $.name;
        this.path = $.path;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCniLoopbackPluginConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCniLoopbackPluginConfigurationArgs $;

        public Builder() {
            $ = new GetCniLoopbackPluginConfigurationArgs();
        }

        public Builder(GetCniLoopbackPluginConfigurationArgs defaults) {
            $ = new GetCniLoopbackPluginConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cniVersion CNI version.
         * 
         * @return builder
         * 
         */
        public Builder cniVersion(@Nullable Output<String> cniVersion) {
            $.cniVersion = cniVersion;
            return this;
        }

        /**
         * @param cniVersion CNI version.
         * 
         * @return builder
         * 
         */
        public Builder cniVersion(String cniVersion) {
            return cniVersion(Output.of(cniVersion));
        }

        /**
         * @param name CNI plugin name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name CNI plugin name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param path Path to put the configuration file on the remote system
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to put the configuration file on the remote system
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param type CNI plugin type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type CNI plugin type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetCniLoopbackPluginConfigurationArgs build() {
            return $;
        }
    }

}
