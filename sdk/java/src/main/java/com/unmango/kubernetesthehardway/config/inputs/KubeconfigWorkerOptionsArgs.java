// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubeconfigWorkerOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubeconfigWorkerOptionsArgs Empty = new KubeconfigWorkerOptionsArgs();

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="publicIp", required=true)
    private Output<String> publicIp;

    public Output<String> publicIp() {
        return this.publicIp;
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private KubeconfigWorkerOptionsArgs() {}

    private KubeconfigWorkerOptionsArgs(KubeconfigWorkerOptionsArgs $) {
        this.name = $.name;
        this.publicIp = $.publicIp;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubeconfigWorkerOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubeconfigWorkerOptionsArgs $;

        public Builder() {
            $ = new KubeconfigWorkerOptionsArgs();
        }

        public Builder(KubeconfigWorkerOptionsArgs defaults) {
            $ = new KubeconfigWorkerOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder publicIp(Output<String> publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        public Builder publicIp(String publicIp) {
            return publicIp(Output.of(publicIp));
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public KubeconfigWorkerOptionsArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("KubeconfigWorkerOptionsArgs", "name");
            }
            if ($.publicIp == null) {
                throw new MissingRequiredPropertyException("KubeconfigWorkerOptionsArgs", "publicIp");
            }
            $.type = Codegen.stringProp("type").arg($.type).getNullable();
            return $;
        }
    }

}
