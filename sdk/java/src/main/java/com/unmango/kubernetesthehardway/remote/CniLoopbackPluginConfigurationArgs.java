// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.inputs.ConnectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CniLoopbackPluginConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CniLoopbackPluginConfigurationArgs Empty = new CniLoopbackPluginConfigurationArgs();

    /**
     * CNI version.
     * 
     */
    @Import(name="cniVersion")
    private @Nullable Output<String> cniVersion;

    /**
     * @return CNI version.
     * 
     */
    public Optional<Output<String>> cniVersion() {
        return Optional.ofNullable(this.cniVersion);
    }

    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Import(name="connection", required=true)
    private Output<ConnectionArgs> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<ConnectionArgs> connection() {
        return this.connection;
    }

    /**
     * CNI plugin name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return CNI plugin name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * CNI plugin type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return CNI plugin type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private CniLoopbackPluginConfigurationArgs() {}

    private CniLoopbackPluginConfigurationArgs(CniLoopbackPluginConfigurationArgs $) {
        this.cniVersion = $.cniVersion;
        this.connection = $.connection;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CniLoopbackPluginConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CniLoopbackPluginConfigurationArgs $;

        public Builder() {
            $ = new CniLoopbackPluginConfigurationArgs();
        }

        public Builder(CniLoopbackPluginConfigurationArgs defaults) {
            $ = new CniLoopbackPluginConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cniVersion CNI version.
         * 
         * @return builder
         * 
         */
        public Builder cniVersion(@Nullable Output<String> cniVersion) {
            $.cniVersion = cniVersion;
            return this;
        }

        /**
         * @param cniVersion CNI version.
         * 
         * @return builder
         * 
         */
        public Builder cniVersion(String cniVersion) {
            return cniVersion(Output.of(cniVersion));
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(Output<ConnectionArgs> connection) {
            $.connection = connection;
            return this;
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(ConnectionArgs connection) {
            return connection(Output.of(connection));
        }

        /**
         * @param name CNI plugin name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name CNI plugin name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type CNI plugin type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type CNI plugin type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CniLoopbackPluginConfigurationArgs build() {
            if ($.connection == null) {
                throw new MissingRequiredPropertyException("CniLoopbackPluginConfigurationArgs", "connection");
            }
            return $;
        }
    }

}
