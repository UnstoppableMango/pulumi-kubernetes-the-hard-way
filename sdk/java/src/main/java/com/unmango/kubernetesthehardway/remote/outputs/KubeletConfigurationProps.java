// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KubeletConfigurationProps {
    /**
     * @return Path to the kubelet configuration.
     * 
     */
    private String configurationFilePath;
    /**
     * @return Path to the kubeconfig the kubelet will use
     * 
     */
    private String kubeconfigPath;
    /**
     * @return Path to the kubelet binary.
     * 
     */
    private String kubeletPath;
    /**
     * @return Whether to register the node. Defaults to `true`.
     * 
     */
    private Boolean registerNode;
    /**
     * @return Verbosity. Defaults to `2`.
     * 
     */
    private Integer v;

    private KubeletConfigurationProps() {}
    /**
     * @return Path to the kubelet configuration.
     * 
     */
    public String configurationFilePath() {
        return this.configurationFilePath;
    }
    /**
     * @return Path to the kubeconfig the kubelet will use
     * 
     */
    public String kubeconfigPath() {
        return this.kubeconfigPath;
    }
    /**
     * @return Path to the kubelet binary.
     * 
     */
    public String kubeletPath() {
        return this.kubeletPath;
    }
    /**
     * @return Whether to register the node. Defaults to `true`.
     * 
     */
    public Boolean registerNode() {
        return this.registerNode;
    }
    /**
     * @return Verbosity. Defaults to `2`.
     * 
     */
    public Integer v() {
        return this.v;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubeletConfigurationProps defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationFilePath;
        private String kubeconfigPath;
        private String kubeletPath;
        private Boolean registerNode;
        private Integer v;
        public Builder() {}
        public Builder(KubeletConfigurationProps defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationFilePath = defaults.configurationFilePath;
    	      this.kubeconfigPath = defaults.kubeconfigPath;
    	      this.kubeletPath = defaults.kubeletPath;
    	      this.registerNode = defaults.registerNode;
    	      this.v = defaults.v;
        }

        @CustomType.Setter
        public Builder configurationFilePath(String configurationFilePath) {
            if (configurationFilePath == null) {
              throw new MissingRequiredPropertyException("KubeletConfigurationProps", "configurationFilePath");
            }
            this.configurationFilePath = configurationFilePath;
            return this;
        }
        @CustomType.Setter
        public Builder kubeconfigPath(String kubeconfigPath) {
            if (kubeconfigPath == null) {
              throw new MissingRequiredPropertyException("KubeletConfigurationProps", "kubeconfigPath");
            }
            this.kubeconfigPath = kubeconfigPath;
            return this;
        }
        @CustomType.Setter
        public Builder kubeletPath(String kubeletPath) {
            if (kubeletPath == null) {
              throw new MissingRequiredPropertyException("KubeletConfigurationProps", "kubeletPath");
            }
            this.kubeletPath = kubeletPath;
            return this;
        }
        @CustomType.Setter
        public Builder registerNode(Boolean registerNode) {
            if (registerNode == null) {
              throw new MissingRequiredPropertyException("KubeletConfigurationProps", "registerNode");
            }
            this.registerNode = registerNode;
            return this;
        }
        @CustomType.Setter
        public Builder v(Integer v) {
            if (v == null) {
              throw new MissingRequiredPropertyException("KubeletConfigurationProps", "v");
            }
            this.v = v;
            return this;
        }
        public KubeletConfigurationProps build() {
            final var _resultValue = new KubeletConfigurationProps();
            _resultValue.configurationFilePath = configurationFilePath;
            _resultValue.kubeconfigPath = kubeconfigPath;
            _resultValue.kubeletPath = kubeletPath;
            _resultValue.registerNode = registerNode;
            _resultValue.v = v;
            return _resultValue;
        }
    }
}
