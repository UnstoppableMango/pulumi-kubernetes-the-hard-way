// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.outputs.Connection;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.unmango.kubernetesthehardway.Utilities;
import com.unmango.kubernetesthehardway.remote.CniBridgePluginConfiguration;
import com.unmango.kubernetesthehardway.remote.CniLoopbackPluginConfiguration;
import com.unmango.kubernetesthehardway.remote.CniPluginConfigurationArgs;
import com.unmango.kubernetesthehardway.tools.Mkdir;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * The CNI plugin configuration.
 * 
 */
@ResourceType(type="kubernetes-the-hard-way:remote:CniPluginConfiguration")
public class CniPluginConfiguration extends com.pulumi.resources.ComponentResource {
    /**
     * The bridge plugin configuration.
     * 
     */
    @Export(name="bridge", refs={CniBridgePluginConfiguration.class}, tree="[0]")
    private Output<CniBridgePluginConfiguration> bridge;

    /**
     * @return The bridge plugin configuration.
     * 
     */
    public Output<CniBridgePluginConfiguration> bridge() {
        return this.bridge;
    }
    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Export(name="connection", refs={Connection.class}, tree="[0]")
    private Output<Connection> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<Connection> connection() {
        return this.connection;
    }
    /**
     * The plugin configuration directory.
     * 
     */
    @Export(name="directory", refs={String.class}, tree="[0]")
    private Output<String> directory;

    /**
     * @return The plugin configuration directory.
     * 
     */
    public Output<String> directory() {
        return this.directory;
    }
    /**
     * The loopback plugin configuration.
     * 
     */
    @Export(name="loopback", refs={CniLoopbackPluginConfiguration.class}, tree="[0]")
    private Output<CniLoopbackPluginConfiguration> loopback;

    /**
     * @return The loopback plugin configuration.
     * 
     */
    public Output<CniLoopbackPluginConfiguration> loopback() {
        return this.loopback;
    }
    /**
     * The `directory` mkdir operation.
     * 
     */
    @Export(name="mkdir", refs={Mkdir.class}, tree="[0]")
    private Output<Mkdir> mkdir;

    /**
     * @return The `directory` mkdir operation.
     * 
     */
    public Output<Mkdir> mkdir() {
        return this.mkdir;
    }
    /**
     * The subnet to use for the CNI bridge plugin configuration.
     * 
     */
    @Export(name="subnet", refs={String.class}, tree="[0]")
    private Output<String> subnet;

    /**
     * @return The subnet to use for the CNI bridge plugin configuration.
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CniPluginConfiguration(String name) {
        this(name, CniPluginConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CniPluginConfiguration(String name, CniPluginConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CniPluginConfiguration(String name, CniPluginConfigurationArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("kubernetes-the-hard-way:remote:CniPluginConfiguration", name, args == null ? CniPluginConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
