// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#
 * 
 */
public final class SystemdUnitSectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemdUnitSectionArgs Empty = new SystemdUnitSectionArgs();

    /**
     * Configures requirement dependencies, very similar in style to Requires=.
     * 
     */
    @Import(name="bindsTo")
    private @Nullable Output<List<String>> bindsTo;

    /**
     * @return Configures requirement dependencies, very similar in style to Requires=.
     * 
     */
    public Optional<Output<List<String>>> bindsTo() {
        return Optional.ofNullable(this.bindsTo);
    }

    /**
     * A short human readable title of the unit.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A short human readable title of the unit.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A space-separated list of URIs referencing documentation for this unit or its configuration.
     * 
     */
    @Import(name="documentation")
    private @Nullable Output<List<String>> documentation;

    /**
     * @return A space-separated list of URIs referencing documentation for this unit or its configuration.
     * 
     */
    public Optional<Output<List<String>>> documentation() {
        return Optional.ofNullable(this.documentation);
    }

    /**
     * Similar to Wants=, but declares a stronger requirement dependency.
     * 
     */
    @Import(name="requires")
    private @Nullable Output<List<String>> requires;

    /**
     * @return Similar to Wants=, but declares a stronger requirement dependency.
     * 
     */
    public Optional<Output<List<String>>> requires() {
        return Optional.ofNullable(this.requires);
    }

    /**
     * Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
     * 
     */
    @Import(name="requisite")
    private @Nullable Output<List<String>> requisite;

    /**
     * @return Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
     * 
     */
    public Optional<Output<List<String>>> requisite() {
        return Optional.ofNullable(this.requisite);
    }

    /**
     * Configures (weak) requirement dependencies on other units.
     * 
     */
    @Import(name="wants")
    private @Nullable Output<List<String>> wants;

    /**
     * @return Configures (weak) requirement dependencies on other units.
     * 
     */
    public Optional<Output<List<String>>> wants() {
        return Optional.ofNullable(this.wants);
    }

    private SystemdUnitSectionArgs() {}

    private SystemdUnitSectionArgs(SystemdUnitSectionArgs $) {
        this.bindsTo = $.bindsTo;
        this.description = $.description;
        this.documentation = $.documentation;
        this.requires = $.requires;
        this.requisite = $.requisite;
        this.wants = $.wants;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemdUnitSectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemdUnitSectionArgs $;

        public Builder() {
            $ = new SystemdUnitSectionArgs();
        }

        public Builder(SystemdUnitSectionArgs defaults) {
            $ = new SystemdUnitSectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindsTo Configures requirement dependencies, very similar in style to Requires=.
         * 
         * @return builder
         * 
         */
        public Builder bindsTo(@Nullable Output<List<String>> bindsTo) {
            $.bindsTo = bindsTo;
            return this;
        }

        /**
         * @param bindsTo Configures requirement dependencies, very similar in style to Requires=.
         * 
         * @return builder
         * 
         */
        public Builder bindsTo(List<String> bindsTo) {
            return bindsTo(Output.of(bindsTo));
        }

        /**
         * @param bindsTo Configures requirement dependencies, very similar in style to Requires=.
         * 
         * @return builder
         * 
         */
        public Builder bindsTo(String... bindsTo) {
            return bindsTo(List.of(bindsTo));
        }

        /**
         * @param description A short human readable title of the unit.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A short human readable title of the unit.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param documentation A space-separated list of URIs referencing documentation for this unit or its configuration.
         * 
         * @return builder
         * 
         */
        public Builder documentation(@Nullable Output<List<String>> documentation) {
            $.documentation = documentation;
            return this;
        }

        /**
         * @param documentation A space-separated list of URIs referencing documentation for this unit or its configuration.
         * 
         * @return builder
         * 
         */
        public Builder documentation(List<String> documentation) {
            return documentation(Output.of(documentation));
        }

        /**
         * @param documentation A space-separated list of URIs referencing documentation for this unit or its configuration.
         * 
         * @return builder
         * 
         */
        public Builder documentation(String... documentation) {
            return documentation(List.of(documentation));
        }

        /**
         * @param requires Similar to Wants=, but declares a stronger requirement dependency.
         * 
         * @return builder
         * 
         */
        public Builder requires(@Nullable Output<List<String>> requires) {
            $.requires = requires;
            return this;
        }

        /**
         * @param requires Similar to Wants=, but declares a stronger requirement dependency.
         * 
         * @return builder
         * 
         */
        public Builder requires(List<String> requires) {
            return requires(Output.of(requires));
        }

        /**
         * @param requires Similar to Wants=, but declares a stronger requirement dependency.
         * 
         * @return builder
         * 
         */
        public Builder requires(String... requires) {
            return requires(List.of(requires));
        }

        /**
         * @param requisite Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
         * 
         * @return builder
         * 
         */
        public Builder requisite(@Nullable Output<List<String>> requisite) {
            $.requisite = requisite;
            return this;
        }

        /**
         * @param requisite Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
         * 
         * @return builder
         * 
         */
        public Builder requisite(List<String> requisite) {
            return requisite(Output.of(requisite));
        }

        /**
         * @param requisite Similar to Requires=. However, if the units listed here are not started already, they will not be started and the starting of this unit will fail immediately.
         * 
         * @return builder
         * 
         */
        public Builder requisite(String... requisite) {
            return requisite(List.of(requisite));
        }

        /**
         * @param wants Configures (weak) requirement dependencies on other units.
         * 
         * @return builder
         * 
         */
        public Builder wants(@Nullable Output<List<String>> wants) {
            $.wants = wants;
            return this;
        }

        /**
         * @param wants Configures (weak) requirement dependencies on other units.
         * 
         * @return builder
         * 
         */
        public Builder wants(List<String> wants) {
            return wants(Output.of(wants));
        }

        /**
         * @param wants Configures (weak) requirement dependencies on other units.
         * 
         * @return builder
         * 
         */
        public Builder wants(String... wants) {
            return wants(List.of(wants));
        }

        public SystemdUnitSectionArgs build() {
            return $;
        }
    }

}
