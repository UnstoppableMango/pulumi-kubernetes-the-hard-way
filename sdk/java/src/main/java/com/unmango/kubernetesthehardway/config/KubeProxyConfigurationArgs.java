// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubeProxyConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubeProxyConfigurationArgs Empty = new KubeProxyConfigurationArgs();

    /**
     * Cluster CIDR.
     * 
     */
    @Import(name="clusterCIDR")
    private @Nullable Output<String> clusterCIDR;

    /**
     * @return Cluster CIDR.
     * 
     */
    public Optional<Output<String>> clusterCIDR() {
        return Optional.ofNullable(this.clusterCIDR);
    }

    /**
     * Path to the kubeconfig.
     * 
     */
    @Import(name="kubeconfig", required=true)
    private Output<String> kubeconfig;

    /**
     * @return Path to the kubeconfig.
     * 
     */
    public Output<String> kubeconfig() {
        return this.kubeconfig;
    }

    /**
     * TODO
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return TODO
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    private KubeProxyConfigurationArgs() {}

    private KubeProxyConfigurationArgs(KubeProxyConfigurationArgs $) {
        this.clusterCIDR = $.clusterCIDR;
        this.kubeconfig = $.kubeconfig;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubeProxyConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubeProxyConfigurationArgs $;

        public Builder() {
            $ = new KubeProxyConfigurationArgs();
        }

        public Builder(KubeProxyConfigurationArgs defaults) {
            $ = new KubeProxyConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterCIDR Cluster CIDR.
         * 
         * @return builder
         * 
         */
        public Builder clusterCIDR(@Nullable Output<String> clusterCIDR) {
            $.clusterCIDR = clusterCIDR;
            return this;
        }

        /**
         * @param clusterCIDR Cluster CIDR.
         * 
         * @return builder
         * 
         */
        public Builder clusterCIDR(String clusterCIDR) {
            return clusterCIDR(Output.of(clusterCIDR));
        }

        /**
         * @param kubeconfig Path to the kubeconfig.
         * 
         * @return builder
         * 
         */
        public Builder kubeconfig(Output<String> kubeconfig) {
            $.kubeconfig = kubeconfig;
            return this;
        }

        /**
         * @param kubeconfig Path to the kubeconfig.
         * 
         * @return builder
         * 
         */
        public Builder kubeconfig(String kubeconfig) {
            return kubeconfig(Output.of(kubeconfig));
        }

        /**
         * @param mode TODO
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode TODO
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public KubeProxyConfigurationArgs build() {
            if ($.kubeconfig == null) {
                throw new MissingRequiredPropertyException("KubeProxyConfigurationArgs", "kubeconfig");
            }
            return $;
        }
    }

}
