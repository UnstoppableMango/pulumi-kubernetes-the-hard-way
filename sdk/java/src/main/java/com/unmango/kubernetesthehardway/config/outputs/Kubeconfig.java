// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.config.outputs.Cluster;
import com.unmango.kubernetesthehardway.config.outputs.Context;
import com.unmango.kubernetesthehardway.config.outputs.User;
import java.util.List;
import java.util.Objects;

@CustomType
public final class Kubeconfig {
    private List<Cluster> clusters;
    private List<Context> contexts;
    private List<User> users;

    private Kubeconfig() {}
    public List<Cluster> clusters() {
        return this.clusters;
    }
    public List<Context> contexts() {
        return this.contexts;
    }
    public List<User> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Kubeconfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Cluster> clusters;
        private List<Context> contexts;
        private List<User> users;
        public Builder() {}
        public Builder(Kubeconfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.contexts = defaults.contexts;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder clusters(List<Cluster> clusters) {
            if (clusters == null) {
              throw new MissingRequiredPropertyException("Kubeconfig", "clusters");
            }
            this.clusters = clusters;
            return this;
        }
        public Builder clusters(Cluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder contexts(List<Context> contexts) {
            if (contexts == null) {
              throw new MissingRequiredPropertyException("Kubeconfig", "contexts");
            }
            this.contexts = contexts;
            return this;
        }
        public Builder contexts(Context... contexts) {
            return contexts(List.of(contexts));
        }
        @CustomType.Setter
        public Builder users(List<User> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("Kubeconfig", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(User... users) {
            return users(List.of(users));
        }
        public Kubeconfig build() {
            final var _resultValue = new Kubeconfig();
            _resultValue.clusters = clusters;
            _resultValue.contexts = contexts;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
