// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.tools.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.tools.enums.EtcdctlCommand;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Abstraction over the `etcdctl` utility on a remote system.
 * 
 */
public final class EtcdctlOptsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EtcdctlOptsArgs Empty = new EtcdctlOptsArgs();

    /**
     * TODO
     * 
     */
    @Import(name="caCert")
    private @Nullable Output<String> caCert;

    /**
     * @return TODO
     * 
     */
    public Optional<Output<String>> caCert() {
        return Optional.ofNullable(this.caCert);
    }

    /**
     * TODO
     * 
     */
    @Import(name="cert")
    private @Nullable Output<String> cert;

    /**
     * @return TODO
     * 
     */
    public Optional<Output<String>> cert() {
        return Optional.ofNullable(this.cert);
    }

    /**
     * TODO
     * 
     */
    @Import(name="commands", required=true)
    private Output<EtcdctlCommand> commands;

    /**
     * @return TODO
     * 
     */
    public Output<EtcdctlCommand> commands() {
        return this.commands;
    }

    /**
     * TODO
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<String> endpoints;

    /**
     * @return TODO
     * 
     */
    public Optional<Output<String>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * TODO
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return TODO
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    private EtcdctlOptsArgs() {}

    private EtcdctlOptsArgs(EtcdctlOptsArgs $) {
        this.caCert = $.caCert;
        this.cert = $.cert;
        this.commands = $.commands;
        this.endpoints = $.endpoints;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EtcdctlOptsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EtcdctlOptsArgs $;

        public Builder() {
            $ = new EtcdctlOptsArgs();
        }

        public Builder(EtcdctlOptsArgs defaults) {
            $ = new EtcdctlOptsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCert TODO
         * 
         * @return builder
         * 
         */
        public Builder caCert(@Nullable Output<String> caCert) {
            $.caCert = caCert;
            return this;
        }

        /**
         * @param caCert TODO
         * 
         * @return builder
         * 
         */
        public Builder caCert(String caCert) {
            return caCert(Output.of(caCert));
        }

        /**
         * @param cert TODO
         * 
         * @return builder
         * 
         */
        public Builder cert(@Nullable Output<String> cert) {
            $.cert = cert;
            return this;
        }

        /**
         * @param cert TODO
         * 
         * @return builder
         * 
         */
        public Builder cert(String cert) {
            return cert(Output.of(cert));
        }

        /**
         * @param commands TODO
         * 
         * @return builder
         * 
         */
        public Builder commands(Output<EtcdctlCommand> commands) {
            $.commands = commands;
            return this;
        }

        /**
         * @param commands TODO
         * 
         * @return builder
         * 
         */
        public Builder commands(EtcdctlCommand commands) {
            return commands(Output.of(commands));
        }

        /**
         * @param endpoints TODO
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<String> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints TODO
         * 
         * @return builder
         * 
         */
        public Builder endpoints(String endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param key TODO
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key TODO
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        public EtcdctlOptsArgs build() {
            if ($.commands == null) {
                throw new MissingRequiredPropertyException("EtcdctlOptsArgs", "commands");
            }
            return $;
        }
    }

}
