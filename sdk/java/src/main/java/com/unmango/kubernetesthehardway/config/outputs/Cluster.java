// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class Cluster {
    /**
     * @return TODO
     * 
     */
    private String certificateAuthorityData;
    /**
     * @return TODO
     * 
     */
    private String server;

    private Cluster() {}
    /**
     * @return TODO
     * 
     */
    public String certificateAuthorityData() {
        return this.certificateAuthorityData;
    }
    /**
     * @return TODO
     * 
     */
    public String server() {
        return this.server;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Cluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateAuthorityData;
        private String server;
        public Builder() {}
        public Builder(Cluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityData = defaults.certificateAuthorityData;
    	      this.server = defaults.server;
        }

        @CustomType.Setter
        public Builder certificateAuthorityData(String certificateAuthorityData) {
            if (certificateAuthorityData == null) {
              throw new MissingRequiredPropertyException("Cluster", "certificateAuthorityData");
            }
            this.certificateAuthorityData = certificateAuthorityData;
            return this;
        }
        @CustomType.Setter
        public Builder server(String server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("Cluster", "server");
            }
            this.server = server;
            return this;
        }
        public Cluster build() {
            final var _resultValue = new Cluster();
            _resultValue.certificateAuthorityData = certificateAuthorityData;
            _resultValue.server = server;
            return _resultValue;
        }
    }
}
