// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Polyfill for `tls.CertRequestSubject`.
 * 
 */
public final class CertRequestSubject extends com.pulumi.resources.InvokeArgs {

    public static final CertRequestSubject Empty = new CertRequestSubject();

    /**
     * Distinguished name: CN
     * 
     */
    @Import(name="commonName")
    private @Nullable String commonName;

    /**
     * @return Distinguished name: CN
     * 
     */
    public Optional<String> commonName() {
        return Optional.ofNullable(this.commonName);
    }

    /**
     * Distinguished name: C
     * 
     */
    @Import(name="country")
    private @Nullable String country;

    /**
     * @return Distinguished name: C
     * 
     */
    public Optional<String> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * Distinguished name: L
     * 
     */
    @Import(name="locality")
    private @Nullable String locality;

    /**
     * @return Distinguished name: L
     * 
     */
    public Optional<String> locality() {
        return Optional.ofNullable(this.locality);
    }

    /**
     * Distinguished name: O
     * 
     */
    @Import(name="organization")
    private @Nullable String organization;

    /**
     * @return Distinguished name: O
     * 
     */
    public Optional<String> organization() {
        return Optional.ofNullable(this.organization);
    }

    /**
     * Distinguished name: OU
     * 
     */
    @Import(name="organizationalUnit")
    private @Nullable String organizationalUnit;

    /**
     * @return Distinguished name: OU
     * 
     */
    public Optional<String> organizationalUnit() {
        return Optional.ofNullable(this.organizationalUnit);
    }

    /**
     * Distinguished name: PC
     * 
     */
    @Import(name="postalCode")
    private @Nullable String postalCode;

    /**
     * @return Distinguished name: PC
     * 
     */
    public Optional<String> postalCode() {
        return Optional.ofNullable(this.postalCode);
    }

    /**
     * Distinguished name: ST
     * 
     */
    @Import(name="province")
    private @Nullable String province;

    /**
     * @return Distinguished name: ST
     * 
     */
    public Optional<String> province() {
        return Optional.ofNullable(this.province);
    }

    /**
     * Distinguished name: SERIALNUMBER
     * 
     */
    @Import(name="serialNumber")
    private @Nullable String serialNumber;

    /**
     * @return Distinguished name: SERIALNUMBER
     * 
     */
    public Optional<String> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    /**
     * Distinguished name: STREET
     * 
     */
    @Import(name="streetAddresses")
    private @Nullable List<String> streetAddresses;

    /**
     * @return Distinguished name: STREET
     * 
     */
    public Optional<List<String>> streetAddresses() {
        return Optional.ofNullable(this.streetAddresses);
    }

    private CertRequestSubject() {}

    private CertRequestSubject(CertRequestSubject $) {
        this.commonName = $.commonName;
        this.country = $.country;
        this.locality = $.locality;
        this.organization = $.organization;
        this.organizationalUnit = $.organizationalUnit;
        this.postalCode = $.postalCode;
        this.province = $.province;
        this.serialNumber = $.serialNumber;
        this.streetAddresses = $.streetAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertRequestSubject defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertRequestSubject $;

        public Builder() {
            $ = new CertRequestSubject();
        }

        public Builder(CertRequestSubject defaults) {
            $ = new CertRequestSubject(Objects.requireNonNull(defaults));
        }

        /**
         * @param commonName Distinguished name: CN
         * 
         * @return builder
         * 
         */
        public Builder commonName(@Nullable String commonName) {
            $.commonName = commonName;
            return this;
        }

        /**
         * @param country Distinguished name: C
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable String country) {
            $.country = country;
            return this;
        }

        /**
         * @param locality Distinguished name: L
         * 
         * @return builder
         * 
         */
        public Builder locality(@Nullable String locality) {
            $.locality = locality;
            return this;
        }

        /**
         * @param organization Distinguished name: O
         * 
         * @return builder
         * 
         */
        public Builder organization(@Nullable String organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organizationalUnit Distinguished name: OU
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnit(@Nullable String organizationalUnit) {
            $.organizationalUnit = organizationalUnit;
            return this;
        }

        /**
         * @param postalCode Distinguished name: PC
         * 
         * @return builder
         * 
         */
        public Builder postalCode(@Nullable String postalCode) {
            $.postalCode = postalCode;
            return this;
        }

        /**
         * @param province Distinguished name: ST
         * 
         * @return builder
         * 
         */
        public Builder province(@Nullable String province) {
            $.province = province;
            return this;
        }

        /**
         * @param serialNumber Distinguished name: SERIALNUMBER
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(@Nullable String serialNumber) {
            $.serialNumber = serialNumber;
            return this;
        }

        /**
         * @param streetAddresses Distinguished name: STREET
         * 
         * @return builder
         * 
         */
        public Builder streetAddresses(@Nullable List<String> streetAddresses) {
            $.streetAddresses = streetAddresses;
            return this;
        }

        /**
         * @param streetAddresses Distinguished name: STREET
         * 
         * @return builder
         * 
         */
        public Builder streetAddresses(String... streetAddresses) {
            return streetAddresses(List.of(streetAddresses));
        }

        public CertRequestSubject build() {
            return $;
        }
    }

}
