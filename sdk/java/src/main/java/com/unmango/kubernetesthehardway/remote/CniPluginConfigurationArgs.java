// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.inputs.ConnectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CniPluginConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CniPluginConfigurationArgs Empty = new CniPluginConfigurationArgs();

    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Import(name="connection", required=true)
    private Output<ConnectionArgs> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<ConnectionArgs> connection() {
        return this.connection;
    }

    /**
     * The subnet to use for the CNI bridge plugin configuration.
     * 
     */
    @Import(name="subnet", required=true)
    private Output<String> subnet;

    /**
     * @return The subnet to use for the CNI bridge plugin configuration.
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }

    private CniPluginConfigurationArgs() {}

    private CniPluginConfigurationArgs(CniPluginConfigurationArgs $) {
        this.connection = $.connection;
        this.subnet = $.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CniPluginConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CniPluginConfigurationArgs $;

        public Builder() {
            $ = new CniPluginConfigurationArgs();
        }

        public Builder(CniPluginConfigurationArgs defaults) {
            $ = new CniPluginConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(Output<ConnectionArgs> connection) {
            $.connection = connection;
            return this;
        }

        /**
         * @param connection The parameters with which to connect to the remote host.
         * 
         * @return builder
         * 
         */
        public Builder connection(ConnectionArgs connection) {
            return connection(Output.of(connection));
        }

        /**
         * @param subnet The subnet to use for the CNI bridge plugin configuration.
         * 
         * @return builder
         * 
         */
        public Builder subnet(Output<String> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet The subnet to use for the CNI bridge plugin configuration.
         * 
         * @return builder
         * 
         */
        public Builder subnet(String subnet) {
            return subnet(Output.of(subnet));
        }

        public CniPluginConfigurationArgs build() {
            if ($.connection == null) {
                throw new MissingRequiredPropertyException("CniPluginConfigurationArgs", "connection");
            }
            if ($.subnet == null) {
                throw new MissingRequiredPropertyException("CniPluginConfigurationArgs", "subnet");
            }
            return $;
        }
    }

}
