// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.tools;

import com.pulumi.command.remote.Command;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.unmango.kubernetesthehardway.Utilities;
import com.unmango.kubernetesthehardway.tools.MktempArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Abstracion over the `mktemp` utility on a remote system.
 * 
 */
@ResourceType(type="kubernetes-the-hard-way:tools:Mktemp")
public class Mktemp extends com.pulumi.resources.ComponentResource {
    /**
     * Represents the remote `tar` operation.
     * 
     */
    @Export(name="command", refs={Command.class}, tree="[0]")
    private Output<Command> command;

    /**
     * @return Represents the remote `tar` operation.
     * 
     */
    public Output<Command> command() {
        return this.command;
    }
    /**
     * Corresponds to the --directory option.
     * 
     */
    @Export(name="directory", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> directory;

    /**
     * @return Corresponds to the --directory option.
     * 
     */
    public Output<Boolean> directory() {
        return this.directory;
    }
    /**
     * Corresponds to the --dry-run option.
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dryRun;

    /**
     * @return Corresponds to the --dry-run option.
     * 
     */
    public Output<Boolean> dryRun() {
        return this.dryRun;
    }
    /**
     * Corresponds to the --quiet option.
     * 
     */
    @Export(name="quiet", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> quiet;

    /**
     * @return Corresponds to the --quiet option.
     * 
     */
    public Output<Boolean> quiet() {
        return this.quiet;
    }
    @Export(name="stderr", refs={String.class}, tree="[0]")
    private Output<String> stderr;

    public Output<String> stderr() {
        return this.stderr;
    }
    @Export(name="stdout", refs={String.class}, tree="[0]")
    private Output<String> stdout;

    public Output<String> stdout() {
        return this.stdout;
    }
    /**
     * Corresponds to the --suffix option.
     * 
     */
    @Export(name="suffix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> suffix;

    /**
     * @return Corresponds to the --suffix option.
     * 
     */
    public Output<Optional<String>> suffix() {
        return Codegen.optional(this.suffix);
    }
    /**
     * Corresponds to the [TEMPLATE] arg.
     * 
     */
    @Export(name="template", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> template;

    /**
     * @return Corresponds to the [TEMPLATE] arg.
     * 
     */
    public Output<Optional<String>> template() {
        return Codegen.optional(this.template);
    }
    /**
     * Corresponds to the --tmpdir option.
     * 
     */
    @Export(name="tmpdir", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tmpdir;

    /**
     * @return Corresponds to the --tmpdir option.
     * 
     */
    public Output<Optional<String>> tmpdir() {
        return Codegen.optional(this.tmpdir);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Mktemp(String name) {
        this(name, MktempArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Mktemp(String name, MktempArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Mktemp(String name, MktempArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("kubernetes-the-hard-way:tools:Mktemp", name, args == null ? MktempArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
