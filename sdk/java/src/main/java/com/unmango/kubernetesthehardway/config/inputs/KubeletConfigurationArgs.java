// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.config.inputs.KubeletConfigurationAuthenticationArgs;
import com.unmango.kubernetesthehardway.config.inputs.KubeletConfigurationAuthorizationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class KubeletConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubeletConfigurationArgs Empty = new KubeletConfigurationArgs();

    @Import(name="apiVersion", required=true)
    private Output<String> apiVersion;

    public Output<String> apiVersion() {
        return this.apiVersion;
    }

    @Import(name="authentication", required=true)
    private Output<KubeletConfigurationAuthenticationArgs> authentication;

    public Output<KubeletConfigurationAuthenticationArgs> authentication() {
        return this.authentication;
    }

    @Import(name="authorization", required=true)
    private Output<KubeletConfigurationAuthorizationArgs> authorization;

    public Output<KubeletConfigurationAuthorizationArgs> authorization() {
        return this.authorization;
    }

    /**
     * TODO
     * 
     */
    @Import(name="cgroupDriver", required=true)
    private Output<String> cgroupDriver;

    /**
     * @return TODO
     * 
     */
    public Output<String> cgroupDriver() {
        return this.cgroupDriver;
    }

    /**
     * TODO
     * 
     */
    @Import(name="clusterDNS", required=true)
    private Output<List<String>> clusterDNS;

    /**
     * @return TODO
     * 
     */
    public Output<List<String>> clusterDNS() {
        return this.clusterDNS;
    }

    /**
     * TODO
     * 
     */
    @Import(name="clusterDomain", required=true)
    private Output<String> clusterDomain;

    /**
     * @return TODO
     * 
     */
    public Output<String> clusterDomain() {
        return this.clusterDomain;
    }

    /**
     * TODO
     * 
     */
    @Import(name="containerRuntimeEndpoint", required=true)
    private Output<String> containerRuntimeEndpoint;

    /**
     * @return TODO
     * 
     */
    public Output<String> containerRuntimeEndpoint() {
        return this.containerRuntimeEndpoint;
    }

    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    /**
     * TODO
     * 
     */
    @Import(name="podCIDR", required=true)
    private Output<String> podCIDR;

    /**
     * @return TODO
     * 
     */
    public Output<String> podCIDR() {
        return this.podCIDR;
    }

    /**
     * TODO
     * 
     */
    @Import(name="resolvConf", required=true)
    private Output<String> resolvConf;

    /**
     * @return TODO
     * 
     */
    public Output<String> resolvConf() {
        return this.resolvConf;
    }

    /**
     * TODO
     * 
     */
    @Import(name="runtimeRequestTimeout", required=true)
    private Output<String> runtimeRequestTimeout;

    /**
     * @return TODO
     * 
     */
    public Output<String> runtimeRequestTimeout() {
        return this.runtimeRequestTimeout;
    }

    /**
     * TODO
     * 
     */
    @Import(name="tlsCertFile", required=true)
    private Output<String> tlsCertFile;

    /**
     * @return TODO
     * 
     */
    public Output<String> tlsCertFile() {
        return this.tlsCertFile;
    }

    /**
     * TODO
     * 
     */
    @Import(name="tlsPrivateKeyFile", required=true)
    private Output<String> tlsPrivateKeyFile;

    /**
     * @return TODO
     * 
     */
    public Output<String> tlsPrivateKeyFile() {
        return this.tlsPrivateKeyFile;
    }

    private KubeletConfigurationArgs() {}

    private KubeletConfigurationArgs(KubeletConfigurationArgs $) {
        this.apiVersion = $.apiVersion;
        this.authentication = $.authentication;
        this.authorization = $.authorization;
        this.cgroupDriver = $.cgroupDriver;
        this.clusterDNS = $.clusterDNS;
        this.clusterDomain = $.clusterDomain;
        this.containerRuntimeEndpoint = $.containerRuntimeEndpoint;
        this.kind = $.kind;
        this.podCIDR = $.podCIDR;
        this.resolvConf = $.resolvConf;
        this.runtimeRequestTimeout = $.runtimeRequestTimeout;
        this.tlsCertFile = $.tlsCertFile;
        this.tlsPrivateKeyFile = $.tlsPrivateKeyFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubeletConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubeletConfigurationArgs $;

        public Builder() {
            $ = new KubeletConfigurationArgs();
        }

        public Builder(KubeletConfigurationArgs defaults) {
            $ = new KubeletConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiVersion(Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        public Builder authentication(Output<KubeletConfigurationAuthenticationArgs> authentication) {
            $.authentication = authentication;
            return this;
        }

        public Builder authentication(KubeletConfigurationAuthenticationArgs authentication) {
            return authentication(Output.of(authentication));
        }

        public Builder authorization(Output<KubeletConfigurationAuthorizationArgs> authorization) {
            $.authorization = authorization;
            return this;
        }

        public Builder authorization(KubeletConfigurationAuthorizationArgs authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param cgroupDriver TODO
         * 
         * @return builder
         * 
         */
        public Builder cgroupDriver(Output<String> cgroupDriver) {
            $.cgroupDriver = cgroupDriver;
            return this;
        }

        /**
         * @param cgroupDriver TODO
         * 
         * @return builder
         * 
         */
        public Builder cgroupDriver(String cgroupDriver) {
            return cgroupDriver(Output.of(cgroupDriver));
        }

        /**
         * @param clusterDNS TODO
         * 
         * @return builder
         * 
         */
        public Builder clusterDNS(Output<List<String>> clusterDNS) {
            $.clusterDNS = clusterDNS;
            return this;
        }

        /**
         * @param clusterDNS TODO
         * 
         * @return builder
         * 
         */
        public Builder clusterDNS(List<String> clusterDNS) {
            return clusterDNS(Output.of(clusterDNS));
        }

        /**
         * @param clusterDNS TODO
         * 
         * @return builder
         * 
         */
        public Builder clusterDNS(String... clusterDNS) {
            return clusterDNS(List.of(clusterDNS));
        }

        /**
         * @param clusterDomain TODO
         * 
         * @return builder
         * 
         */
        public Builder clusterDomain(Output<String> clusterDomain) {
            $.clusterDomain = clusterDomain;
            return this;
        }

        /**
         * @param clusterDomain TODO
         * 
         * @return builder
         * 
         */
        public Builder clusterDomain(String clusterDomain) {
            return clusterDomain(Output.of(clusterDomain));
        }

        /**
         * @param containerRuntimeEndpoint TODO
         * 
         * @return builder
         * 
         */
        public Builder containerRuntimeEndpoint(Output<String> containerRuntimeEndpoint) {
            $.containerRuntimeEndpoint = containerRuntimeEndpoint;
            return this;
        }

        /**
         * @param containerRuntimeEndpoint TODO
         * 
         * @return builder
         * 
         */
        public Builder containerRuntimeEndpoint(String containerRuntimeEndpoint) {
            return containerRuntimeEndpoint(Output.of(containerRuntimeEndpoint));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param podCIDR TODO
         * 
         * @return builder
         * 
         */
        public Builder podCIDR(Output<String> podCIDR) {
            $.podCIDR = podCIDR;
            return this;
        }

        /**
         * @param podCIDR TODO
         * 
         * @return builder
         * 
         */
        public Builder podCIDR(String podCIDR) {
            return podCIDR(Output.of(podCIDR));
        }

        /**
         * @param resolvConf TODO
         * 
         * @return builder
         * 
         */
        public Builder resolvConf(Output<String> resolvConf) {
            $.resolvConf = resolvConf;
            return this;
        }

        /**
         * @param resolvConf TODO
         * 
         * @return builder
         * 
         */
        public Builder resolvConf(String resolvConf) {
            return resolvConf(Output.of(resolvConf));
        }

        /**
         * @param runtimeRequestTimeout TODO
         * 
         * @return builder
         * 
         */
        public Builder runtimeRequestTimeout(Output<String> runtimeRequestTimeout) {
            $.runtimeRequestTimeout = runtimeRequestTimeout;
            return this;
        }

        /**
         * @param runtimeRequestTimeout TODO
         * 
         * @return builder
         * 
         */
        public Builder runtimeRequestTimeout(String runtimeRequestTimeout) {
            return runtimeRequestTimeout(Output.of(runtimeRequestTimeout));
        }

        /**
         * @param tlsCertFile TODO
         * 
         * @return builder
         * 
         */
        public Builder tlsCertFile(Output<String> tlsCertFile) {
            $.tlsCertFile = tlsCertFile;
            return this;
        }

        /**
         * @param tlsCertFile TODO
         * 
         * @return builder
         * 
         */
        public Builder tlsCertFile(String tlsCertFile) {
            return tlsCertFile(Output.of(tlsCertFile));
        }

        /**
         * @param tlsPrivateKeyFile TODO
         * 
         * @return builder
         * 
         */
        public Builder tlsPrivateKeyFile(Output<String> tlsPrivateKeyFile) {
            $.tlsPrivateKeyFile = tlsPrivateKeyFile;
            return this;
        }

        /**
         * @param tlsPrivateKeyFile TODO
         * 
         * @return builder
         * 
         */
        public Builder tlsPrivateKeyFile(String tlsPrivateKeyFile) {
            return tlsPrivateKeyFile(Output.of(tlsPrivateKeyFile));
        }

        public KubeletConfigurationArgs build() {
            $.apiVersion = Codegen.stringProp("apiVersion").output().arg($.apiVersion).require();
            if ($.authentication == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "authentication");
            }
            if ($.authorization == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "authorization");
            }
            if ($.cgroupDriver == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "cgroupDriver");
            }
            if ($.clusterDNS == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "clusterDNS");
            }
            if ($.clusterDomain == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "clusterDomain");
            }
            if ($.containerRuntimeEndpoint == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "containerRuntimeEndpoint");
            }
            $.kind = Codegen.stringProp("kind").output().arg($.kind).require();
            if ($.podCIDR == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "podCIDR");
            }
            if ($.resolvConf == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "resolvConf");
            }
            if ($.runtimeRequestTimeout == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "runtimeRequestTimeout");
            }
            if ($.tlsCertFile == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "tlsCertFile");
            }
            if ($.tlsPrivateKeyFile == null) {
                throw new MissingRequiredPropertyException("KubeletConfigurationArgs", "tlsPrivateKeyFile");
            }
            return $;
        }
    }

}
