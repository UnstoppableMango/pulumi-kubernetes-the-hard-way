// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.remote.inputs.ContainerdCriPluginConfigurationCniArgs;
import com.unmango.kubernetesthehardway.remote.inputs.ContainerdCriPluginConfigurationContainerdArgs;
import java.util.Objects;


/**
 * containerd cri plugin configuration.
 * 
 */
public final class ContainerdCriPluginConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerdCriPluginConfigurationArgs Empty = new ContainerdCriPluginConfigurationArgs();

    /**
     * cni configuration.
     * 
     */
    @Import(name="cni", required=true)
    private ContainerdCriPluginConfigurationCniArgs cni;

    /**
     * @return cni configuration.
     * 
     */
    public ContainerdCriPluginConfigurationCniArgs cni() {
        return this.cni;
    }

    /**
     * containerd configuration.
     * 
     */
    @Import(name="containerd", required=true)
    private ContainerdCriPluginConfigurationContainerdArgs containerd;

    /**
     * @return containerd configuration.
     * 
     */
    public ContainerdCriPluginConfigurationContainerdArgs containerd() {
        return this.containerd;
    }

    private ContainerdCriPluginConfigurationArgs() {}

    private ContainerdCriPluginConfigurationArgs(ContainerdCriPluginConfigurationArgs $) {
        this.cni = $.cni;
        this.containerd = $.containerd;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerdCriPluginConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerdCriPluginConfigurationArgs $;

        public Builder() {
            $ = new ContainerdCriPluginConfigurationArgs();
        }

        public Builder(ContainerdCriPluginConfigurationArgs defaults) {
            $ = new ContainerdCriPluginConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cni cni configuration.
         * 
         * @return builder
         * 
         */
        public Builder cni(ContainerdCriPluginConfigurationCniArgs cni) {
            $.cni = cni;
            return this;
        }

        /**
         * @param containerd containerd configuration.
         * 
         * @return builder
         * 
         */
        public Builder containerd(ContainerdCriPluginConfigurationContainerdArgs containerd) {
            $.containerd = containerd;
            return this;
        }

        public ContainerdCriPluginConfigurationArgs build() {
            if ($.cni == null) {
                throw new MissingRequiredPropertyException("ContainerdCriPluginConfigurationArgs", "cni");
            }
            if ($.containerd == null) {
                throw new MissingRequiredPropertyException("ContainerdCriPluginConfigurationArgs", "containerd");
            }
            return $;
        }
    }

}
