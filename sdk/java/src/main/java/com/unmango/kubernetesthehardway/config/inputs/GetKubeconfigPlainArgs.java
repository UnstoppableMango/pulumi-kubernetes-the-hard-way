// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.config.inputs.KubeconfigAdminOptions;
import com.unmango.kubernetesthehardway.config.inputs.KubeconfigKubeControllerManagerOptions;
import com.unmango.kubernetesthehardway.config.inputs.KubeconfigKubeProxyOptions;
import com.unmango.kubernetesthehardway.config.inputs.KubeconfigKubeSchedulerOptions;
import com.unmango.kubernetesthehardway.config.inputs.KubeconfigWorkerOptions;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


public final class GetKubeconfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubeconfigPlainArgs Empty = new GetKubeconfigPlainArgs();

    /**
     * Certificate authority data.
     * 
     */
    @Import(name="caPem", required=true)
    private String caPem;

    /**
     * @return Certificate authority data.
     * 
     */
    public String caPem() {
        return this.caPem;
    }

    /**
     * Options for creating the kubeconfig.
     * 
     */
    @Import(name="options", required=true)
    private Object options;

    /**
     * @return Options for creating the kubeconfig.
     * 
     */
    public Object options() {
        return this.options;
    }

    private GetKubeconfigPlainArgs() {}

    private GetKubeconfigPlainArgs(GetKubeconfigPlainArgs $) {
        this.caPem = $.caPem;
        this.options = $.options;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubeconfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubeconfigPlainArgs $;

        public Builder() {
            $ = new GetKubeconfigPlainArgs();
        }

        public Builder(GetKubeconfigPlainArgs defaults) {
            $ = new GetKubeconfigPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caPem Certificate authority data.
         * 
         * @return builder
         * 
         */
        public Builder caPem(String caPem) {
            $.caPem = caPem;
            return this;
        }

        /**
         * @param options Options for creating the kubeconfig.
         * 
         * @return builder
         * 
         */
        public Builder options(Object options) {
            $.options = options;
            return this;
        }

        public GetKubeconfigPlainArgs build() {
            if ($.caPem == null) {
                throw new MissingRequiredPropertyException("GetKubeconfigPlainArgs", "caPem");
            }
            if ($.options == null) {
                throw new MissingRequiredPropertyException("GetKubeconfigPlainArgs", "options");
            }
            return $;
        }
    }

}
