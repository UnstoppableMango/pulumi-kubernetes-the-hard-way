// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKubeletConfigurationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubeletConfigurationPlainArgs Empty = new GetKubeletConfigurationPlainArgs();

    @Import(name="anonymous")
    private @Nullable Boolean anonymous;

    public Optional<Boolean> anonymous() {
        return Optional.ofNullable(this.anonymous);
    }

    @Import(name="authorizationMode")
    private @Nullable String authorizationMode;

    public Optional<String> authorizationMode() {
        return Optional.ofNullable(this.authorizationMode);
    }

    @Import(name="cgroupDriver")
    private @Nullable String cgroupDriver;

    public Optional<String> cgroupDriver() {
        return Optional.ofNullable(this.cgroupDriver);
    }

    @Import(name="clientCAFile")
    private @Nullable String clientCAFile;

    public Optional<String> clientCAFile() {
        return Optional.ofNullable(this.clientCAFile);
    }

    @Import(name="clusterDNS")
    private @Nullable List<String> clusterDNS;

    public Optional<List<String>> clusterDNS() {
        return Optional.ofNullable(this.clusterDNS);
    }

    @Import(name="clusterDomain")
    private @Nullable String clusterDomain;

    public Optional<String> clusterDomain() {
        return Optional.ofNullable(this.clusterDomain);
    }

    @Import(name="containerRuntimeEndpoint")
    private @Nullable String containerRuntimeEndpoint;

    public Optional<String> containerRuntimeEndpoint() {
        return Optional.ofNullable(this.containerRuntimeEndpoint);
    }

    @Import(name="podCIDR", required=true)
    private String podCIDR;

    public String podCIDR() {
        return this.podCIDR;
    }

    @Import(name="resolvConf")
    private @Nullable String resolvConf;

    public Optional<String> resolvConf() {
        return Optional.ofNullable(this.resolvConf);
    }

    @Import(name="runtimeRequestTimeout")
    private @Nullable String runtimeRequestTimeout;

    public Optional<String> runtimeRequestTimeout() {
        return Optional.ofNullable(this.runtimeRequestTimeout);
    }

    @Import(name="tlsCertFile")
    private @Nullable String tlsCertFile;

    public Optional<String> tlsCertFile() {
        return Optional.ofNullable(this.tlsCertFile);
    }

    @Import(name="tlsPrivateKeyFile")
    private @Nullable String tlsPrivateKeyFile;

    public Optional<String> tlsPrivateKeyFile() {
        return Optional.ofNullable(this.tlsPrivateKeyFile);
    }

    @Import(name="webhook")
    private @Nullable Boolean webhook;

    public Optional<Boolean> webhook() {
        return Optional.ofNullable(this.webhook);
    }

    private GetKubeletConfigurationPlainArgs() {}

    private GetKubeletConfigurationPlainArgs(GetKubeletConfigurationPlainArgs $) {
        this.anonymous = $.anonymous;
        this.authorizationMode = $.authorizationMode;
        this.cgroupDriver = $.cgroupDriver;
        this.clientCAFile = $.clientCAFile;
        this.clusterDNS = $.clusterDNS;
        this.clusterDomain = $.clusterDomain;
        this.containerRuntimeEndpoint = $.containerRuntimeEndpoint;
        this.podCIDR = $.podCIDR;
        this.resolvConf = $.resolvConf;
        this.runtimeRequestTimeout = $.runtimeRequestTimeout;
        this.tlsCertFile = $.tlsCertFile;
        this.tlsPrivateKeyFile = $.tlsPrivateKeyFile;
        this.webhook = $.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubeletConfigurationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubeletConfigurationPlainArgs $;

        public Builder() {
            $ = new GetKubeletConfigurationPlainArgs();
        }

        public Builder(GetKubeletConfigurationPlainArgs defaults) {
            $ = new GetKubeletConfigurationPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder anonymous(@Nullable Boolean anonymous) {
            $.anonymous = anonymous;
            return this;
        }

        public Builder authorizationMode(@Nullable String authorizationMode) {
            $.authorizationMode = authorizationMode;
            return this;
        }

        public Builder cgroupDriver(@Nullable String cgroupDriver) {
            $.cgroupDriver = cgroupDriver;
            return this;
        }

        public Builder clientCAFile(@Nullable String clientCAFile) {
            $.clientCAFile = clientCAFile;
            return this;
        }

        public Builder clusterDNS(@Nullable List<String> clusterDNS) {
            $.clusterDNS = clusterDNS;
            return this;
        }

        public Builder clusterDNS(String... clusterDNS) {
            return clusterDNS(List.of(clusterDNS));
        }

        public Builder clusterDomain(@Nullable String clusterDomain) {
            $.clusterDomain = clusterDomain;
            return this;
        }

        public Builder containerRuntimeEndpoint(@Nullable String containerRuntimeEndpoint) {
            $.containerRuntimeEndpoint = containerRuntimeEndpoint;
            return this;
        }

        public Builder podCIDR(String podCIDR) {
            $.podCIDR = podCIDR;
            return this;
        }

        public Builder resolvConf(@Nullable String resolvConf) {
            $.resolvConf = resolvConf;
            return this;
        }

        public Builder runtimeRequestTimeout(@Nullable String runtimeRequestTimeout) {
            $.runtimeRequestTimeout = runtimeRequestTimeout;
            return this;
        }

        public Builder tlsCertFile(@Nullable String tlsCertFile) {
            $.tlsCertFile = tlsCertFile;
            return this;
        }

        public Builder tlsPrivateKeyFile(@Nullable String tlsPrivateKeyFile) {
            $.tlsPrivateKeyFile = tlsPrivateKeyFile;
            return this;
        }

        public Builder webhook(@Nullable Boolean webhook) {
            $.webhook = webhook;
            return this;
        }

        public GetKubeletConfigurationPlainArgs build() {
            if ($.podCIDR == null) {
                throw new MissingRequiredPropertyException("GetKubeletConfigurationPlainArgs", "podCIDR");
            }
            return $;
        }
    }

}
