// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.config.inputs.ContainerdCriPluginConfigurationContainerdRuncOptionsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * containerd cri runc plugin configuration.
 * 
 */
public final class ContainerdCriPluginConfigurationContainerdRuncArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerdCriPluginConfigurationContainerdRuncArgs Empty = new ContainerdCriPluginConfigurationContainerdRuncArgs();

    /**
     * runc options.
     * 
     */
    @Import(name="options", required=true)
    private ContainerdCriPluginConfigurationContainerdRuncOptionsArgs options;

    /**
     * @return runc options.
     * 
     */
    public ContainerdCriPluginConfigurationContainerdRuncOptionsArgs options() {
        return this.options;
    }

    /**
     * runtime_type
     * 
     */
    @Import(name="runtimeType")
    private @Nullable Output<String> runtimeType;

    /**
     * @return runtime_type
     * 
     */
    public Optional<Output<String>> runtimeType() {
        return Optional.ofNullable(this.runtimeType);
    }

    private ContainerdCriPluginConfigurationContainerdRuncArgs() {}

    private ContainerdCriPluginConfigurationContainerdRuncArgs(ContainerdCriPluginConfigurationContainerdRuncArgs $) {
        this.options = $.options;
        this.runtimeType = $.runtimeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerdCriPluginConfigurationContainerdRuncArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerdCriPluginConfigurationContainerdRuncArgs $;

        public Builder() {
            $ = new ContainerdCriPluginConfigurationContainerdRuncArgs();
        }

        public Builder(ContainerdCriPluginConfigurationContainerdRuncArgs defaults) {
            $ = new ContainerdCriPluginConfigurationContainerdRuncArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param options runc options.
         * 
         * @return builder
         * 
         */
        public Builder options(ContainerdCriPluginConfigurationContainerdRuncOptionsArgs options) {
            $.options = options;
            return this;
        }

        /**
         * @param runtimeType runtime_type
         * 
         * @return builder
         * 
         */
        public Builder runtimeType(@Nullable Output<String> runtimeType) {
            $.runtimeType = runtimeType;
            return this;
        }

        /**
         * @param runtimeType runtime_type
         * 
         * @return builder
         * 
         */
        public Builder runtimeType(String runtimeType) {
            return runtimeType(Output.of(runtimeType));
        }

        public ContainerdCriPluginConfigurationContainerdRuncArgs build() {
            if ($.options == null) {
                throw new MissingRequiredPropertyException("ContainerdCriPluginConfigurationContainerdRuncArgs", "options");
            }
            return $;
        }
    }

}
