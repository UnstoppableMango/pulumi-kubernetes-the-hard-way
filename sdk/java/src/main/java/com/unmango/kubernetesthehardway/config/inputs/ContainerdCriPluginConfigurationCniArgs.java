// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * containerd cri plugin configuration.
 * 
 */
public final class ContainerdCriPluginConfigurationCniArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerdCriPluginConfigurationCniArgs Empty = new ContainerdCriPluginConfigurationCniArgs();

    /**
     * bin_dir
     * 
     */
    @Import(name="binDir")
    private @Nullable Output<String> binDir;

    /**
     * @return bin_dir
     * 
     */
    public Optional<Output<String>> binDir() {
        return Optional.ofNullable(this.binDir);
    }

    /**
     * conf_dir
     * 
     */
    @Import(name="confDir")
    private @Nullable Output<String> confDir;

    /**
     * @return conf_dir
     * 
     */
    public Optional<Output<String>> confDir() {
        return Optional.ofNullable(this.confDir);
    }

    private ContainerdCriPluginConfigurationCniArgs() {}

    private ContainerdCriPluginConfigurationCniArgs(ContainerdCriPluginConfigurationCniArgs $) {
        this.binDir = $.binDir;
        this.confDir = $.confDir;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerdCriPluginConfigurationCniArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerdCriPluginConfigurationCniArgs $;

        public Builder() {
            $ = new ContainerdCriPluginConfigurationCniArgs();
        }

        public Builder(ContainerdCriPluginConfigurationCniArgs defaults) {
            $ = new ContainerdCriPluginConfigurationCniArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param binDir bin_dir
         * 
         * @return builder
         * 
         */
        public Builder binDir(@Nullable Output<String> binDir) {
            $.binDir = binDir;
            return this;
        }

        /**
         * @param binDir bin_dir
         * 
         * @return builder
         * 
         */
        public Builder binDir(String binDir) {
            return binDir(Output.of(binDir));
        }

        /**
         * @param confDir conf_dir
         * 
         * @return builder
         * 
         */
        public Builder confDir(@Nullable Output<String> confDir) {
            $.confDir = confDir;
            return this;
        }

        /**
         * @param confDir conf_dir
         * 
         * @return builder
         * 
         */
        public Builder confDir(String confDir) {
            return confDir(Output.of(confDir));
        }

        public ContainerdCriPluginConfigurationCniArgs build() {
            return $;
        }
    }

}
