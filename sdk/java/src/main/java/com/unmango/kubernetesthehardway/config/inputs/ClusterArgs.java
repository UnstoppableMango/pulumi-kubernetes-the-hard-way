// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @Import(name="certificateAuthorityData", required=true)
    private Output<String> certificateAuthorityData;

    public Output<String> certificateAuthorityData() {
        return this.certificateAuthorityData;
    }

    @Import(name="server", required=true)
    private Output<String> server;

    public Output<String> server() {
        return this.server;
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.certificateAuthorityData = $.certificateAuthorityData;
        this.server = $.server;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateAuthorityData(Output<String> certificateAuthorityData) {
            $.certificateAuthorityData = certificateAuthorityData;
            return this;
        }

        public Builder certificateAuthorityData(String certificateAuthorityData) {
            return certificateAuthorityData(Output.of(certificateAuthorityData));
        }

        public Builder server(Output<String> server) {
            $.server = server;
            return this;
        }

        public Builder server(String server) {
            return server(Output.of(server));
        }

        public ClusterArgs build() {
            if ($.certificateAuthorityData == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "certificateAuthorityData");
            }
            if ($.server == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "server");
            }
            return $;
        }
    }

}
