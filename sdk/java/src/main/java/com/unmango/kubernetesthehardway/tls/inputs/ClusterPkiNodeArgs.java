// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.tls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.unmango.kubernetesthehardway.tls.enums.NodeRole;
import java.lang.String;
import java.util.Objects;


/**
 * TODO
 * 
 */
public final class ClusterPkiNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterPkiNodeArgs Empty = new ClusterPkiNodeArgs();

    /**
     * The IP address of the node
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return The IP address of the node
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * The role a node should be configured for
     * 
     */
    @Import(name="role", required=true)
    private Output<NodeRole> role;

    /**
     * @return The role a node should be configured for
     * 
     */
    public Output<NodeRole> role() {
        return this.role;
    }

    private ClusterPkiNodeArgs() {}

    private ClusterPkiNodeArgs(ClusterPkiNodeArgs $) {
        this.ip = $.ip;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterPkiNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterPkiNodeArgs $;

        public Builder() {
            $ = new ClusterPkiNodeArgs();
        }

        public Builder(ClusterPkiNodeArgs defaults) {
            $ = new ClusterPkiNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP address of the node
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP address of the node
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param role The role a node should be configured for
         * 
         * @return builder
         * 
         */
        public Builder role(Output<NodeRole> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role a node should be configured for
         * 
         * @return builder
         * 
         */
        public Builder role(NodeRole role) {
            return role(Output.of(role));
        }

        public ClusterPkiNodeArgs build() {
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("ClusterPkiNodeArgs", "ip");
            }
            if ($.role == null) {
                throw new MissingRequiredPropertyException("ClusterPkiNodeArgs", "role");
            }
            return $;
        }
    }

}
