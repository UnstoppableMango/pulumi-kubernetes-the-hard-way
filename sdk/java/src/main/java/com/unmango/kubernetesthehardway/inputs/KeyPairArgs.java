// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.tls.PrivateKey;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A certificate and key pair.
 * 
 */
public final class KeyPairArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyPairArgs Empty = new KeyPairArgs();

    /**
     * The PEM encoded certificate data
     * 
     */
    @Import(name="certPem")
    private @Nullable Output<String> certPem;

    /**
     * @return The PEM encoded certificate data
     * 
     */
    public Optional<Output<String>> certPem() {
        return Optional.ofNullable(this.certPem);
    }

    /**
     * The private key.
     * 
     */
    @Import(name="key")
    private @Nullable Output<PrivateKey> key;

    /**
     * @return The private key.
     * 
     */
    public Optional<Output<PrivateKey>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The PEM encoded private key data.
     * 
     */
    @Import(name="privateKeyPem")
    private @Nullable Output<String> privateKeyPem;

    /**
     * @return The PEM encoded private key data.
     * 
     */
    public Optional<Output<String>> privateKeyPem() {
        return Optional.ofNullable(this.privateKeyPem);
    }

    /**
     * The PEM encoded public key data.
     * 
     */
    @Import(name="publicKeyPem")
    private @Nullable Output<String> publicKeyPem;

    /**
     * @return The PEM encoded public key data.
     * 
     */
    public Optional<Output<String>> publicKeyPem() {
        return Optional.ofNullable(this.publicKeyPem);
    }

    private KeyPairArgs() {}

    private KeyPairArgs(KeyPairArgs $) {
        this.certPem = $.certPem;
        this.key = $.key;
        this.privateKeyPem = $.privateKeyPem;
        this.publicKeyPem = $.publicKeyPem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyPairArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyPairArgs $;

        public Builder() {
            $ = new KeyPairArgs();
        }

        public Builder(KeyPairArgs defaults) {
            $ = new KeyPairArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certPem The PEM encoded certificate data
         * 
         * @return builder
         * 
         */
        public Builder certPem(@Nullable Output<String> certPem) {
            $.certPem = certPem;
            return this;
        }

        /**
         * @param certPem The PEM encoded certificate data
         * 
         * @return builder
         * 
         */
        public Builder certPem(String certPem) {
            return certPem(Output.of(certPem));
        }

        /**
         * @param key The private key.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<PrivateKey> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The private key.
         * 
         * @return builder
         * 
         */
        public Builder key(PrivateKey key) {
            return key(Output.of(key));
        }

        /**
         * @param privateKeyPem The PEM encoded private key data.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyPem(@Nullable Output<String> privateKeyPem) {
            $.privateKeyPem = privateKeyPem;
            return this;
        }

        /**
         * @param privateKeyPem The PEM encoded private key data.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyPem(String privateKeyPem) {
            return privateKeyPem(Output.of(privateKeyPem));
        }

        /**
         * @param publicKeyPem The PEM encoded public key data.
         * 
         * @return builder
         * 
         */
        public Builder publicKeyPem(@Nullable Output<String> publicKeyPem) {
            $.publicKeyPem = publicKeyPem;
            return this;
        }

        /**
         * @param publicKeyPem The PEM encoded public key data.
         * 
         * @return builder
         * 
         */
        public Builder publicKeyPem(String publicKeyPem) {
            return publicKeyPem(Output.of(publicKeyPem));
        }

        public KeyPairArgs build() {
            return $;
        }
    }

}
