// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.outputs;

import com.pulumi.core.annotations.CustomType;
import com.unmango.kubernetesthehardway.config.outputs.ContainerdCriPluginConfigurationContainerdRunc;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerdCriPluginConfigurationContainerd {
    /**
     * @return default_runtime_name
     * 
     */
    private @Nullable String defaultRuntimeName;
    /**
     * @return The containerd runtime configuration.
     * 
     */
    private @Nullable ContainerdCriPluginConfigurationContainerdRunc runtimes;
    /**
     * @return snapshotter
     * 
     */
    private @Nullable String snapshotter;

    private ContainerdCriPluginConfigurationContainerd() {}
    /**
     * @return default_runtime_name
     * 
     */
    public Optional<String> defaultRuntimeName() {
        return Optional.ofNullable(this.defaultRuntimeName);
    }
    /**
     * @return The containerd runtime configuration.
     * 
     */
    public Optional<ContainerdCriPluginConfigurationContainerdRunc> runtimes() {
        return Optional.ofNullable(this.runtimes);
    }
    /**
     * @return snapshotter
     * 
     */
    public Optional<String> snapshotter() {
        return Optional.ofNullable(this.snapshotter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerdCriPluginConfigurationContainerd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultRuntimeName;
        private @Nullable ContainerdCriPluginConfigurationContainerdRunc runtimes;
        private @Nullable String snapshotter;
        public Builder() {}
        public Builder(ContainerdCriPluginConfigurationContainerd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRuntimeName = defaults.defaultRuntimeName;
    	      this.runtimes = defaults.runtimes;
    	      this.snapshotter = defaults.snapshotter;
        }

        @CustomType.Setter
        public Builder defaultRuntimeName(@Nullable String defaultRuntimeName) {

            this.defaultRuntimeName = defaultRuntimeName;
            return this;
        }
        @CustomType.Setter
        public Builder runtimes(@Nullable ContainerdCriPluginConfigurationContainerdRunc runtimes) {

            this.runtimes = runtimes;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotter(@Nullable String snapshotter) {

            this.snapshotter = snapshotter;
            return this;
        }
        public ContainerdCriPluginConfigurationContainerd build() {
            final var _resultValue = new ContainerdCriPluginConfigurationContainerd();
            _resultValue.defaultRuntimeName = defaultRuntimeName;
            _resultValue.runtimes = runtimes;
            _resultValue.snapshotter = snapshotter;
            return _resultValue;
        }
    }
}
