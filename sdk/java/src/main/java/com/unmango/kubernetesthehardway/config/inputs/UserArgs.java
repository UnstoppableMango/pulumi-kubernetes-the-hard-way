// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.config.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    @Import(name="clientCertificateData", required=true)
    private Output<String> clientCertificateData;

    public Output<String> clientCertificateData() {
        return this.clientCertificateData;
    }

    @Import(name="clientKeyData", required=true)
    private Output<String> clientKeyData;

    public Output<String> clientKeyData() {
        return this.clientKeyData;
    }

    private UserArgs() {}

    private UserArgs(UserArgs $) {
        this.clientCertificateData = $.clientCertificateData;
        this.clientKeyData = $.clientKeyData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserArgs $;

        public Builder() {
            $ = new UserArgs();
        }

        public Builder(UserArgs defaults) {
            $ = new UserArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientCertificateData(Output<String> clientCertificateData) {
            $.clientCertificateData = clientCertificateData;
            return this;
        }

        public Builder clientCertificateData(String clientCertificateData) {
            return clientCertificateData(Output.of(clientCertificateData));
        }

        public Builder clientKeyData(Output<String> clientKeyData) {
            $.clientKeyData = clientKeyData;
            return this;
        }

        public Builder clientKeyData(String clientKeyData) {
            return clientKeyData(Output.of(clientKeyData));
        }

        public UserArgs build() {
            if ($.clientCertificateData == null) {
                throw new MissingRequiredPropertyException("UserArgs", "clientCertificateData");
            }
            if ($.clientKeyData == null) {
                throw new MissingRequiredPropertyException("UserArgs", "clientKeyData");
            }
            return $;
        }
    }

}
