// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.outputs.Connection;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.unmango.kubernetesthehardway.Utilities;
import com.unmango.kubernetesthehardway.remote.File;
import com.unmango.kubernetesthehardway.remote.SystemdServiceArgs;
import com.unmango.kubernetesthehardway.remote.outputs.SystemdInstallSection;
import com.unmango.kubernetesthehardway.remote.outputs.SystemdServiceSection;
import com.unmango.kubernetesthehardway.remote.outputs.SystemdUnitSection;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A systemd service on a remote system.
 * 
 */
@ResourceType(type="kubernetes-the-hard-way:remote:SystemdService")
public class SystemdService extends com.pulumi.resources.ComponentResource {
    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Export(name="connection", refs={Connection.class}, tree="[0]")
    private Output<Connection> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<Connection> connection() {
        return this.connection;
    }
    /**
     * The location to create the service file.
     * 
     */
    @Export(name="directory", refs={String.class}, tree="[0]")
    private Output<String> directory;

    /**
     * @return The location to create the service file.
     * 
     */
    public Output<String> directory() {
        return this.directory;
    }
    /**
     * The service file on the remote machine.
     * 
     */
    @Export(name="file", refs={File.class}, tree="[0]")
    private Output<File> file;

    /**
     * @return The service file on the remote machine.
     * 
     */
    public Output<File> file() {
        return this.file;
    }
    /**
     * Describes the [Install] section of a systemd service file.
     * 
     */
    @Export(name="install", refs={SystemdInstallSection.class}, tree="[0]")
    private Output</* @Nullable */ SystemdInstallSection> install;

    /**
     * @return Describes the [Install] section of a systemd service file.
     * 
     */
    public Output<Optional<SystemdInstallSection>> install() {
        return Codegen.optional(this.install);
    }
    /**
     * Describes the [Service] section of a systemd service file.
     * 
     */
    @Export(name="service", refs={SystemdServiceSection.class}, tree="[0]")
    private Output<SystemdServiceSection> service;

    /**
     * @return Describes the [Service] section of a systemd service file.
     * 
     */
    public Output<SystemdServiceSection> service() {
        return this.service;
    }
    /**
     * Describes the [Unit] section of a systemd service file.
     * 
     */
    @Export(name="unit", refs={SystemdUnitSection.class}, tree="[0]")
    private Output</* @Nullable */ SystemdUnitSection> unit;

    /**
     * @return Describes the [Unit] section of a systemd service file.
     * 
     */
    public Output<Optional<SystemdUnitSection>> unit() {
        return Codegen.optional(this.unit);
    }
    /**
     * Name of the systemd unit.
     * 
     */
    @Export(name="unitName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> unitName;

    /**
     * @return Name of the systemd unit.
     * 
     */
    public Output<Optional<String>> unitName() {
        return Codegen.optional(this.unitName);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SystemdService(String name) {
        this(name, SystemdServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SystemdService(String name, SystemdServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SystemdService(String name, SystemdServiceArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("kubernetes-the-hard-way:remote:SystemdService", name, args == null ? SystemdServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
