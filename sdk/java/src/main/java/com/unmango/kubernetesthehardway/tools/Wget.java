// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.tools;

import com.pulumi.command.remote.Command;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.unmango.kubernetesthehardway.Utilities;
import com.unmango.kubernetesthehardway.tools.WgetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Abstraction over the `wget` utility on a remote system.
 * 
 */
@ResourceType(type="kubernetes-the-hard-way:tools:Wget")
public class Wget extends com.pulumi.resources.ComponentResource {
    /**
     * Represents the remote `tar` operation.
     * 
     */
    @Export(name="command", refs={Command.class}, tree="[0]")
    private Output<Command> command;

    /**
     * @return Represents the remote `tar` operation.
     * 
     */
    public Output<Command> command() {
        return this.command;
    }
    /**
     * Corresponds to the --directory-prefix option.
     * 
     */
    @Export(name="directoryPrefix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> directoryPrefix;

    /**
     * @return Corresponds to the --directory-prefix option.
     * 
     */
    public Output<Optional<String>> directoryPrefix() {
        return Codegen.optional(this.directoryPrefix);
    }
    @Export(name="environment", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> environment;

    public Output<Optional<Map<String,String>>> environment() {
        return Codegen.optional(this.environment);
    }
    /**
     * Corresponds to the --https-only option.
     * 
     */
    @Export(name="httpsOnly", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> httpsOnly;

    /**
     * @return Corresponds to the --https-only option.
     * 
     */
    public Output<Boolean> httpsOnly() {
        return this.httpsOnly;
    }
    /**
     * Corresponds to the --no-verbose option.
     * 
     */
    @Export(name="noVerbose", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> noVerbose;

    /**
     * @return Corresponds to the --no-verbose option.
     * 
     */
    public Output<Optional<Boolean>> noVerbose() {
        return Codegen.optional(this.noVerbose);
    }
    /**
     * Corresponds to the --output-document option.
     * 
     */
    @Export(name="outputDocument", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> outputDocument;

    /**
     * @return Corresponds to the --output-document option.
     * 
     */
    public Output<Optional<String>> outputDocument() {
        return Codegen.optional(this.outputDocument);
    }
    /**
     * Corresponds to the --quiet option.
     * 
     */
    @Export(name="quiet", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> quiet;

    /**
     * @return Corresponds to the --quiet option.
     * 
     */
    public Output<Boolean> quiet() {
        return this.quiet;
    }
    /**
     * The process&#39; stderr.
     * 
     */
    @Export(name="stderr", refs={String.class}, tree="[0]")
    private Output<String> stderr;

    /**
     * @return The process&#39; stderr.
     * 
     */
    public Output<String> stderr() {
        return this.stderr;
    }
    /**
     * The process&#39; stdin.
     * 
     */
    @Export(name="stdin", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> stdin;

    /**
     * @return The process&#39; stdin.
     * 
     */
    public Output<Optional<String>> stdin() {
        return Codegen.optional(this.stdin);
    }
    /**
     * The process&#39; stdout.
     * 
     */
    @Export(name="stdout", refs={String.class}, tree="[0]")
    private Output<String> stdout;

    /**
     * @return The process&#39; stdout.
     * 
     */
    public Output<String> stdout() {
        return this.stdout;
    }
    /**
     * Corresponds to the --timestamping option.
     * 
     */
    @Export(name="timestamping", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> timestamping;

    /**
     * @return Corresponds to the --timestamping option.
     * 
     */
    public Output<Boolean> timestamping() {
        return this.timestamping;
    }
    /**
     * Corresponse to the [URL] argument.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return Corresponse to the [URL] argument.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Wget(String name) {
        this(name, WgetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Wget(String name, WgetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Wget(String name, WgetArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("kubernetes-the-hard-way:tools:Wget", name, args == null ? WgetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
