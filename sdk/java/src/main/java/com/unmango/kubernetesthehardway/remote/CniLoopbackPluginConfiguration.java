// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.kubernetesthehardway.remote;

import com.pulumi.command.remote.outputs.Connection;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.unmango.kubernetesthehardway.Utilities;
import com.unmango.kubernetesthehardway.remote.CniLoopbackPluginConfigurationArgs;
import com.unmango.kubernetesthehardway.remote.File;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The CNI loopback plugin configuration.
 * 
 */
@ResourceType(type="kubernetes-the-hard-way:remote:CniLoopbackPluginConfiguration")
public class CniLoopbackPluginConfiguration extends com.pulumi.resources.ComponentResource {
    /**
     * CNI version.
     * 
     */
    @Export(name="cniVersion", refs={String.class}, tree="[0]")
    private Output<String> cniVersion;

    /**
     * @return CNI version.
     * 
     */
    public Output<String> cniVersion() {
        return this.cniVersion;
    }
    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Export(name="connection", refs={Connection.class}, tree="[0]")
    private Output<Connection> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<Connection> connection() {
        return this.connection;
    }
    /**
     * The file on the remote system.
     * 
     */
    @Export(name="file", refs={File.class}, tree="[0]")
    private Output</* @Nullable */ File> file;

    /**
     * @return The file on the remote system.
     * 
     */
    public Output<Optional<File>> file() {
        return Codegen.optional(this.file);
    }
    /**
     * CNI plugin name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return CNI plugin name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Path to put the configuration file on the remote system
     * 
     */
    @Export(name="path", refs={String.class}, tree="[0]")
    private Output<String> path;

    /**
     * @return Path to put the configuration file on the remote system
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * CNI plugin type.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return CNI plugin type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CniLoopbackPluginConfiguration(String name) {
        this(name, CniLoopbackPluginConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CniLoopbackPluginConfiguration(String name, CniLoopbackPluginConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CniLoopbackPluginConfiguration(String name, CniLoopbackPluginConfigurationArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("kubernetes-the-hard-way:remote:CniLoopbackPluginConfiguration", name, args == null ? CniLoopbackPluginConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()), true);
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
