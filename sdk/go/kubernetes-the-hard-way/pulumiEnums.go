// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesthehardway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CPU architecture
type Architecture string

const (
	ArchitectureAmd64 = Architecture("amd64")
	ArchitectureArm64 = Architecture("arm64")
)

func (Architecture) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (e Architecture) ToArchitectureOutput() ArchitectureOutput {
	return pulumi.ToOutput(e).(ArchitectureOutput)
}

func (e Architecture) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArchitectureOutput)
}

func (e Architecture) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return e.ToArchitecturePtrOutputWithContext(context.Background())
}

func (e Architecture) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return Architecture(e).ToArchitectureOutputWithContext(ctx).ToArchitecturePtrOutputWithContext(ctx)
}

func (e Architecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Architecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArchitectureOutput struct{ *pulumi.OutputState }

func (ArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (o ArchitectureOutput) ToArchitectureOutput() ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o.ToArchitecturePtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Architecture) *Architecture {
		return &v
	}).(ArchitecturePtrOutput)
}

func (o ArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Architecture)(nil)).Elem()
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) Elem() ArchitectureOutput {
	return o.ApplyT(func(v *Architecture) Architecture {
		if v != nil {
			return *v
		}
		var ret Architecture
		return ret
	}).(ArchitectureOutput)
}

func (o ArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Architecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArchitectureInput is an input type that accepts values of the Architecture enum
// A concrete instance of `ArchitectureInput` can be one of the following:
//
//	ArchitectureAmd64
//	ArchitectureArm64
type ArchitectureInput interface {
	pulumi.Input

	ToArchitectureOutput() ArchitectureOutput
	ToArchitectureOutputWithContext(context.Context) ArchitectureOutput
}

var architecturePtrType = reflect.TypeOf((**Architecture)(nil)).Elem()

type ArchitecturePtrInput interface {
	pulumi.Input

	ToArchitecturePtrOutput() ArchitecturePtrOutput
	ToArchitecturePtrOutputWithContext(context.Context) ArchitecturePtrOutput
}

type architecturePtr string

func ArchitecturePtr(v string) ArchitecturePtrInput {
	return (*architecturePtr)(&v)
}

func (*architecturePtr) ElementType() reflect.Type {
	return architecturePtrType
}

func (in *architecturePtr) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ArchitecturePtrOutput)
}

func (in *architecturePtr) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArchitecturePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArchitectureInput)(nil)).Elem(), Architecture("amd64"))
	pulumi.RegisterInputType(reflect.TypeOf((*ArchitecturePtrInput)(nil)).Elem(), Architecture("amd64"))
	pulumi.RegisterOutputType(ArchitectureOutput{})
	pulumi.RegisterOutputType(ArchitecturePtrOutput{})
}
