// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesthehardway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TODO
type Algorithm string

const (
	AlgorithmRSA     = Algorithm("RSA")
	AlgorithmECDSA   = Algorithm("ECDSA")
	AlgorithmED25519 = Algorithm("ED25519")
)

func (Algorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*Algorithm)(nil)).Elem()
}

func (e Algorithm) ToAlgorithmOutput() AlgorithmOutput {
	return pulumi.ToOutput(e).(AlgorithmOutput)
}

func (e Algorithm) ToAlgorithmOutputWithContext(ctx context.Context) AlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlgorithmOutput)
}

func (e Algorithm) ToAlgorithmPtrOutput() AlgorithmPtrOutput {
	return e.ToAlgorithmPtrOutputWithContext(context.Background())
}

func (e Algorithm) ToAlgorithmPtrOutputWithContext(ctx context.Context) AlgorithmPtrOutput {
	return Algorithm(e).ToAlgorithmOutputWithContext(ctx).ToAlgorithmPtrOutputWithContext(ctx)
}

func (e Algorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Algorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Algorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Algorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlgorithmOutput struct{ *pulumi.OutputState }

func (AlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Algorithm)(nil)).Elem()
}

func (o AlgorithmOutput) ToAlgorithmOutput() AlgorithmOutput {
	return o
}

func (o AlgorithmOutput) ToAlgorithmOutputWithContext(ctx context.Context) AlgorithmOutput {
	return o
}

func (o AlgorithmOutput) ToAlgorithmPtrOutput() AlgorithmPtrOutput {
	return o.ToAlgorithmPtrOutputWithContext(context.Background())
}

func (o AlgorithmOutput) ToAlgorithmPtrOutputWithContext(ctx context.Context) AlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Algorithm) *Algorithm {
		return &v
	}).(AlgorithmPtrOutput)
}

func (o AlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Algorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Algorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlgorithmPtrOutput struct{ *pulumi.OutputState }

func (AlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Algorithm)(nil)).Elem()
}

func (o AlgorithmPtrOutput) ToAlgorithmPtrOutput() AlgorithmPtrOutput {
	return o
}

func (o AlgorithmPtrOutput) ToAlgorithmPtrOutputWithContext(ctx context.Context) AlgorithmPtrOutput {
	return o
}

func (o AlgorithmPtrOutput) Elem() AlgorithmOutput {
	return o.ApplyT(func(v *Algorithm) Algorithm {
		if v != nil {
			return *v
		}
		var ret Algorithm
		return ret
	}).(AlgorithmOutput)
}

func (o AlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Algorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlgorithmInput is an input type that accepts values of the Algorithm enum
// A concrete instance of `AlgorithmInput` can be one of the following:
//
//	AlgorithmRSA
//	AlgorithmECDSA
//	AlgorithmED25519
type AlgorithmInput interface {
	pulumi.Input

	ToAlgorithmOutput() AlgorithmOutput
	ToAlgorithmOutputWithContext(context.Context) AlgorithmOutput
}

var algorithmPtrType = reflect.TypeOf((**Algorithm)(nil)).Elem()

type AlgorithmPtrInput interface {
	pulumi.Input

	ToAlgorithmPtrOutput() AlgorithmPtrOutput
	ToAlgorithmPtrOutputWithContext(context.Context) AlgorithmPtrOutput
}

type algorithmPtr string

func AlgorithmPtr(v string) AlgorithmPtrInput {
	return (*algorithmPtr)(&v)
}

func (*algorithmPtr) ElementType() reflect.Type {
	return algorithmPtrType
}

func (in *algorithmPtr) ToAlgorithmPtrOutput() AlgorithmPtrOutput {
	return pulumi.ToOutput(in).(AlgorithmPtrOutput)
}

func (in *algorithmPtr) ToAlgorithmPtrOutputWithContext(ctx context.Context) AlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlgorithmPtrOutput)
}

// TODO
type AllowedUsage string

const (
	AllowedUsage_Cert_signing      = AllowedUsage("cert_signing")
	AllowedUsage_Client_auth       = AllowedUsage("client_auth")
	AllowedUsage_Crl_signing       = AllowedUsage("crl_signing")
	AllowedUsage_Digital_signature = AllowedUsage("digital_signature")
	AllowedUsage_Key_encipherment  = AllowedUsage("key_encipherment")
	AllowedUsage_Server_auth       = AllowedUsage("server_auth")
)

// TODO
type EcdsaCurve string

const (
	EcdsaCurveP224 = EcdsaCurve("P224")
	EcdsaCurveP256 = EcdsaCurve("P256")
	EcdsaCurveP384 = EcdsaCurve("P384")
	EcdsaCurveP521 = EcdsaCurve("P521")
)

func (EcdsaCurve) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdsaCurve)(nil)).Elem()
}

func (e EcdsaCurve) ToEcdsaCurveOutput() EcdsaCurveOutput {
	return pulumi.ToOutput(e).(EcdsaCurveOutput)
}

func (e EcdsaCurve) ToEcdsaCurveOutputWithContext(ctx context.Context) EcdsaCurveOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EcdsaCurveOutput)
}

func (e EcdsaCurve) ToEcdsaCurvePtrOutput() EcdsaCurvePtrOutput {
	return e.ToEcdsaCurvePtrOutputWithContext(context.Background())
}

func (e EcdsaCurve) ToEcdsaCurvePtrOutputWithContext(ctx context.Context) EcdsaCurvePtrOutput {
	return EcdsaCurve(e).ToEcdsaCurveOutputWithContext(ctx).ToEcdsaCurvePtrOutputWithContext(ctx)
}

func (e EcdsaCurve) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EcdsaCurve) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EcdsaCurve) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EcdsaCurve) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EcdsaCurveOutput struct{ *pulumi.OutputState }

func (EcdsaCurveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdsaCurve)(nil)).Elem()
}

func (o EcdsaCurveOutput) ToEcdsaCurveOutput() EcdsaCurveOutput {
	return o
}

func (o EcdsaCurveOutput) ToEcdsaCurveOutputWithContext(ctx context.Context) EcdsaCurveOutput {
	return o
}

func (o EcdsaCurveOutput) ToEcdsaCurvePtrOutput() EcdsaCurvePtrOutput {
	return o.ToEcdsaCurvePtrOutputWithContext(context.Background())
}

func (o EcdsaCurveOutput) ToEcdsaCurvePtrOutputWithContext(ctx context.Context) EcdsaCurvePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EcdsaCurve) *EcdsaCurve {
		return &v
	}).(EcdsaCurvePtrOutput)
}

func (o EcdsaCurveOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EcdsaCurveOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EcdsaCurve) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EcdsaCurveOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EcdsaCurveOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EcdsaCurve) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EcdsaCurvePtrOutput struct{ *pulumi.OutputState }

func (EcdsaCurvePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcdsaCurve)(nil)).Elem()
}

func (o EcdsaCurvePtrOutput) ToEcdsaCurvePtrOutput() EcdsaCurvePtrOutput {
	return o
}

func (o EcdsaCurvePtrOutput) ToEcdsaCurvePtrOutputWithContext(ctx context.Context) EcdsaCurvePtrOutput {
	return o
}

func (o EcdsaCurvePtrOutput) Elem() EcdsaCurveOutput {
	return o.ApplyT(func(v *EcdsaCurve) EcdsaCurve {
		if v != nil {
			return *v
		}
		var ret EcdsaCurve
		return ret
	}).(EcdsaCurveOutput)
}

func (o EcdsaCurvePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EcdsaCurvePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EcdsaCurve) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EcdsaCurveInput is an input type that accepts values of the EcdsaCurve enum
// A concrete instance of `EcdsaCurveInput` can be one of the following:
//
//	EcdsaCurveP224
//	EcdsaCurveP256
//	EcdsaCurveP384
//	EcdsaCurveP521
type EcdsaCurveInput interface {
	pulumi.Input

	ToEcdsaCurveOutput() EcdsaCurveOutput
	ToEcdsaCurveOutputWithContext(context.Context) EcdsaCurveOutput
}

var ecdsaCurvePtrType = reflect.TypeOf((**EcdsaCurve)(nil)).Elem()

type EcdsaCurvePtrInput interface {
	pulumi.Input

	ToEcdsaCurvePtrOutput() EcdsaCurvePtrOutput
	ToEcdsaCurvePtrOutputWithContext(context.Context) EcdsaCurvePtrOutput
}

type ecdsaCurvePtr string

func EcdsaCurvePtr(v string) EcdsaCurvePtrInput {
	return (*ecdsaCurvePtr)(&v)
}

func (*ecdsaCurvePtr) ElementType() reflect.Type {
	return ecdsaCurvePtrType
}

func (in *ecdsaCurvePtr) ToEcdsaCurvePtrOutput() EcdsaCurvePtrOutput {
	return pulumi.ToOutput(in).(EcdsaCurvePtrOutput)
}

func (in *ecdsaCurvePtr) ToEcdsaCurvePtrOutputWithContext(ctx context.Context) EcdsaCurvePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EcdsaCurvePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlgorithmInput)(nil)).Elem(), Algorithm("RSA"))
	pulumi.RegisterInputType(reflect.TypeOf((*AlgorithmPtrInput)(nil)).Elem(), Algorithm("RSA"))
	pulumi.RegisterInputType(reflect.TypeOf((*EcdsaCurveInput)(nil)).Elem(), EcdsaCurve("P224"))
	pulumi.RegisterInputType(reflect.TypeOf((*EcdsaCurvePtrInput)(nil)).Elem(), EcdsaCurve("P224"))
	pulumi.RegisterOutputType(AlgorithmOutput{})
	pulumi.RegisterOutputType(AlgorithmPtrOutput{})
	pulumi.RegisterOutputType(EcdsaCurveOutput{})
	pulumi.RegisterOutputType(EcdsaCurvePtrOutput{})
}
