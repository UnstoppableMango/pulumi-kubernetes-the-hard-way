// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesthehardway

import (
	"github.com/pulumi/pulumi-tls/sdk/v5/go/tls"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way/internal"
)

// Creates a Certificate configured for the cluster admin.
func GetAdminCertificate(ctx *pulumi.Context, args *GetAdminCertificateArgs, opts ...pulumi.InvokeOption) error {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv struct{}
	err := ctx.Invoke("kubernetes-the-hard-way:index:getAdminCertificate", args, &rv, opts...)
	return err
}

type GetAdminCertificateArgs struct {
	// Name of the algorithm to use when generating the private key.
	Algorithm   *string  `pulumi:"algorithm"`
	AllowedUses []string `pulumi:"allowedUses"`
	// List of DNS names for which a certificate is being requested.
	DnsNames []string `pulumi:"dnsNames"`
	// TODO
	EarlyRenewalHours *int `pulumi:"earlyRenewalHours"`
	// When `algorithm` is `ECDSA`, the name of the elliptic curve to use.
	EcdsaCurve *string `pulumi:"ecdsaCurve"`
	// List of IP addresses for which a certificate is being requested.
	IpAddresses     []string `pulumi:"ipAddresses"`
	IsCaCertificate *bool    `pulumi:"isCaCertificate"`
	// When `algorithm` is `RSA`, the size of the generated RSA key, in bits.
	RsaBits *int `pulumi:"rsaBits"`
	// Should the generated certificate include an authority key identifier.
	SetAuthorityKeyId *bool `pulumi:"setAuthorityKeyId"`
	// Should the generated certificate include a subject key identifier.
	SetSubjectKeyId *bool                   `pulumi:"setSubjectKeyId"`
	Subject         *tls.CertRequestSubject `pulumi:"subject"`
	// List of URIs for which a certificate is being requested.
	Uris []string `pulumi:"uris"`
	// Number of hours, after initial issuing, that the certificate will remain valid.
	ValidityPeriodHours int `pulumi:"validityPeriodHours"`
}
