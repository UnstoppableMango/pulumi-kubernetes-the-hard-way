// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way/internal"
)

var _ = internal.GetEnvOrDefault

type Cluster struct {
	// TODO
	CertificateAuthorityData string `pulumi:"certificateAuthorityData"`
	// TODO
	Server string `pulumi:"server"`
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// TODO
func (o ClusterOutput) CertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.CertificateAuthorityData }).(pulumi.StringOutput)
}

// TODO
func (o ClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Cluster {
		return vs[0].([]Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

// The CNI plugins IPAM
type CniBridgeIpam struct {
	// IPAM ranges.
	Ranges []map[string]string `pulumi:"ranges"`
	// IPAM routes.
	Routes []map[string]string `pulumi:"routes"`
	// CNI bridge IPAM type
	Type *string `pulumi:"type"`
}

// CniBridgeIpamInput is an input type that accepts CniBridgeIpamArgs and CniBridgeIpamOutput values.
// You can construct a concrete instance of `CniBridgeIpamInput` via:
//
//	CniBridgeIpamArgs{...}
type CniBridgeIpamInput interface {
	pulumi.Input

	ToCniBridgeIpamOutput() CniBridgeIpamOutput
	ToCniBridgeIpamOutputWithContext(context.Context) CniBridgeIpamOutput
}

// The CNI plugins IPAM
type CniBridgeIpamArgs struct {
	// IPAM ranges.
	Ranges pulumi.StringMapArrayInput `pulumi:"ranges"`
	// IPAM routes.
	Routes pulumi.StringMapArrayInput `pulumi:"routes"`
	// CNI bridge IPAM type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CniBridgeIpamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBridgeIpam)(nil)).Elem()
}

func (i CniBridgeIpamArgs) ToCniBridgeIpamOutput() CniBridgeIpamOutput {
	return i.ToCniBridgeIpamOutputWithContext(context.Background())
}

func (i CniBridgeIpamArgs) ToCniBridgeIpamOutputWithContext(ctx context.Context) CniBridgeIpamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBridgeIpamOutput)
}

func (i CniBridgeIpamArgs) ToCniBridgeIpamPtrOutput() CniBridgeIpamPtrOutput {
	return i.ToCniBridgeIpamPtrOutputWithContext(context.Background())
}

func (i CniBridgeIpamArgs) ToCniBridgeIpamPtrOutputWithContext(ctx context.Context) CniBridgeIpamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBridgeIpamOutput).ToCniBridgeIpamPtrOutputWithContext(ctx)
}

// CniBridgeIpamPtrInput is an input type that accepts CniBridgeIpamArgs, CniBridgeIpamPtr and CniBridgeIpamPtrOutput values.
// You can construct a concrete instance of `CniBridgeIpamPtrInput` via:
//
//	        CniBridgeIpamArgs{...}
//
//	or:
//
//	        nil
type CniBridgeIpamPtrInput interface {
	pulumi.Input

	ToCniBridgeIpamPtrOutput() CniBridgeIpamPtrOutput
	ToCniBridgeIpamPtrOutputWithContext(context.Context) CniBridgeIpamPtrOutput
}

type cniBridgeIpamPtrType CniBridgeIpamArgs

func CniBridgeIpamPtr(v *CniBridgeIpamArgs) CniBridgeIpamPtrInput {
	return (*cniBridgeIpamPtrType)(v)
}

func (*cniBridgeIpamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CniBridgeIpam)(nil)).Elem()
}

func (i *cniBridgeIpamPtrType) ToCniBridgeIpamPtrOutput() CniBridgeIpamPtrOutput {
	return i.ToCniBridgeIpamPtrOutputWithContext(context.Background())
}

func (i *cniBridgeIpamPtrType) ToCniBridgeIpamPtrOutputWithContext(ctx context.Context) CniBridgeIpamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBridgeIpamPtrOutput)
}

// The CNI plugins IPAM
type CniBridgeIpamOutput struct{ *pulumi.OutputState }

func (CniBridgeIpamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBridgeIpam)(nil)).Elem()
}

func (o CniBridgeIpamOutput) ToCniBridgeIpamOutput() CniBridgeIpamOutput {
	return o
}

func (o CniBridgeIpamOutput) ToCniBridgeIpamOutputWithContext(ctx context.Context) CniBridgeIpamOutput {
	return o
}

func (o CniBridgeIpamOutput) ToCniBridgeIpamPtrOutput() CniBridgeIpamPtrOutput {
	return o.ToCniBridgeIpamPtrOutputWithContext(context.Background())
}

func (o CniBridgeIpamOutput) ToCniBridgeIpamPtrOutputWithContext(ctx context.Context) CniBridgeIpamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CniBridgeIpam) *CniBridgeIpam {
		return &v
	}).(CniBridgeIpamPtrOutput)
}

// IPAM ranges.
func (o CniBridgeIpamOutput) Ranges() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v CniBridgeIpam) []map[string]string { return v.Ranges }).(pulumi.StringMapArrayOutput)
}

// IPAM routes.
func (o CniBridgeIpamOutput) Routes() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v CniBridgeIpam) []map[string]string { return v.Routes }).(pulumi.StringMapArrayOutput)
}

// CNI bridge IPAM type
func (o CniBridgeIpamOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CniBridgeIpam) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CniBridgeIpamPtrOutput struct{ *pulumi.OutputState }

func (CniBridgeIpamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CniBridgeIpam)(nil)).Elem()
}

func (o CniBridgeIpamPtrOutput) ToCniBridgeIpamPtrOutput() CniBridgeIpamPtrOutput {
	return o
}

func (o CniBridgeIpamPtrOutput) ToCniBridgeIpamPtrOutputWithContext(ctx context.Context) CniBridgeIpamPtrOutput {
	return o
}

func (o CniBridgeIpamPtrOutput) Elem() CniBridgeIpamOutput {
	return o.ApplyT(func(v *CniBridgeIpam) CniBridgeIpam {
		if v != nil {
			return *v
		}
		var ret CniBridgeIpam
		return ret
	}).(CniBridgeIpamOutput)
}

// IPAM ranges.
func (o CniBridgeIpamPtrOutput) Ranges() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *CniBridgeIpam) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(pulumi.StringMapArrayOutput)
}

// IPAM routes.
func (o CniBridgeIpamPtrOutput) Routes() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *CniBridgeIpam) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringMapArrayOutput)
}

// CNI bridge IPAM type
func (o CniBridgeIpamPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CniBridgeIpam) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// TODO
type CniBridgePluginConfigurationType struct {
	// Bridge name.
	Bridge string `pulumi:"bridge"`
	// The version of the bridge plugin.
	CniVersion *string `pulumi:"cniVersion"`
	// IP masq.
	IpMasq bool `pulumi:"ipMasq"`
	// IPAM.
	Ipam CniBridgeIpam `pulumi:"ipam"`
	// Is gateway.
	IsGateway bool `pulumi:"isGateway"`
	// Plugin name.
	Name string `pulumi:"name"`
	// The subnet to use.
	Subnet string `pulumi:"subnet"`
	// Plugin type.
	Type string `pulumi:"type"`
}

// TODO
type CniBridgePluginConfigurationTypeOutput struct{ *pulumi.OutputState }

func (CniBridgePluginConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBridgePluginConfigurationType)(nil)).Elem()
}

func (o CniBridgePluginConfigurationTypeOutput) ToCniBridgePluginConfigurationTypeOutput() CniBridgePluginConfigurationTypeOutput {
	return o
}

func (o CniBridgePluginConfigurationTypeOutput) ToCniBridgePluginConfigurationTypeOutputWithContext(ctx context.Context) CniBridgePluginConfigurationTypeOutput {
	return o
}

// Bridge name.
func (o CniBridgePluginConfigurationTypeOutput) Bridge() pulumi.StringOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) string { return v.Bridge }).(pulumi.StringOutput)
}

// The version of the bridge plugin.
func (o CniBridgePluginConfigurationTypeOutput) CniVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) *string { return v.CniVersion }).(pulumi.StringPtrOutput)
}

// IP masq.
func (o CniBridgePluginConfigurationTypeOutput) IpMasq() pulumi.BoolOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) bool { return v.IpMasq }).(pulumi.BoolOutput)
}

// IPAM.
func (o CniBridgePluginConfigurationTypeOutput) Ipam() CniBridgeIpamOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) CniBridgeIpam { return v.Ipam }).(CniBridgeIpamOutput)
}

// Is gateway.
func (o CniBridgePluginConfigurationTypeOutput) IsGateway() pulumi.BoolOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) bool { return v.IsGateway }).(pulumi.BoolOutput)
}

// Plugin name.
func (o CniBridgePluginConfigurationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) string { return v.Name }).(pulumi.StringOutput)
}

// The subnet to use.
func (o CniBridgePluginConfigurationTypeOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) string { return v.Subnet }).(pulumi.StringOutput)
}

// Plugin type.
func (o CniBridgePluginConfigurationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CniBridgePluginConfigurationType) string { return v.Type }).(pulumi.StringOutput)
}

// CNI loopback plugin configuration.
type CniLoopbackPluginConfigurationType struct {
	// The plugin CNI version.
	CniVersion string `pulumi:"cniVersion"`
	// The name of the plugin.
	Name string `pulumi:"name"`
	// The type of the plugin.
	Type string `pulumi:"type"`
}

// CNI loopback plugin configuration.
type CniLoopbackPluginConfigurationTypeOutput struct{ *pulumi.OutputState }

func (CniLoopbackPluginConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniLoopbackPluginConfigurationType)(nil)).Elem()
}

func (o CniLoopbackPluginConfigurationTypeOutput) ToCniLoopbackPluginConfigurationTypeOutput() CniLoopbackPluginConfigurationTypeOutput {
	return o
}

func (o CniLoopbackPluginConfigurationTypeOutput) ToCniLoopbackPluginConfigurationTypeOutputWithContext(ctx context.Context) CniLoopbackPluginConfigurationTypeOutput {
	return o
}

// The plugin CNI version.
func (o CniLoopbackPluginConfigurationTypeOutput) CniVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CniLoopbackPluginConfigurationType) string { return v.CniVersion }).(pulumi.StringOutput)
}

// The name of the plugin.
func (o CniLoopbackPluginConfigurationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CniLoopbackPluginConfigurationType) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the plugin.
func (o CniLoopbackPluginConfigurationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CniLoopbackPluginConfigurationType) string { return v.Type }).(pulumi.StringOutput)
}

// The containerd configuration.
type ContainerdConfigurationType struct {
	// The cri configuration.
	Cri *ContainerdCriPluginConfiguration `pulumi:"cri"`
}

// The containerd configuration.
type ContainerdConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ContainerdConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdConfigurationType)(nil)).Elem()
}

func (o ContainerdConfigurationTypeOutput) ToContainerdConfigurationTypeOutput() ContainerdConfigurationTypeOutput {
	return o
}

func (o ContainerdConfigurationTypeOutput) ToContainerdConfigurationTypeOutputWithContext(ctx context.Context) ContainerdConfigurationTypeOutput {
	return o
}

// The cri configuration.
func (o ContainerdConfigurationTypeOutput) Cri() ContainerdCriPluginConfigurationPtrOutput {
	return o.ApplyT(func(v ContainerdConfigurationType) *ContainerdCriPluginConfiguration { return v.Cri }).(ContainerdCriPluginConfigurationPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfiguration struct {
	// cni configuration.
	Cni ContainerdCriPluginConfigurationCni `pulumi:"cni"`
	// containerd configuration.
	Containerd ContainerdCriPluginConfigurationContainerd `pulumi:"containerd"`
}

// ContainerdCriPluginConfigurationInput is an input type that accepts ContainerdCriPluginConfigurationArgs and ContainerdCriPluginConfigurationOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationInput` via:
//
//	ContainerdCriPluginConfigurationArgs{...}
type ContainerdCriPluginConfigurationInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationOutput() ContainerdCriPluginConfigurationOutput
	ToContainerdCriPluginConfigurationOutputWithContext(context.Context) ContainerdCriPluginConfigurationOutput
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationArgs struct {
	// cni configuration.
	Cni ContainerdCriPluginConfigurationCniArgs `pulumi:"cni"`
	// containerd configuration.
	Containerd ContainerdCriPluginConfigurationContainerdArgs `pulumi:"containerd"`
}

func (ContainerdCriPluginConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfiguration)(nil)).Elem()
}

func (i ContainerdCriPluginConfigurationArgs) ToContainerdCriPluginConfigurationOutput() ContainerdCriPluginConfigurationOutput {
	return i.ToContainerdCriPluginConfigurationOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationArgs) ToContainerdCriPluginConfigurationOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationOutput)
}

func (i ContainerdCriPluginConfigurationArgs) ToContainerdCriPluginConfigurationPtrOutput() ContainerdCriPluginConfigurationPtrOutput {
	return i.ToContainerdCriPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationArgs) ToContainerdCriPluginConfigurationPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationOutput).ToContainerdCriPluginConfigurationPtrOutputWithContext(ctx)
}

// ContainerdCriPluginConfigurationPtrInput is an input type that accepts ContainerdCriPluginConfigurationArgs, ContainerdCriPluginConfigurationPtr and ContainerdCriPluginConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationPtrInput` via:
//
//	        ContainerdCriPluginConfigurationArgs{...}
//
//	or:
//
//	        nil
type ContainerdCriPluginConfigurationPtrInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationPtrOutput() ContainerdCriPluginConfigurationPtrOutput
	ToContainerdCriPluginConfigurationPtrOutputWithContext(context.Context) ContainerdCriPluginConfigurationPtrOutput
}

type containerdCriPluginConfigurationPtrType ContainerdCriPluginConfigurationArgs

func ContainerdCriPluginConfigurationPtr(v *ContainerdCriPluginConfigurationArgs) ContainerdCriPluginConfigurationPtrInput {
	return (*containerdCriPluginConfigurationPtrType)(v)
}

func (*containerdCriPluginConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfiguration)(nil)).Elem()
}

func (i *containerdCriPluginConfigurationPtrType) ToContainerdCriPluginConfigurationPtrOutput() ContainerdCriPluginConfigurationPtrOutput {
	return i.ToContainerdCriPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerdCriPluginConfigurationPtrType) ToContainerdCriPluginConfigurationPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfiguration)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationOutput) ToContainerdCriPluginConfigurationOutput() ContainerdCriPluginConfigurationOutput {
	return o
}

func (o ContainerdCriPluginConfigurationOutput) ToContainerdCriPluginConfigurationOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationOutput {
	return o
}

func (o ContainerdCriPluginConfigurationOutput) ToContainerdCriPluginConfigurationPtrOutput() ContainerdCriPluginConfigurationPtrOutput {
	return o.ToContainerdCriPluginConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerdCriPluginConfigurationOutput) ToContainerdCriPluginConfigurationPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerdCriPluginConfiguration) *ContainerdCriPluginConfiguration {
		return &v
	}).(ContainerdCriPluginConfigurationPtrOutput)
}

// cni configuration.
func (o ContainerdCriPluginConfigurationOutput) Cni() ContainerdCriPluginConfigurationCniOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfiguration) ContainerdCriPluginConfigurationCni { return v.Cni }).(ContainerdCriPluginConfigurationCniOutput)
}

// containerd configuration.
func (o ContainerdCriPluginConfigurationOutput) Containerd() ContainerdCriPluginConfigurationContainerdOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfiguration) ContainerdCriPluginConfigurationContainerd {
		return v.Containerd
	}).(ContainerdCriPluginConfigurationContainerdOutput)
}

type ContainerdCriPluginConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfiguration)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationPtrOutput) ToContainerdCriPluginConfigurationPtrOutput() ContainerdCriPluginConfigurationPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationPtrOutput) ToContainerdCriPluginConfigurationPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationPtrOutput) Elem() ContainerdCriPluginConfigurationOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfiguration) ContainerdCriPluginConfiguration {
		if v != nil {
			return *v
		}
		var ret ContainerdCriPluginConfiguration
		return ret
	}).(ContainerdCriPluginConfigurationOutput)
}

// cni configuration.
func (o ContainerdCriPluginConfigurationPtrOutput) Cni() ContainerdCriPluginConfigurationCniPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfiguration) *ContainerdCriPluginConfigurationCni {
		if v == nil {
			return nil
		}
		return &v.Cni
	}).(ContainerdCriPluginConfigurationCniPtrOutput)
}

// containerd configuration.
func (o ContainerdCriPluginConfigurationPtrOutput) Containerd() ContainerdCriPluginConfigurationContainerdPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfiguration) *ContainerdCriPluginConfigurationContainerd {
		if v == nil {
			return nil
		}
		return &v.Containerd
	}).(ContainerdCriPluginConfigurationContainerdPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationCni struct {
	// bin_dir
	BinDir *string `pulumi:"binDir"`
	// conf_dir
	ConfDir *string `pulumi:"confDir"`
}

// ContainerdCriPluginConfigurationCniInput is an input type that accepts ContainerdCriPluginConfigurationCniArgs and ContainerdCriPluginConfigurationCniOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationCniInput` via:
//
//	ContainerdCriPluginConfigurationCniArgs{...}
type ContainerdCriPluginConfigurationCniInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationCniOutput() ContainerdCriPluginConfigurationCniOutput
	ToContainerdCriPluginConfigurationCniOutputWithContext(context.Context) ContainerdCriPluginConfigurationCniOutput
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationCniArgs struct {
	// bin_dir
	BinDir pulumi.StringPtrInput `pulumi:"binDir"`
	// conf_dir
	ConfDir pulumi.StringPtrInput `pulumi:"confDir"`
}

func (ContainerdCriPluginConfigurationCniArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationCni)(nil)).Elem()
}

func (i ContainerdCriPluginConfigurationCniArgs) ToContainerdCriPluginConfigurationCniOutput() ContainerdCriPluginConfigurationCniOutput {
	return i.ToContainerdCriPluginConfigurationCniOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationCniArgs) ToContainerdCriPluginConfigurationCniOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationCniOutput)
}

func (i ContainerdCriPluginConfigurationCniArgs) ToContainerdCriPluginConfigurationCniPtrOutput() ContainerdCriPluginConfigurationCniPtrOutput {
	return i.ToContainerdCriPluginConfigurationCniPtrOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationCniArgs) ToContainerdCriPluginConfigurationCniPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationCniOutput).ToContainerdCriPluginConfigurationCniPtrOutputWithContext(ctx)
}

// ContainerdCriPluginConfigurationCniPtrInput is an input type that accepts ContainerdCriPluginConfigurationCniArgs, ContainerdCriPluginConfigurationCniPtr and ContainerdCriPluginConfigurationCniPtrOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationCniPtrInput` via:
//
//	        ContainerdCriPluginConfigurationCniArgs{...}
//
//	or:
//
//	        nil
type ContainerdCriPluginConfigurationCniPtrInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationCniPtrOutput() ContainerdCriPluginConfigurationCniPtrOutput
	ToContainerdCriPluginConfigurationCniPtrOutputWithContext(context.Context) ContainerdCriPluginConfigurationCniPtrOutput
}

type containerdCriPluginConfigurationCniPtrType ContainerdCriPluginConfigurationCniArgs

func ContainerdCriPluginConfigurationCniPtr(v *ContainerdCriPluginConfigurationCniArgs) ContainerdCriPluginConfigurationCniPtrInput {
	return (*containerdCriPluginConfigurationCniPtrType)(v)
}

func (*containerdCriPluginConfigurationCniPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationCni)(nil)).Elem()
}

func (i *containerdCriPluginConfigurationCniPtrType) ToContainerdCriPluginConfigurationCniPtrOutput() ContainerdCriPluginConfigurationCniPtrOutput {
	return i.ToContainerdCriPluginConfigurationCniPtrOutputWithContext(context.Background())
}

func (i *containerdCriPluginConfigurationCniPtrType) ToContainerdCriPluginConfigurationCniPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationCniPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationCniOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationCniOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationCni)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationCniOutput) ToContainerdCriPluginConfigurationCniOutput() ContainerdCriPluginConfigurationCniOutput {
	return o
}

func (o ContainerdCriPluginConfigurationCniOutput) ToContainerdCriPluginConfigurationCniOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniOutput {
	return o
}

func (o ContainerdCriPluginConfigurationCniOutput) ToContainerdCriPluginConfigurationCniPtrOutput() ContainerdCriPluginConfigurationCniPtrOutput {
	return o.ToContainerdCriPluginConfigurationCniPtrOutputWithContext(context.Background())
}

func (o ContainerdCriPluginConfigurationCniOutput) ToContainerdCriPluginConfigurationCniPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerdCriPluginConfigurationCni) *ContainerdCriPluginConfigurationCni {
		return &v
	}).(ContainerdCriPluginConfigurationCniPtrOutput)
}

// bin_dir
func (o ContainerdCriPluginConfigurationCniOutput) BinDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationCni) *string { return v.BinDir }).(pulumi.StringPtrOutput)
}

// conf_dir
func (o ContainerdCriPluginConfigurationCniOutput) ConfDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationCni) *string { return v.ConfDir }).(pulumi.StringPtrOutput)
}

type ContainerdCriPluginConfigurationCniPtrOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationCniPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationCni)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationCniPtrOutput) ToContainerdCriPluginConfigurationCniPtrOutput() ContainerdCriPluginConfigurationCniPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationCniPtrOutput) ToContainerdCriPluginConfigurationCniPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationCniPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationCniPtrOutput) Elem() ContainerdCriPluginConfigurationCniOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationCni) ContainerdCriPluginConfigurationCni {
		if v != nil {
			return *v
		}
		var ret ContainerdCriPluginConfigurationCni
		return ret
	}).(ContainerdCriPluginConfigurationCniOutput)
}

// bin_dir
func (o ContainerdCriPluginConfigurationCniPtrOutput) BinDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationCni) *string {
		if v == nil {
			return nil
		}
		return v.BinDir
	}).(pulumi.StringPtrOutput)
}

// conf_dir
func (o ContainerdCriPluginConfigurationCniPtrOutput) ConfDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationCni) *string {
		if v == nil {
			return nil
		}
		return v.ConfDir
	}).(pulumi.StringPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationContainerd struct {
	// default_runtime_name
	DefaultRuntimeName *string `pulumi:"defaultRuntimeName"`
	// The containerd runtime configuration.
	Runtimes *ContainerdCriPluginConfigurationContainerdRunc `pulumi:"runtimes"`
	// snapshotter
	Snapshotter *string `pulumi:"snapshotter"`
}

// ContainerdCriPluginConfigurationContainerdInput is an input type that accepts ContainerdCriPluginConfigurationContainerdArgs and ContainerdCriPluginConfigurationContainerdOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdInput` via:
//
//	ContainerdCriPluginConfigurationContainerdArgs{...}
type ContainerdCriPluginConfigurationContainerdInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdOutput() ContainerdCriPluginConfigurationContainerdOutput
	ToContainerdCriPluginConfigurationContainerdOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdOutput
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationContainerdArgs struct {
	// default_runtime_name
	DefaultRuntimeName pulumi.StringPtrInput `pulumi:"defaultRuntimeName"`
	// The containerd runtime configuration.
	Runtimes *ContainerdCriPluginConfigurationContainerdRuncArgs `pulumi:"runtimes"`
	// snapshotter
	Snapshotter pulumi.StringPtrInput `pulumi:"snapshotter"`
}

func (ContainerdCriPluginConfigurationContainerdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerd)(nil)).Elem()
}

func (i ContainerdCriPluginConfigurationContainerdArgs) ToContainerdCriPluginConfigurationContainerdOutput() ContainerdCriPluginConfigurationContainerdOutput {
	return i.ToContainerdCriPluginConfigurationContainerdOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdArgs) ToContainerdCriPluginConfigurationContainerdOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdOutput)
}

func (i ContainerdCriPluginConfigurationContainerdArgs) ToContainerdCriPluginConfigurationContainerdPtrOutput() ContainerdCriPluginConfigurationContainerdPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdArgs) ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdOutput).ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(ctx)
}

// ContainerdCriPluginConfigurationContainerdPtrInput is an input type that accepts ContainerdCriPluginConfigurationContainerdArgs, ContainerdCriPluginConfigurationContainerdPtr and ContainerdCriPluginConfigurationContainerdPtrOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdPtrInput` via:
//
//	        ContainerdCriPluginConfigurationContainerdArgs{...}
//
//	or:
//
//	        nil
type ContainerdCriPluginConfigurationContainerdPtrInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdPtrOutput() ContainerdCriPluginConfigurationContainerdPtrOutput
	ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdPtrOutput
}

type containerdCriPluginConfigurationContainerdPtrType ContainerdCriPluginConfigurationContainerdArgs

func ContainerdCriPluginConfigurationContainerdPtr(v *ContainerdCriPluginConfigurationContainerdArgs) ContainerdCriPluginConfigurationContainerdPtrInput {
	return (*containerdCriPluginConfigurationContainerdPtrType)(v)
}

func (*containerdCriPluginConfigurationContainerdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerd)(nil)).Elem()
}

func (i *containerdCriPluginConfigurationContainerdPtrType) ToContainerdCriPluginConfigurationContainerdPtrOutput() ContainerdCriPluginConfigurationContainerdPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(context.Background())
}

func (i *containerdCriPluginConfigurationContainerdPtrType) ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdPtrOutput)
}

// containerd cri plugin configuration.
type ContainerdCriPluginConfigurationContainerdOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerd)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdOutput) ToContainerdCriPluginConfigurationContainerdOutput() ContainerdCriPluginConfigurationContainerdOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdOutput) ToContainerdCriPluginConfigurationContainerdOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdOutput) ToContainerdCriPluginConfigurationContainerdPtrOutput() ContainerdCriPluginConfigurationContainerdPtrOutput {
	return o.ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(context.Background())
}

func (o ContainerdCriPluginConfigurationContainerdOutput) ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerdCriPluginConfigurationContainerd) *ContainerdCriPluginConfigurationContainerd {
		return &v
	}).(ContainerdCriPluginConfigurationContainerdPtrOutput)
}

// default_runtime_name
func (o ContainerdCriPluginConfigurationContainerdOutput) DefaultRuntimeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerd) *string { return v.DefaultRuntimeName }).(pulumi.StringPtrOutput)
}

// The containerd runtime configuration.
func (o ContainerdCriPluginConfigurationContainerdOutput) Runtimes() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerd) *ContainerdCriPluginConfigurationContainerdRunc {
		return v.Runtimes
	}).(ContainerdCriPluginConfigurationContainerdRuncPtrOutput)
}

// snapshotter
func (o ContainerdCriPluginConfigurationContainerdOutput) Snapshotter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerd) *string { return v.Snapshotter }).(pulumi.StringPtrOutput)
}

type ContainerdCriPluginConfigurationContainerdPtrOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerd)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdPtrOutput) ToContainerdCriPluginConfigurationContainerdPtrOutput() ContainerdCriPluginConfigurationContainerdPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdPtrOutput) ToContainerdCriPluginConfigurationContainerdPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdPtrOutput) Elem() ContainerdCriPluginConfigurationContainerdOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerd) ContainerdCriPluginConfigurationContainerd {
		if v != nil {
			return *v
		}
		var ret ContainerdCriPluginConfigurationContainerd
		return ret
	}).(ContainerdCriPluginConfigurationContainerdOutput)
}

// default_runtime_name
func (o ContainerdCriPluginConfigurationContainerdPtrOutput) DefaultRuntimeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerd) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRuntimeName
	}).(pulumi.StringPtrOutput)
}

// The containerd runtime configuration.
func (o ContainerdCriPluginConfigurationContainerdPtrOutput) Runtimes() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerd) *ContainerdCriPluginConfigurationContainerdRunc {
		if v == nil {
			return nil
		}
		return v.Runtimes
	}).(ContainerdCriPluginConfigurationContainerdRuncPtrOutput)
}

// snapshotter
func (o ContainerdCriPluginConfigurationContainerdPtrOutput) Snapshotter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerd) *string {
		if v == nil {
			return nil
		}
		return v.Snapshotter
	}).(pulumi.StringPtrOutput)
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRunc struct {
	// runc options.
	Options ContainerdCriPluginConfigurationContainerdRuncOptions `pulumi:"options"`
	// runtime_type
	RuntimeType *string `pulumi:"runtimeType"`
}

// ContainerdCriPluginConfigurationContainerdRuncInput is an input type that accepts ContainerdCriPluginConfigurationContainerdRuncArgs and ContainerdCriPluginConfigurationContainerdRuncOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdRuncInput` via:
//
//	ContainerdCriPluginConfigurationContainerdRuncArgs{...}
type ContainerdCriPluginConfigurationContainerdRuncInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdRuncOutput() ContainerdCriPluginConfigurationContainerdRuncOutput
	ToContainerdCriPluginConfigurationContainerdRuncOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdRuncOutput
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRuncArgs struct {
	// runc options.
	Options ContainerdCriPluginConfigurationContainerdRuncOptionsArgs `pulumi:"options"`
	// runtime_type
	RuntimeType pulumi.StringPtrInput `pulumi:"runtimeType"`
}

func (ContainerdCriPluginConfigurationContainerdRuncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRunc)(nil)).Elem()
}

func (i ContainerdCriPluginConfigurationContainerdRuncArgs) ToContainerdCriPluginConfigurationContainerdRuncOutput() ContainerdCriPluginConfigurationContainerdRuncOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdRuncArgs) ToContainerdCriPluginConfigurationContainerdRuncOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncOutput)
}

func (i ContainerdCriPluginConfigurationContainerdRuncArgs) ToContainerdCriPluginConfigurationContainerdRuncPtrOutput() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdRuncArgs) ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncOutput).ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(ctx)
}

// ContainerdCriPluginConfigurationContainerdRuncPtrInput is an input type that accepts ContainerdCriPluginConfigurationContainerdRuncArgs, ContainerdCriPluginConfigurationContainerdRuncPtr and ContainerdCriPluginConfigurationContainerdRuncPtrOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdRuncPtrInput` via:
//
//	        ContainerdCriPluginConfigurationContainerdRuncArgs{...}
//
//	or:
//
//	        nil
type ContainerdCriPluginConfigurationContainerdRuncPtrInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdRuncPtrOutput() ContainerdCriPluginConfigurationContainerdRuncPtrOutput
	ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdRuncPtrOutput
}

type containerdCriPluginConfigurationContainerdRuncPtrType ContainerdCriPluginConfigurationContainerdRuncArgs

func ContainerdCriPluginConfigurationContainerdRuncPtr(v *ContainerdCriPluginConfigurationContainerdRuncArgs) ContainerdCriPluginConfigurationContainerdRuncPtrInput {
	return (*containerdCriPluginConfigurationContainerdRuncPtrType)(v)
}

func (*containerdCriPluginConfigurationContainerdRuncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerdRunc)(nil)).Elem()
}

func (i *containerdCriPluginConfigurationContainerdRuncPtrType) ToContainerdCriPluginConfigurationContainerdRuncPtrOutput() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(context.Background())
}

func (i *containerdCriPluginConfigurationContainerdRuncPtrType) ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncPtrOutput)
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRuncOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdRuncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRunc)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdRuncOutput) ToContainerdCriPluginConfigurationContainerdRuncOutput() ContainerdCriPluginConfigurationContainerdRuncOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOutput) ToContainerdCriPluginConfigurationContainerdRuncOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOutput) ToContainerdCriPluginConfigurationContainerdRuncPtrOutput() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o.ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(context.Background())
}

func (o ContainerdCriPluginConfigurationContainerdRuncOutput) ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerdCriPluginConfigurationContainerdRunc) *ContainerdCriPluginConfigurationContainerdRunc {
		return &v
	}).(ContainerdCriPluginConfigurationContainerdRuncPtrOutput)
}

// runc options.
func (o ContainerdCriPluginConfigurationContainerdRuncOutput) Options() ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerdRunc) ContainerdCriPluginConfigurationContainerdRuncOptions {
		return v.Options
	}).(ContainerdCriPluginConfigurationContainerdRuncOptionsOutput)
}

// runtime_type
func (o ContainerdCriPluginConfigurationContainerdRuncOutput) RuntimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerdRunc) *string { return v.RuntimeType }).(pulumi.StringPtrOutput)
}

type ContainerdCriPluginConfigurationContainerdRuncPtrOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdRuncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerdRunc)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdRuncPtrOutput) ToContainerdCriPluginConfigurationContainerdRuncPtrOutput() ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncPtrOutput) ToContainerdCriPluginConfigurationContainerdRuncPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncPtrOutput) Elem() ContainerdCriPluginConfigurationContainerdRuncOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerdRunc) ContainerdCriPluginConfigurationContainerdRunc {
		if v != nil {
			return *v
		}
		var ret ContainerdCriPluginConfigurationContainerdRunc
		return ret
	}).(ContainerdCriPluginConfigurationContainerdRuncOutput)
}

// runc options.
func (o ContainerdCriPluginConfigurationContainerdRuncPtrOutput) Options() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerdRunc) *ContainerdCriPluginConfigurationContainerdRuncOptions {
		if v == nil {
			return nil
		}
		return &v.Options
	}).(ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput)
}

// runtime_type
func (o ContainerdCriPluginConfigurationContainerdRuncPtrOutput) RuntimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerdRunc) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeType
	}).(pulumi.StringPtrOutput)
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRuncOptions struct {
	// SystemdCgroup
	SystemdCgroup *bool `pulumi:"systemdCgroup"`
}

// ContainerdCriPluginConfigurationContainerdRuncOptionsInput is an input type that accepts ContainerdCriPluginConfigurationContainerdRuncOptionsArgs and ContainerdCriPluginConfigurationContainerdRuncOptionsOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdRuncOptionsInput` via:
//
//	ContainerdCriPluginConfigurationContainerdRuncOptionsArgs{...}
type ContainerdCriPluginConfigurationContainerdRuncOptionsInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdRuncOptionsOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsOutput
	ToContainerdCriPluginConfigurationContainerdRuncOptionsOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsOutput
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRuncOptionsArgs struct {
	// SystemdCgroup
	SystemdCgroup pulumi.BoolPtrInput `pulumi:"systemdCgroup"`
}

func (ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncOptions)(nil)).Elem()
}

func (i ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ToContainerdCriPluginConfigurationContainerdRuncOptionsOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncOptionsOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ToContainerdCriPluginConfigurationContainerdRuncOptionsOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncOptionsOutput)
}

func (i ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(context.Background())
}

func (i ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncOptionsOutput).ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(ctx)
}

// ContainerdCriPluginConfigurationContainerdRuncOptionsPtrInput is an input type that accepts ContainerdCriPluginConfigurationContainerdRuncOptionsArgs, ContainerdCriPluginConfigurationContainerdRuncOptionsPtr and ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput values.
// You can construct a concrete instance of `ContainerdCriPluginConfigurationContainerdRuncOptionsPtrInput` via:
//
//	        ContainerdCriPluginConfigurationContainerdRuncOptionsArgs{...}
//
//	or:
//
//	        nil
type ContainerdCriPluginConfigurationContainerdRuncOptionsPtrInput interface {
	pulumi.Input

	ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput
	ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput
}

type containerdCriPluginConfigurationContainerdRuncOptionsPtrType ContainerdCriPluginConfigurationContainerdRuncOptionsArgs

func ContainerdCriPluginConfigurationContainerdRuncOptionsPtr(v *ContainerdCriPluginConfigurationContainerdRuncOptionsArgs) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrInput {
	return (*containerdCriPluginConfigurationContainerdRuncOptionsPtrType)(v)
}

func (*containerdCriPluginConfigurationContainerdRuncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerdRuncOptions)(nil)).Elem()
}

func (i *containerdCriPluginConfigurationContainerdRuncOptionsPtrType) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return i.ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(context.Background())
}

func (i *containerdCriPluginConfigurationContainerdRuncOptionsPtrType) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput)
}

// containerd cri runc plugin configuration.
type ContainerdCriPluginConfigurationContainerdRuncOptionsOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncOptions)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return o.ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(context.Background())
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerdCriPluginConfigurationContainerdRuncOptions) *ContainerdCriPluginConfigurationContainerdRuncOptions {
		return &v
	}).(ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput)
}

// SystemdCgroup
func (o ContainerdCriPluginConfigurationContainerdRuncOptionsOutput) SystemdCgroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerdCriPluginConfigurationContainerdRuncOptions) *bool { return v.SystemdCgroup }).(pulumi.BoolPtrOutput)
}

type ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput struct{ *pulumi.OutputState }

func (ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerdCriPluginConfigurationContainerdRuncOptions)(nil)).Elem()
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput() ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput) ToContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutputWithContext(ctx context.Context) ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput {
	return o
}

func (o ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput) Elem() ContainerdCriPluginConfigurationContainerdRuncOptionsOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerdRuncOptions) ContainerdCriPluginConfigurationContainerdRuncOptions {
		if v != nil {
			return *v
		}
		var ret ContainerdCriPluginConfigurationContainerdRuncOptions
		return ret
	}).(ContainerdCriPluginConfigurationContainerdRuncOptionsOutput)
}

// SystemdCgroup
func (o ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput) SystemdCgroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerdCriPluginConfigurationContainerdRuncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SystemdCgroup
	}).(pulumi.BoolPtrOutput)
}

type Context struct {
	// TODO
	Cluster string `pulumi:"cluster"`
	// TODO
	User string `pulumi:"user"`
}

type ContextOutput struct{ *pulumi.OutputState }

func (ContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Context)(nil)).Elem()
}

func (o ContextOutput) ToContextOutput() ContextOutput {
	return o
}

func (o ContextOutput) ToContextOutputWithContext(ctx context.Context) ContextOutput {
	return o
}

// TODO
func (o ContextOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.Cluster }).(pulumi.StringOutput)
}

// TODO
func (o ContextOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.User }).(pulumi.StringOutput)
}

type ContextArrayOutput struct{ *pulumi.OutputState }

func (ContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Context)(nil)).Elem()
}

func (o ContextArrayOutput) ToContextArrayOutput() ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) ToContextArrayOutputWithContext(ctx context.Context) ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) Index(i pulumi.IntInput) ContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Context {
		return vs[0].([]Context)[vs[1].(int)]
	}).(ContextOutput)
}

type KubeProxyConfigurationType struct {
	ApiVersion       *string                                 `pulumi:"apiVersion"`
	ClientConnection *KubeProxyConfigurationClientConnection `pulumi:"clientConnection"`
	// TODO
	ClusterCIDR string  `pulumi:"clusterCIDR"`
	Kind        *string `pulumi:"kind"`
	// TODO
	Mode *string `pulumi:"mode"`
}

type KubeProxyConfigurationTypeOutput struct{ *pulumi.OutputState }

func (KubeProxyConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeProxyConfigurationType)(nil)).Elem()
}

func (o KubeProxyConfigurationTypeOutput) ToKubeProxyConfigurationTypeOutput() KubeProxyConfigurationTypeOutput {
	return o
}

func (o KubeProxyConfigurationTypeOutput) ToKubeProxyConfigurationTypeOutputWithContext(ctx context.Context) KubeProxyConfigurationTypeOutput {
	return o
}

func (o KubeProxyConfigurationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeProxyConfigurationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubeProxyConfigurationTypeOutput) ClientConnection() KubeProxyConfigurationClientConnectionPtrOutput {
	return o.ApplyT(func(v KubeProxyConfigurationType) *KubeProxyConfigurationClientConnection { return v.ClientConnection }).(KubeProxyConfigurationClientConnectionPtrOutput)
}

// TODO
func (o KubeProxyConfigurationTypeOutput) ClusterCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v KubeProxyConfigurationType) string { return v.ClusterCIDR }).(pulumi.StringOutput)
}

func (o KubeProxyConfigurationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeProxyConfigurationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// TODO
func (o KubeProxyConfigurationTypeOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeProxyConfigurationType) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type KubeProxyConfigurationClientConnection struct {
	// Path to the kubeconfig.
	Kubeconfig string `pulumi:"kubeconfig"`
}

type KubeProxyConfigurationClientConnectionOutput struct{ *pulumi.OutputState }

func (KubeProxyConfigurationClientConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeProxyConfigurationClientConnection)(nil)).Elem()
}

func (o KubeProxyConfigurationClientConnectionOutput) ToKubeProxyConfigurationClientConnectionOutput() KubeProxyConfigurationClientConnectionOutput {
	return o
}

func (o KubeProxyConfigurationClientConnectionOutput) ToKubeProxyConfigurationClientConnectionOutputWithContext(ctx context.Context) KubeProxyConfigurationClientConnectionOutput {
	return o
}

// Path to the kubeconfig.
func (o KubeProxyConfigurationClientConnectionOutput) Kubeconfig() pulumi.StringOutput {
	return o.ApplyT(func(v KubeProxyConfigurationClientConnection) string { return v.Kubeconfig }).(pulumi.StringOutput)
}

type KubeProxyConfigurationClientConnectionPtrOutput struct{ *pulumi.OutputState }

func (KubeProxyConfigurationClientConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeProxyConfigurationClientConnection)(nil)).Elem()
}

func (o KubeProxyConfigurationClientConnectionPtrOutput) ToKubeProxyConfigurationClientConnectionPtrOutput() KubeProxyConfigurationClientConnectionPtrOutput {
	return o
}

func (o KubeProxyConfigurationClientConnectionPtrOutput) ToKubeProxyConfigurationClientConnectionPtrOutputWithContext(ctx context.Context) KubeProxyConfigurationClientConnectionPtrOutput {
	return o
}

func (o KubeProxyConfigurationClientConnectionPtrOutput) Elem() KubeProxyConfigurationClientConnectionOutput {
	return o.ApplyT(func(v *KubeProxyConfigurationClientConnection) KubeProxyConfigurationClientConnection {
		if v != nil {
			return *v
		}
		var ret KubeProxyConfigurationClientConnection
		return ret
	}).(KubeProxyConfigurationClientConnectionOutput)
}

// Path to the kubeconfig.
func (o KubeProxyConfigurationClientConnectionPtrOutput) Kubeconfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeProxyConfigurationClientConnection) *string {
		if v == nil {
			return nil
		}
		return &v.Kubeconfig
	}).(pulumi.StringPtrOutput)
}

type Kubeconfig struct {
	Clusters []Cluster `pulumi:"clusters"`
	Contexts []Context `pulumi:"contexts"`
	Users    []User    `pulumi:"users"`
}

type KubeconfigOutput struct{ *pulumi.OutputState }

func (KubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubeconfig)(nil)).Elem()
}

func (o KubeconfigOutput) ToKubeconfigOutput() KubeconfigOutput {
	return o
}

func (o KubeconfigOutput) ToKubeconfigOutputWithContext(ctx context.Context) KubeconfigOutput {
	return o
}

func (o KubeconfigOutput) Clusters() ClusterArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []Cluster { return v.Clusters }).(ClusterArrayOutput)
}

func (o KubeconfigOutput) Contexts() ContextArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []Context { return v.Contexts }).(ContextArrayOutput)
}

func (o KubeconfigOutput) Users() UserArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []User { return v.Users }).(UserArrayOutput)
}

type KubeconfigAdminOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigAdminOptionsInput is an input type that accepts KubeconfigAdminOptionsArgs and KubeconfigAdminOptionsOutput values.
// You can construct a concrete instance of `KubeconfigAdminOptionsInput` via:
//
//	KubeconfigAdminOptionsArgs{...}
type KubeconfigAdminOptionsInput interface {
	pulumi.Input

	ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput
	ToKubeconfigAdminOptionsOutputWithContext(context.Context) KubeconfigAdminOptionsOutput
}

type KubeconfigAdminOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigAdminOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return i.ToKubeconfigAdminOptionsOutputWithContext(context.Background())
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigAdminOptionsOutput)
}

type KubeconfigAdminOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigAdminOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return o
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return o
}

// TODO
func (o KubeconfigAdminOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigAdminOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigCluster struct {
	Cluster Cluster `pulumi:"cluster"`
	// TODO
	Name string `pulumi:"name"`
}

type KubeconfigContext struct {
	Context Context `pulumi:"context"`
	// TODO
	Name string `pulumi:"name"`
}

type KubeconfigKubeControllerManagerOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeControllerManagerOptionsInput is an input type that accepts KubeconfigKubeControllerManagerOptionsArgs and KubeconfigKubeControllerManagerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeControllerManagerOptionsInput` via:
//
//	KubeconfigKubeControllerManagerOptionsArgs{...}
type KubeconfigKubeControllerManagerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput
	ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Context) KubeconfigKubeControllerManagerOptionsOutput
}

type KubeconfigKubeControllerManagerOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeControllerManagerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return i.ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeControllerManagerOptionsOutput)
}

type KubeconfigKubeControllerManagerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeControllerManagerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeControllerManagerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeControllerManagerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeProxyOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeProxyOptionsInput is an input type that accepts KubeconfigKubeProxyOptionsArgs and KubeconfigKubeProxyOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeProxyOptionsInput` via:
//
//	KubeconfigKubeProxyOptionsArgs{...}
type KubeconfigKubeProxyOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput
	ToKubeconfigKubeProxyOptionsOutputWithContext(context.Context) KubeconfigKubeProxyOptionsOutput
}

type KubeconfigKubeProxyOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeProxyOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return i.ToKubeconfigKubeProxyOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeProxyOptionsOutput)
}

type KubeconfigKubeProxyOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeProxyOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return o
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeProxyOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeProxyOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeSchedulerOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeSchedulerOptionsInput is an input type that accepts KubeconfigKubeSchedulerOptionsArgs and KubeconfigKubeSchedulerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeSchedulerOptionsInput` via:
//
//	KubeconfigKubeSchedulerOptionsArgs{...}
type KubeconfigKubeSchedulerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput
	ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Context) KubeconfigKubeSchedulerOptionsOutput
}

type KubeconfigKubeSchedulerOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeSchedulerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return i.ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeSchedulerOptionsOutput)
}

type KubeconfigKubeSchedulerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeSchedulerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return o
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeSchedulerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeSchedulerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigUser struct {
	// TODO
	Name string `pulumi:"name"`
	User User   `pulumi:"user"`
}

type KubeconfigWorkerOptions struct {
	// TODO
	Name string `pulumi:"name"`
	// TODO
	PublicIp string  `pulumi:"publicIp"`
	Type     *string `pulumi:"type"`
}

// KubeconfigWorkerOptionsInput is an input type that accepts KubeconfigWorkerOptionsArgs and KubeconfigWorkerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigWorkerOptionsInput` via:
//
//	KubeconfigWorkerOptionsArgs{...}
type KubeconfigWorkerOptionsInput interface {
	pulumi.Input

	ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput
	ToKubeconfigWorkerOptionsOutputWithContext(context.Context) KubeconfigWorkerOptionsOutput
}

type KubeconfigWorkerOptionsArgs struct {
	// TODO
	Name pulumi.StringInput `pulumi:"name"`
	// TODO
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	Type     *string            `pulumi:"type"`
}

func (KubeconfigWorkerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return i.ToKubeconfigWorkerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigWorkerOptionsOutput)
}

type KubeconfigWorkerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigWorkerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return o
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigWorkerOptionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.Name }).(pulumi.StringOutput)
}

// TODO
func (o KubeconfigWorkerOptionsOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o KubeconfigWorkerOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KubeletConfigurationType struct {
	ApiVersion     string                             `pulumi:"apiVersion"`
	Authentication KubeletConfigurationAuthentication `pulumi:"authentication"`
	Authorization  KubeletConfigurationAuthorization  `pulumi:"authorization"`
	// TODO
	CgroupDriver string `pulumi:"cgroupDriver"`
	// TODO
	ClusterDNS []string `pulumi:"clusterDNS"`
	// TODO
	ClusterDomain string `pulumi:"clusterDomain"`
	// TODO
	ContainerRuntimeEndpoint string `pulumi:"containerRuntimeEndpoint"`
	Kind                     string `pulumi:"kind"`
	// TODO
	PodCIDR string `pulumi:"podCIDR"`
	// TODO
	ResolvConf string `pulumi:"resolvConf"`
	// TODO
	RuntimeRequestTimeout string `pulumi:"runtimeRequestTimeout"`
	// TODO
	TlsCertFile string `pulumi:"tlsCertFile"`
	// TODO
	TlsPrivateKeyFile string `pulumi:"tlsPrivateKeyFile"`
}

type KubeletConfigurationTypeOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationType)(nil)).Elem()
}

func (o KubeletConfigurationTypeOutput) ToKubeletConfigurationTypeOutput() KubeletConfigurationTypeOutput {
	return o
}

func (o KubeletConfigurationTypeOutput) ToKubeletConfigurationTypeOutputWithContext(ctx context.Context) KubeletConfigurationTypeOutput {
	return o
}

func (o KubeletConfigurationTypeOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o KubeletConfigurationTypeOutput) Authentication() KubeletConfigurationAuthenticationOutput {
	return o.ApplyT(func(v KubeletConfigurationType) KubeletConfigurationAuthentication { return v.Authentication }).(KubeletConfigurationAuthenticationOutput)
}

func (o KubeletConfigurationTypeOutput) Authorization() KubeletConfigurationAuthorizationOutput {
	return o.ApplyT(func(v KubeletConfigurationType) KubeletConfigurationAuthorization { return v.Authorization }).(KubeletConfigurationAuthorizationOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) CgroupDriver() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.CgroupDriver }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ClusterDNS() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubeletConfigurationType) []string { return v.ClusterDNS }).(pulumi.StringArrayOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ClusterDomain() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ClusterDomain }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ContainerRuntimeEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ContainerRuntimeEndpoint }).(pulumi.StringOutput)
}

func (o KubeletConfigurationTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.Kind }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) PodCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.PodCIDR }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ResolvConf() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ResolvConf }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) RuntimeRequestTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.RuntimeRequestTimeout }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) TlsCertFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.TlsCertFile }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) TlsPrivateKeyFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.TlsPrivateKeyFile }).(pulumi.StringOutput)
}

type KubeletConfigurationAuthentication struct {
	Anonymous KubeletConfigurationAuthenticationAnonymous `pulumi:"anonymous"`
	Webhook   KubeletConfigurationAuthenticationWebhook   `pulumi:"webhook"`
	X509      KubeletConfigurationAuthenticationx509      `pulumi:"x509"`
}

type KubeletConfigurationAuthenticationOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthentication)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationOutput) ToKubeletConfigurationAuthenticationOutput() KubeletConfigurationAuthenticationOutput {
	return o
}

func (o KubeletConfigurationAuthenticationOutput) ToKubeletConfigurationAuthenticationOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationOutput {
	return o
}

func (o KubeletConfigurationAuthenticationOutput) Anonymous() KubeletConfigurationAuthenticationAnonymousOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationAnonymous {
		return v.Anonymous
	}).(KubeletConfigurationAuthenticationAnonymousOutput)
}

func (o KubeletConfigurationAuthenticationOutput) Webhook() KubeletConfigurationAuthenticationWebhookOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationWebhook { return v.Webhook }).(KubeletConfigurationAuthenticationWebhookOutput)
}

func (o KubeletConfigurationAuthenticationOutput) X509() KubeletConfigurationAuthenticationx509Output {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationx509 { return v.X509 }).(KubeletConfigurationAuthenticationx509Output)
}

type KubeletConfigurationAuthenticationAnonymous struct {
	// TODO
	Enabled bool `pulumi:"enabled"`
}

type KubeletConfigurationAuthenticationAnonymousOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationAnonymousOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationAnonymous)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationAnonymousOutput) ToKubeletConfigurationAuthenticationAnonymousOutput() KubeletConfigurationAuthenticationAnonymousOutput {
	return o
}

func (o KubeletConfigurationAuthenticationAnonymousOutput) ToKubeletConfigurationAuthenticationAnonymousOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationAnonymousOutput {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationAnonymousOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationAnonymous) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubeletConfigurationAuthenticationWebhook struct {
	// TODO
	Enabled bool `pulumi:"enabled"`
}

type KubeletConfigurationAuthenticationWebhookOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationWebhook)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationWebhookOutput) ToKubeletConfigurationAuthenticationWebhookOutput() KubeletConfigurationAuthenticationWebhookOutput {
	return o
}

func (o KubeletConfigurationAuthenticationWebhookOutput) ToKubeletConfigurationAuthenticationWebhookOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationWebhookOutput {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationWebhookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationWebhook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubeletConfigurationAuthenticationx509 struct {
	// TODO
	ClientCAFile string `pulumi:"clientCAFile"`
}

type KubeletConfigurationAuthenticationx509Output struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationx509Output) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationx509)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationx509Output) ToKubeletConfigurationAuthenticationx509Output() KubeletConfigurationAuthenticationx509Output {
	return o
}

func (o KubeletConfigurationAuthenticationx509Output) ToKubeletConfigurationAuthenticationx509OutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationx509Output {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationx509Output) ClientCAFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationx509) string { return v.ClientCAFile }).(pulumi.StringOutput)
}

type KubeletConfigurationAuthorization struct {
	Mode string `pulumi:"mode"`
}

type KubeletConfigurationAuthorizationOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthorization)(nil)).Elem()
}

func (o KubeletConfigurationAuthorizationOutput) ToKubeletConfigurationAuthorizationOutput() KubeletConfigurationAuthorizationOutput {
	return o
}

func (o KubeletConfigurationAuthorizationOutput) ToKubeletConfigurationAuthorizationOutputWithContext(ctx context.Context) KubeletConfigurationAuthorizationOutput {
	return o
}

func (o KubeletConfigurationAuthorizationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthorization) string { return v.Mode }).(pulumi.StringOutput)
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifest struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *corev1.PodSpec `pulumi:"spec"`
	// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *corev1.PodStatus `pulumi:"status"`
}

// PodManifestInput is an input type that accepts PodManifestArgs and PodManifestOutput values.
// You can construct a concrete instance of `PodManifestInput` via:
//
//	PodManifestArgs{...}
type PodManifestInput interface {
	pulumi.Input

	ToPodManifestOutput() PodManifestOutput
	ToPodManifestOutputWithContext(context.Context) PodManifestOutput
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifestArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec corev1.PodSpecPtrInput `pulumi:"spec"`
	// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status corev1.PodStatusPtrInput `pulumi:"status"`
}

func (PodManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodManifest)(nil)).Elem()
}

func (i PodManifestArgs) ToPodManifestOutput() PodManifestOutput {
	return i.ToPodManifestOutputWithContext(context.Background())
}

func (i PodManifestArgs) ToPodManifestOutputWithContext(ctx context.Context) PodManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodManifestOutput)
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifestOutput struct{ *pulumi.OutputState }

func (PodManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodManifest)(nil)).Elem()
}

func (o PodManifestOutput) ToPodManifestOutput() PodManifestOutput {
	return o
}

func (o PodManifestOutput) ToPodManifestOutputWithContext(ctx context.Context) PodManifestOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodManifestOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PodManifest) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodManifestOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PodManifest) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PodManifestOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PodManifest) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o PodManifestOutput) Spec() corev1.PodSpecPtrOutput {
	return o.ApplyT(func(v PodManifest) *corev1.PodSpec { return v.Spec }).(corev1.PodSpecPtrOutput)
}

// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o PodManifestOutput) Status() corev1.PodStatusPtrOutput {
	return o.ApplyT(func(v PodManifest) *corev1.PodStatus { return v.Status }).(corev1.PodStatusPtrOutput)
}

type User struct {
	// TODO
	ClientCertificateData string `pulumi:"clientCertificateData"`
	// TODO
	ClientKeyData string `pulumi:"clientKeyData"`
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

// TODO
func (o UserOutput) ClientCertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientCertificateData }).(pulumi.StringOutput)
}

// TODO
func (o UserOutput) ClientKeyData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientKeyData }).(pulumi.StringOutput)
}

type UserArrayOutput struct{ *pulumi.OutputState }

func (UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]User)(nil)).Elem()
}

func (o UserArrayOutput) ToUserArrayOutput() UserArrayOutput {
	return o
}

func (o UserArrayOutput) ToUserArrayOutputWithContext(ctx context.Context) UserArrayOutput {
	return o
}

func (o UserArrayOutput) Index(i pulumi.IntInput) UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) User {
		return vs[0].([]User)[vs[1].(int)]
	}).(UserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CniBridgeIpamInput)(nil)).Elem(), CniBridgeIpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CniBridgeIpamPtrInput)(nil)).Elem(), CniBridgeIpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationInput)(nil)).Elem(), ContainerdCriPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationPtrInput)(nil)).Elem(), ContainerdCriPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationCniInput)(nil)).Elem(), ContainerdCriPluginConfigurationCniArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationCniPtrInput)(nil)).Elem(), ContainerdCriPluginConfigurationCniArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdPtrInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdRuncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncPtrInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdRuncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncOptionsInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdRuncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerdCriPluginConfigurationContainerdRuncOptionsPtrInput)(nil)).Elem(), ContainerdCriPluginConfigurationContainerdRuncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigAdminOptionsInput)(nil)).Elem(), KubeconfigAdminOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeControllerManagerOptionsInput)(nil)).Elem(), KubeconfigKubeControllerManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeProxyOptionsInput)(nil)).Elem(), KubeconfigKubeProxyOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeSchedulerOptionsInput)(nil)).Elem(), KubeconfigKubeSchedulerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigWorkerOptionsInput)(nil)).Elem(), KubeconfigWorkerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodManifestInput)(nil)).Elem(), PodManifestArgs{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(CniBridgeIpamOutput{})
	pulumi.RegisterOutputType(CniBridgeIpamPtrOutput{})
	pulumi.RegisterOutputType(CniBridgePluginConfigurationTypeOutput{})
	pulumi.RegisterOutputType(CniLoopbackPluginConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ContainerdConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationCniOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationCniPtrOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdPtrOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdRuncOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdRuncPtrOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdRuncOptionsOutput{})
	pulumi.RegisterOutputType(ContainerdCriPluginConfigurationContainerdRuncOptionsPtrOutput{})
	pulumi.RegisterOutputType(ContextOutput{})
	pulumi.RegisterOutputType(ContextArrayOutput{})
	pulumi.RegisterOutputType(KubeProxyConfigurationTypeOutput{})
	pulumi.RegisterOutputType(KubeProxyConfigurationClientConnectionOutput{})
	pulumi.RegisterOutputType(KubeProxyConfigurationClientConnectionPtrOutput{})
	pulumi.RegisterOutputType(KubeconfigOutput{})
	pulumi.RegisterOutputType(KubeconfigAdminOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeControllerManagerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeProxyOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeSchedulerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigWorkerOptionsOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationTypeOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationAnonymousOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationWebhookOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationx509Output{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthorizationOutput{})
	pulumi.RegisterOutputType(PodManifestOutput{})
	pulumi.RegisterOutputType(UserOutput{})
	pulumi.RegisterOutputType(UserArrayOutput{})
}
