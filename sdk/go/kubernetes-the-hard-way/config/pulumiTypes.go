// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way/internal"
)

var _ = internal.GetEnvOrDefault

type Cluster struct {
	// TODO
	CertificateAuthorityData string `pulumi:"certificateAuthorityData"`
	// TODO
	Server string `pulumi:"server"`
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// TODO
func (o ClusterOutput) CertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.CertificateAuthorityData }).(pulumi.StringOutput)
}

// TODO
func (o ClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Cluster {
		return vs[0].([]Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type Context struct {
	// TODO
	Cluster string `pulumi:"cluster"`
	// TODO
	User string `pulumi:"user"`
}

type ContextOutput struct{ *pulumi.OutputState }

func (ContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Context)(nil)).Elem()
}

func (o ContextOutput) ToContextOutput() ContextOutput {
	return o
}

func (o ContextOutput) ToContextOutputWithContext(ctx context.Context) ContextOutput {
	return o
}

// TODO
func (o ContextOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.Cluster }).(pulumi.StringOutput)
}

// TODO
func (o ContextOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.User }).(pulumi.StringOutput)
}

type ContextArrayOutput struct{ *pulumi.OutputState }

func (ContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Context)(nil)).Elem()
}

func (o ContextArrayOutput) ToContextArrayOutput() ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) ToContextArrayOutputWithContext(ctx context.Context) ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) Index(i pulumi.IntInput) ContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Context {
		return vs[0].([]Context)[vs[1].(int)]
	}).(ContextOutput)
}

type KubeconfigType struct {
	Clusters []Cluster `pulumi:"clusters"`
	Contexts []Context `pulumi:"contexts"`
	Users    []User    `pulumi:"users"`
}

type KubeconfigTypeOutput struct{ *pulumi.OutputState }

func (KubeconfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigType)(nil)).Elem()
}

func (o KubeconfigTypeOutput) ToKubeconfigTypeOutput() KubeconfigTypeOutput {
	return o
}

func (o KubeconfigTypeOutput) ToKubeconfigTypeOutputWithContext(ctx context.Context) KubeconfigTypeOutput {
	return o
}

func (o KubeconfigTypeOutput) Clusters() ClusterArrayOutput {
	return o.ApplyT(func(v KubeconfigType) []Cluster { return v.Clusters }).(ClusterArrayOutput)
}

func (o KubeconfigTypeOutput) Contexts() ContextArrayOutput {
	return o.ApplyT(func(v KubeconfigType) []Context { return v.Contexts }).(ContextArrayOutput)
}

func (o KubeconfigTypeOutput) Users() UserArrayOutput {
	return o.ApplyT(func(v KubeconfigType) []User { return v.Users }).(UserArrayOutput)
}

type KubeconfigAdminOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigAdminOptionsInput is an input type that accepts KubeconfigAdminOptionsArgs and KubeconfigAdminOptionsOutput values.
// You can construct a concrete instance of `KubeconfigAdminOptionsInput` via:
//
//	KubeconfigAdminOptionsArgs{...}
type KubeconfigAdminOptionsInput interface {
	pulumi.Input

	ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput
	ToKubeconfigAdminOptionsOutputWithContext(context.Context) KubeconfigAdminOptionsOutput
}

type KubeconfigAdminOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigAdminOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return i.ToKubeconfigAdminOptionsOutputWithContext(context.Background())
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigAdminOptionsOutput)
}

type KubeconfigAdminOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigAdminOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return o
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return o
}

// TODO
func (o KubeconfigAdminOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigAdminOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigCluster struct {
	Cluster Cluster `pulumi:"cluster"`
	// TODO
	Name string `pulumi:"name"`
}

type KubeconfigContext struct {
	Context Context `pulumi:"context"`
	// TODO
	Name string `pulumi:"name"`
}

type KubeconfigKubeControllerManagerOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeControllerManagerOptionsInput is an input type that accepts KubeconfigKubeControllerManagerOptionsArgs and KubeconfigKubeControllerManagerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeControllerManagerOptionsInput` via:
//
//	KubeconfigKubeControllerManagerOptionsArgs{...}
type KubeconfigKubeControllerManagerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput
	ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Context) KubeconfigKubeControllerManagerOptionsOutput
}

type KubeconfigKubeControllerManagerOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeControllerManagerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return i.ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeControllerManagerOptionsOutput)
}

type KubeconfigKubeControllerManagerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeControllerManagerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeControllerManagerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeControllerManagerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeProxyOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeProxyOptionsInput is an input type that accepts KubeconfigKubeProxyOptionsArgs and KubeconfigKubeProxyOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeProxyOptionsInput` via:
//
//	KubeconfigKubeProxyOptionsArgs{...}
type KubeconfigKubeProxyOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput
	ToKubeconfigKubeProxyOptionsOutputWithContext(context.Context) KubeconfigKubeProxyOptionsOutput
}

type KubeconfigKubeProxyOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeProxyOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return i.ToKubeconfigKubeProxyOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeProxyOptionsOutput)
}

type KubeconfigKubeProxyOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeProxyOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return o
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeProxyOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeProxyOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeSchedulerOptions struct {
	// TODO
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeSchedulerOptionsInput is an input type that accepts KubeconfigKubeSchedulerOptionsArgs and KubeconfigKubeSchedulerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeSchedulerOptionsInput` via:
//
//	KubeconfigKubeSchedulerOptionsArgs{...}
type KubeconfigKubeSchedulerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput
	ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Context) KubeconfigKubeSchedulerOptionsOutput
}

type KubeconfigKubeSchedulerOptionsArgs struct {
	// TODO
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeSchedulerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return i.ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeSchedulerOptionsOutput)
}

type KubeconfigKubeSchedulerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeSchedulerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return o
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigKubeSchedulerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeSchedulerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigUser struct {
	// TODO
	Name string `pulumi:"name"`
	User User   `pulumi:"user"`
}

type KubeconfigWorkerOptions struct {
	// TODO
	Name string `pulumi:"name"`
	// TODO
	PublicIp string  `pulumi:"publicIp"`
	Type     *string `pulumi:"type"`
}

// KubeconfigWorkerOptionsInput is an input type that accepts KubeconfigWorkerOptionsArgs and KubeconfigWorkerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigWorkerOptionsInput` via:
//
//	KubeconfigWorkerOptionsArgs{...}
type KubeconfigWorkerOptionsInput interface {
	pulumi.Input

	ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput
	ToKubeconfigWorkerOptionsOutputWithContext(context.Context) KubeconfigWorkerOptionsOutput
}

type KubeconfigWorkerOptionsArgs struct {
	// TODO
	Name pulumi.StringInput `pulumi:"name"`
	// TODO
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	Type     *string            `pulumi:"type"`
}

func (KubeconfigWorkerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return i.ToKubeconfigWorkerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigWorkerOptionsOutput)
}

type KubeconfigWorkerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigWorkerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return o
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return o
}

// TODO
func (o KubeconfigWorkerOptionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.Name }).(pulumi.StringOutput)
}

// TODO
func (o KubeconfigWorkerOptionsOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o KubeconfigWorkerOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KubeletConfigurationType struct {
	ApiVersion     string                             `pulumi:"apiVersion"`
	Authentication KubeletConfigurationAuthentication `pulumi:"authentication"`
	Authorization  KubeletConfigurationAuthorization  `pulumi:"authorization"`
	// TODO
	CgroupDriver string `pulumi:"cgroupDriver"`
	// TODO
	ClusterDNS []string `pulumi:"clusterDNS"`
	// TODO
	ClusterDomain string `pulumi:"clusterDomain"`
	// TODO
	ContainerRuntimeEndpoint string `pulumi:"containerRuntimeEndpoint"`
	Kind                     string `pulumi:"kind"`
	// TODO
	PodCIDR string `pulumi:"podCIDR"`
	// TODO
	ResolvConf string `pulumi:"resolvConf"`
	// TODO
	RuntimeRequestTimeout string `pulumi:"runtimeRequestTimeout"`
	// TODO
	TlsCertFile string `pulumi:"tlsCertFile"`
	// TODO
	TlsPrivateKeyFile string `pulumi:"tlsPrivateKeyFile"`
}

type KubeletConfigurationTypeOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationType)(nil)).Elem()
}

func (o KubeletConfigurationTypeOutput) ToKubeletConfigurationTypeOutput() KubeletConfigurationTypeOutput {
	return o
}

func (o KubeletConfigurationTypeOutput) ToKubeletConfigurationTypeOutputWithContext(ctx context.Context) KubeletConfigurationTypeOutput {
	return o
}

func (o KubeletConfigurationTypeOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o KubeletConfigurationTypeOutput) Authentication() KubeletConfigurationAuthenticationOutput {
	return o.ApplyT(func(v KubeletConfigurationType) KubeletConfigurationAuthentication { return v.Authentication }).(KubeletConfigurationAuthenticationOutput)
}

func (o KubeletConfigurationTypeOutput) Authorization() KubeletConfigurationAuthorizationOutput {
	return o.ApplyT(func(v KubeletConfigurationType) KubeletConfigurationAuthorization { return v.Authorization }).(KubeletConfigurationAuthorizationOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) CgroupDriver() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.CgroupDriver }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ClusterDNS() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubeletConfigurationType) []string { return v.ClusterDNS }).(pulumi.StringArrayOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ClusterDomain() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ClusterDomain }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ContainerRuntimeEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ContainerRuntimeEndpoint }).(pulumi.StringOutput)
}

func (o KubeletConfigurationTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.Kind }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) PodCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.PodCIDR }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) ResolvConf() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.ResolvConf }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) RuntimeRequestTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.RuntimeRequestTimeout }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) TlsCertFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.TlsCertFile }).(pulumi.StringOutput)
}

// TODO
func (o KubeletConfigurationTypeOutput) TlsPrivateKeyFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationType) string { return v.TlsPrivateKeyFile }).(pulumi.StringOutput)
}

type KubeletConfigurationAuthentication struct {
	Anonymous KubeletConfigurationAuthenticationAnonymous `pulumi:"anonymous"`
	Webhook   KubeletConfigurationAuthenticationWebhook   `pulumi:"webhook"`
	X509      KubeletConfigurationAuthenticationx509      `pulumi:"x509"`
}

type KubeletConfigurationAuthenticationOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthentication)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationOutput) ToKubeletConfigurationAuthenticationOutput() KubeletConfigurationAuthenticationOutput {
	return o
}

func (o KubeletConfigurationAuthenticationOutput) ToKubeletConfigurationAuthenticationOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationOutput {
	return o
}

func (o KubeletConfigurationAuthenticationOutput) Anonymous() KubeletConfigurationAuthenticationAnonymousOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationAnonymous {
		return v.Anonymous
	}).(KubeletConfigurationAuthenticationAnonymousOutput)
}

func (o KubeletConfigurationAuthenticationOutput) Webhook() KubeletConfigurationAuthenticationWebhookOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationWebhook { return v.Webhook }).(KubeletConfigurationAuthenticationWebhookOutput)
}

func (o KubeletConfigurationAuthenticationOutput) X509() KubeletConfigurationAuthenticationx509Output {
	return o.ApplyT(func(v KubeletConfigurationAuthentication) KubeletConfigurationAuthenticationx509 { return v.X509 }).(KubeletConfigurationAuthenticationx509Output)
}

type KubeletConfigurationAuthenticationAnonymous struct {
	// TODO
	Enabled bool `pulumi:"enabled"`
}

type KubeletConfigurationAuthenticationAnonymousOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationAnonymousOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationAnonymous)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationAnonymousOutput) ToKubeletConfigurationAuthenticationAnonymousOutput() KubeletConfigurationAuthenticationAnonymousOutput {
	return o
}

func (o KubeletConfigurationAuthenticationAnonymousOutput) ToKubeletConfigurationAuthenticationAnonymousOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationAnonymousOutput {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationAnonymousOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationAnonymous) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubeletConfigurationAuthenticationWebhook struct {
	// TODO
	Enabled bool `pulumi:"enabled"`
}

type KubeletConfigurationAuthenticationWebhookOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationWebhook)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationWebhookOutput) ToKubeletConfigurationAuthenticationWebhookOutput() KubeletConfigurationAuthenticationWebhookOutput {
	return o
}

func (o KubeletConfigurationAuthenticationWebhookOutput) ToKubeletConfigurationAuthenticationWebhookOutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationWebhookOutput {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationWebhookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationWebhook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubeletConfigurationAuthenticationx509 struct {
	// TODO
	ClientCAFile string `pulumi:"clientCAFile"`
}

type KubeletConfigurationAuthenticationx509Output struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthenticationx509Output) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthenticationx509)(nil)).Elem()
}

func (o KubeletConfigurationAuthenticationx509Output) ToKubeletConfigurationAuthenticationx509Output() KubeletConfigurationAuthenticationx509Output {
	return o
}

func (o KubeletConfigurationAuthenticationx509Output) ToKubeletConfigurationAuthenticationx509OutputWithContext(ctx context.Context) KubeletConfigurationAuthenticationx509Output {
	return o
}

// TODO
func (o KubeletConfigurationAuthenticationx509Output) ClientCAFile() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthenticationx509) string { return v.ClientCAFile }).(pulumi.StringOutput)
}

type KubeletConfigurationAuthorization struct {
	Mode string `pulumi:"mode"`
}

type KubeletConfigurationAuthorizationOutput struct{ *pulumi.OutputState }

func (KubeletConfigurationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigurationAuthorization)(nil)).Elem()
}

func (o KubeletConfigurationAuthorizationOutput) ToKubeletConfigurationAuthorizationOutput() KubeletConfigurationAuthorizationOutput {
	return o
}

func (o KubeletConfigurationAuthorizationOutput) ToKubeletConfigurationAuthorizationOutputWithContext(ctx context.Context) KubeletConfigurationAuthorizationOutput {
	return o
}

func (o KubeletConfigurationAuthorizationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v KubeletConfigurationAuthorization) string { return v.Mode }).(pulumi.StringOutput)
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifest struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *corev1.PodSpec `pulumi:"spec"`
	// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *corev1.PodStatus `pulumi:"status"`
}

// PodManifestInput is an input type that accepts PodManifestArgs and PodManifestOutput values.
// You can construct a concrete instance of `PodManifestInput` via:
//
//	PodManifestArgs{...}
type PodManifestInput interface {
	pulumi.Input

	ToPodManifestOutput() PodManifestOutput
	ToPodManifestOutputWithContext(context.Context) PodManifestOutput
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifestArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec corev1.PodSpecPtrInput `pulumi:"spec"`
	// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status corev1.PodStatusPtrInput `pulumi:"status"`
}

func (PodManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodManifest)(nil)).Elem()
}

func (i PodManifestArgs) ToPodManifestOutput() PodManifestOutput {
	return i.ToPodManifestOutputWithContext(context.Background())
}

func (i PodManifestArgs) ToPodManifestOutputWithContext(ctx context.Context) PodManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodManifestOutput)
}

// Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
//
// This resource waits until its status is ready before registering success
// for create/update, and populating output properties from the current state of the resource.
// The following conditions are used to determine whether the resource creation has
// succeeded or failed:
//
//  1. The Pod is scheduled ("PodScheduled"" '.status.condition' is true).
//  2. The Pod is initialized ("Initialized" '.status.condition' is true).
//  3. The Pod is ready ("Ready" '.status.condition' is true) and the '.status.phase' is
//     set to "Running".
//     Or (for Jobs): The Pod succeeded ('.status.phase' set to "Succeeded").
//
// If the Pod has not reached a Ready state after 10 minutes, it will
// time out and mark the resource update as Failed. You can override the default timeout value
// by setting the 'customTimeouts' option on the resource.
//
// ## Example Usage
// ### Create a Pod with auto-naming
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Pod with a user-specified name
// ```go
// package main
//
// import (
//
//	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
//	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := corev1.NewPod(ctx, "pod", &corev1.PodArgs{
//				Metadata: &metav1.ObjectMetaArgs{
//					Name: pulumi.String("nginx"),
//				},
//				Spec: &corev1.PodSpecArgs{
//					Containers: corev1.ContainerArray{
//						&corev1.ContainerArgs{
//							Image: pulumi.String("nginx:1.14.2"),
//							Name:  pulumi.String("nginx"),
//							Ports: corev1.ContainerPortArray{
//								&corev1.ContainerPortArgs{
//									ContainerPort: pulumi.Int(80),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PodManifestOutput struct{ *pulumi.OutputState }

func (PodManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodManifest)(nil)).Elem()
}

func (o PodManifestOutput) ToPodManifestOutput() PodManifestOutput {
	return o
}

func (o PodManifestOutput) ToPodManifestOutputWithContext(ctx context.Context) PodManifestOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodManifestOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PodManifest) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodManifestOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PodManifest) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PodManifestOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PodManifest) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o PodManifestOutput) Spec() corev1.PodSpecPtrOutput {
	return o.ApplyT(func(v PodManifest) *corev1.PodSpec { return v.Spec }).(corev1.PodSpecPtrOutput)
}

// Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o PodManifestOutput) Status() corev1.PodStatusPtrOutput {
	return o.ApplyT(func(v PodManifest) *corev1.PodStatus { return v.Status }).(corev1.PodStatusPtrOutput)
}

type User struct {
	// TODO
	ClientCertificateData string `pulumi:"clientCertificateData"`
	// TODO
	ClientKeyData string `pulumi:"clientKeyData"`
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

// TODO
func (o UserOutput) ClientCertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientCertificateData }).(pulumi.StringOutput)
}

// TODO
func (o UserOutput) ClientKeyData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientKeyData }).(pulumi.StringOutput)
}

type UserArrayOutput struct{ *pulumi.OutputState }

func (UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]User)(nil)).Elem()
}

func (o UserArrayOutput) ToUserArrayOutput() UserArrayOutput {
	return o
}

func (o UserArrayOutput) ToUserArrayOutputWithContext(ctx context.Context) UserArrayOutput {
	return o
}

func (o UserArrayOutput) Index(i pulumi.IntInput) UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) User {
		return vs[0].([]User)[vs[1].(int)]
	}).(UserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigAdminOptionsInput)(nil)).Elem(), KubeconfigAdminOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeControllerManagerOptionsInput)(nil)).Elem(), KubeconfigKubeControllerManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeProxyOptionsInput)(nil)).Elem(), KubeconfigKubeProxyOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeSchedulerOptionsInput)(nil)).Elem(), KubeconfigKubeSchedulerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigWorkerOptionsInput)(nil)).Elem(), KubeconfigWorkerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodManifestInput)(nil)).Elem(), PodManifestArgs{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ContextOutput{})
	pulumi.RegisterOutputType(ContextArrayOutput{})
	pulumi.RegisterOutputType(KubeconfigTypeOutput{})
	pulumi.RegisterOutputType(KubeconfigAdminOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeControllerManagerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeProxyOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeSchedulerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigWorkerOptionsOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationTypeOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationAnonymousOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationWebhookOutput{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthenticationx509Output{})
	pulumi.RegisterOutputType(KubeletConfigurationAuthorizationOutput{})
	pulumi.RegisterOutputType(PodManifestOutput{})
	pulumi.RegisterOutputType(UserOutput{})
	pulumi.RegisterOutputType(UserArrayOutput{})
}
