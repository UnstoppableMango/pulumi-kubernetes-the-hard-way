// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way/internal"
)

var _ = internal.GetEnvOrDefault

type Cluster struct {
	CertificateAuthorityData string `pulumi:"certificateAuthorityData"`
	Server                   string `pulumi:"server"`
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) CertificateAuthorityData() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.CertificateAuthorityData }).(pulumi.StringOutput)
}

func (o ClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Cluster {
		return vs[0].([]Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type Context struct {
	Cluster string `pulumi:"cluster"`
	User    string `pulumi:"user"`
}

type ContextOutput struct{ *pulumi.OutputState }

func (ContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Context)(nil)).Elem()
}

func (o ContextOutput) ToContextOutput() ContextOutput {
	return o
}

func (o ContextOutput) ToContextOutputWithContext(ctx context.Context) ContextOutput {
	return o
}

func (o ContextOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o ContextOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v Context) string { return v.User }).(pulumi.StringOutput)
}

type ContextArrayOutput struct{ *pulumi.OutputState }

func (ContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Context)(nil)).Elem()
}

func (o ContextArrayOutput) ToContextArrayOutput() ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) ToContextArrayOutputWithContext(ctx context.Context) ContextArrayOutput {
	return o
}

func (o ContextArrayOutput) Index(i pulumi.IntInput) ContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Context {
		return vs[0].([]Context)[vs[1].(int)]
	}).(ContextOutput)
}

type Kubeconfig struct {
	Clusters []Cluster `pulumi:"clusters"`
	Contexts []Context `pulumi:"contexts"`
	Users    []User    `pulumi:"users"`
}

type KubeconfigOutput struct{ *pulumi.OutputState }

func (KubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubeconfig)(nil)).Elem()
}

func (o KubeconfigOutput) ToKubeconfigOutput() KubeconfigOutput {
	return o
}

func (o KubeconfigOutput) ToKubeconfigOutputWithContext(ctx context.Context) KubeconfigOutput {
	return o
}

func (o KubeconfigOutput) Clusters() ClusterArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []Cluster { return v.Clusters }).(ClusterArrayOutput)
}

func (o KubeconfigOutput) Contexts() ContextArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []Context { return v.Contexts }).(ContextArrayOutput)
}

func (o KubeconfigOutput) Users() UserArrayOutput {
	return o.ApplyT(func(v Kubeconfig) []User { return v.Users }).(UserArrayOutput)
}

type KubeconfigAdminOptions struct {
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigAdminOptionsInput is an input type that accepts KubeconfigAdminOptionsArgs and KubeconfigAdminOptionsOutput values.
// You can construct a concrete instance of `KubeconfigAdminOptionsInput` via:
//
//	KubeconfigAdminOptionsArgs{...}
type KubeconfigAdminOptionsInput interface {
	pulumi.Input

	ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput
	ToKubeconfigAdminOptionsOutputWithContext(context.Context) KubeconfigAdminOptionsOutput
}

type KubeconfigAdminOptionsArgs struct {
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigAdminOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return i.ToKubeconfigAdminOptionsOutputWithContext(context.Background())
}

func (i KubeconfigAdminOptionsArgs) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigAdminOptionsOutput)
}

type KubeconfigAdminOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigAdminOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigAdminOptions)(nil)).Elem()
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutput() KubeconfigAdminOptionsOutput {
	return o
}

func (o KubeconfigAdminOptionsOutput) ToKubeconfigAdminOptionsOutputWithContext(ctx context.Context) KubeconfigAdminOptionsOutput {
	return o
}

func (o KubeconfigAdminOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigAdminOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigAdminOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigCluster struct {
	Cluster Cluster `pulumi:"cluster"`
	Name    string  `pulumi:"name"`
}

type KubeconfigContext struct {
	Context Context `pulumi:"context"`
	Name    string  `pulumi:"name"`
}

type KubeconfigKubeControllerManagerOptions struct {
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeControllerManagerOptionsInput is an input type that accepts KubeconfigKubeControllerManagerOptionsArgs and KubeconfigKubeControllerManagerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeControllerManagerOptionsInput` via:
//
//	KubeconfigKubeControllerManagerOptionsArgs{...}
type KubeconfigKubeControllerManagerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput
	ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Context) KubeconfigKubeControllerManagerOptionsOutput
}

type KubeconfigKubeControllerManagerOptionsArgs struct {
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeControllerManagerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return i.ToKubeconfigKubeControllerManagerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeControllerManagerOptionsArgs) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeControllerManagerOptionsOutput)
}

type KubeconfigKubeControllerManagerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeControllerManagerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeControllerManagerOptions)(nil)).Elem()
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutput() KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

func (o KubeconfigKubeControllerManagerOptionsOutput) ToKubeconfigKubeControllerManagerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeControllerManagerOptionsOutput {
	return o
}

func (o KubeconfigKubeControllerManagerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeControllerManagerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeControllerManagerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeProxyOptions struct {
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeProxyOptionsInput is an input type that accepts KubeconfigKubeProxyOptionsArgs and KubeconfigKubeProxyOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeProxyOptionsInput` via:
//
//	KubeconfigKubeProxyOptionsArgs{...}
type KubeconfigKubeProxyOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput
	ToKubeconfigKubeProxyOptionsOutputWithContext(context.Context) KubeconfigKubeProxyOptionsOutput
}

type KubeconfigKubeProxyOptionsArgs struct {
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeProxyOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return i.ToKubeconfigKubeProxyOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeProxyOptionsArgs) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeProxyOptionsOutput)
}

type KubeconfigKubeProxyOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeProxyOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeProxyOptions)(nil)).Elem()
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutput() KubeconfigKubeProxyOptionsOutput {
	return o
}

func (o KubeconfigKubeProxyOptionsOutput) ToKubeconfigKubeProxyOptionsOutputWithContext(ctx context.Context) KubeconfigKubeProxyOptionsOutput {
	return o
}

func (o KubeconfigKubeProxyOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeProxyOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeProxyOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigKubeSchedulerOptions struct {
	PublicIp *string `pulumi:"publicIp"`
	Type     string  `pulumi:"type"`
}

// KubeconfigKubeSchedulerOptionsInput is an input type that accepts KubeconfigKubeSchedulerOptionsArgs and KubeconfigKubeSchedulerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigKubeSchedulerOptionsInput` via:
//
//	KubeconfigKubeSchedulerOptionsArgs{...}
type KubeconfigKubeSchedulerOptionsInput interface {
	pulumi.Input

	ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput
	ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Context) KubeconfigKubeSchedulerOptionsOutput
}

type KubeconfigKubeSchedulerOptionsArgs struct {
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	Type     string                `pulumi:"type"`
}

func (KubeconfigKubeSchedulerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return i.ToKubeconfigKubeSchedulerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigKubeSchedulerOptionsArgs) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubeSchedulerOptionsOutput)
}

type KubeconfigKubeSchedulerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigKubeSchedulerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubeSchedulerOptions)(nil)).Elem()
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutput() KubeconfigKubeSchedulerOptionsOutput {
	return o
}

func (o KubeconfigKubeSchedulerOptionsOutput) ToKubeconfigKubeSchedulerOptionsOutputWithContext(ctx context.Context) KubeconfigKubeSchedulerOptionsOutput {
	return o
}

func (o KubeconfigKubeSchedulerOptionsOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o KubeconfigKubeSchedulerOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubeSchedulerOptions) string { return v.Type }).(pulumi.StringOutput)
}

type KubeconfigUser struct {
	Name string `pulumi:"name"`
	User User   `pulumi:"user"`
}

type KubeconfigWorkerOptions struct {
	Name     string  `pulumi:"name"`
	PublicIp string  `pulumi:"publicIp"`
	Type     *string `pulumi:"type"`
}

// KubeconfigWorkerOptionsInput is an input type that accepts KubeconfigWorkerOptionsArgs and KubeconfigWorkerOptionsOutput values.
// You can construct a concrete instance of `KubeconfigWorkerOptionsInput` via:
//
//	KubeconfigWorkerOptionsArgs{...}
type KubeconfigWorkerOptionsInput interface {
	pulumi.Input

	ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput
	ToKubeconfigWorkerOptionsOutputWithContext(context.Context) KubeconfigWorkerOptionsOutput
}

type KubeconfigWorkerOptionsArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	Type     *string            `pulumi:"type"`
}

func (KubeconfigWorkerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return i.ToKubeconfigWorkerOptionsOutputWithContext(context.Background())
}

func (i KubeconfigWorkerOptionsArgs) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigWorkerOptionsOutput)
}

type KubeconfigWorkerOptionsOutput struct{ *pulumi.OutputState }

func (KubeconfigWorkerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigWorkerOptions)(nil)).Elem()
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutput() KubeconfigWorkerOptionsOutput {
	return o
}

func (o KubeconfigWorkerOptionsOutput) ToKubeconfigWorkerOptionsOutputWithContext(ctx context.Context) KubeconfigWorkerOptionsOutput {
	return o
}

func (o KubeconfigWorkerOptionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.Name }).(pulumi.StringOutput)
}

func (o KubeconfigWorkerOptionsOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o KubeconfigWorkerOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigWorkerOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type User struct {
	ClientCertificateData string `pulumi:"clientCertificateData"`
	ClientKeyData         string `pulumi:"clientKeyData"`
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

func (o UserOutput) ClientCertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientCertificateData }).(pulumi.StringOutput)
}

func (o UserOutput) ClientKeyData() pulumi.StringOutput {
	return o.ApplyT(func(v User) string { return v.ClientKeyData }).(pulumi.StringOutput)
}

type UserArrayOutput struct{ *pulumi.OutputState }

func (UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]User)(nil)).Elem()
}

func (o UserArrayOutput) ToUserArrayOutput() UserArrayOutput {
	return o
}

func (o UserArrayOutput) ToUserArrayOutputWithContext(ctx context.Context) UserArrayOutput {
	return o
}

func (o UserArrayOutput) Index(i pulumi.IntInput) UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) User {
		return vs[0].([]User)[vs[1].(int)]
	}).(UserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigAdminOptionsInput)(nil)).Elem(), KubeconfigAdminOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeControllerManagerOptionsInput)(nil)).Elem(), KubeconfigKubeControllerManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeProxyOptionsInput)(nil)).Elem(), KubeconfigKubeProxyOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubeSchedulerOptionsInput)(nil)).Elem(), KubeconfigKubeSchedulerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigWorkerOptionsInput)(nil)).Elem(), KubeconfigWorkerOptionsArgs{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ContextOutput{})
	pulumi.RegisterOutputType(ContextArrayOutput{})
	pulumi.RegisterOutputType(KubeconfigOutput{})
	pulumi.RegisterOutputType(KubeconfigAdminOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeControllerManagerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeProxyOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigKubeSchedulerOptionsOutput{})
	pulumi.RegisterOutputType(KubeconfigWorkerOptionsOutput{})
	pulumi.RegisterOutputType(UserOutput{})
	pulumi.RegisterOutputType(UserArrayOutput{})
}
