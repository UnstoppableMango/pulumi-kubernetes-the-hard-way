// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Kubeconfig type
type KubeconfigType string

const (
	KubeconfigTypeWorker                   = KubeconfigType("worker")
	KubeconfigType_Kube_Proxy              = KubeconfigType("kube-proxy")
	KubeconfigType_Kube_Controller_Manager = KubeconfigType("kube-controller-manager")
	KubeconfigType_Kube_Scheduler          = KubeconfigType("kube-scheduler")
	KubeconfigTypeAdmin                    = KubeconfigType("admin")
)

type KubeconfigTypeOutput struct{ *pulumi.OutputState }

func (KubeconfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigType)(nil)).Elem()
}

func (o KubeconfigTypeOutput) ToKubeconfigTypeOutput() KubeconfigTypeOutput {
	return o
}

func (o KubeconfigTypeOutput) ToKubeconfigTypeOutputWithContext(ctx context.Context) KubeconfigTypeOutput {
	return o
}

func (o KubeconfigTypeOutput) ToKubeconfigTypePtrOutput() KubeconfigTypePtrOutput {
	return o.ToKubeconfigTypePtrOutputWithContext(context.Background())
}

func (o KubeconfigTypeOutput) ToKubeconfigTypePtrOutputWithContext(ctx context.Context) KubeconfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubeconfigType) *KubeconfigType {
		return &v
	}).(KubeconfigTypePtrOutput)
}

func (o KubeconfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KubeconfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KubeconfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KubeconfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KubeconfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KubeconfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KubeconfigTypePtrOutput struct{ *pulumi.OutputState }

func (KubeconfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeconfigType)(nil)).Elem()
}

func (o KubeconfigTypePtrOutput) ToKubeconfigTypePtrOutput() KubeconfigTypePtrOutput {
	return o
}

func (o KubeconfigTypePtrOutput) ToKubeconfigTypePtrOutputWithContext(ctx context.Context) KubeconfigTypePtrOutput {
	return o
}

func (o KubeconfigTypePtrOutput) Elem() KubeconfigTypeOutput {
	return o.ApplyT(func(v *KubeconfigType) KubeconfigType {
		if v != nil {
			return *v
		}
		var ret KubeconfigType
		return ret
	}).(KubeconfigTypeOutput)
}

func (o KubeconfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KubeconfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KubeconfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(KubeconfigTypeOutput{})
	pulumi.RegisterOutputType(KubeconfigTypePtrOutput{})
}
