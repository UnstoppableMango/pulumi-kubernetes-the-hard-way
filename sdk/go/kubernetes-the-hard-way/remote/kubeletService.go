// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package remote

import (
	"context"
	"reflect"

	"errors"
	pulumiCommand "github.com/pulumi/pulumi-command/sdk/go/command/remote"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unstoppablemango/pulumi-kubernetes-the-hard-way/sdk/go/kubernetes-the-hard-way/internal"
)

// Kubelet systemd service file. Will likely get replaced with a static function when https://github.com/pulumi/pulumi/issues/7583 gets resolved.
type KubeletService struct {
	pulumi.ResourceState

	// Waits for any units defined here.
	After pulumi.StringArrayOutput `pulumi:"after"`
	// Kubelet configuration.
	Configuration KubeletConfigurationPropsOutput `pulumi:"configuration"`
	// The parameters with which to connect to the remote host.
	Connection pulumiCommand.ConnectionOutput `pulumi:"connection"`
	// Optional systemd unit description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The location to create the service file.
	Directory pulumi.StringPtrOutput `pulumi:"directory"`
	// Optional systemd unit documentation
	Documentation pulumi.StringPtrOutput `pulumi:"documentation"`
	// Requires any units defined here.
	Requires pulumi.StringArrayOutput `pulumi:"requires"`
	// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
	Restart SystemdServiceRestartPtrOutput `pulumi:"restart"`
	// Optionally override the systemd service RestartSec. Defaults to `5`.
	RestartSec pulumi.StringPtrOutput `pulumi:"restartSec"`
	// The remote systemd service.
	Service SystemdServiceOutput `pulumi:"service"`
	// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
	WantedBy pulumi.StringPtrOutput `pulumi:"wantedBy"`
}

// NewKubeletService registers a new resource with the given unique name, arguments, and options.
func NewKubeletService(ctx *pulumi.Context,
	name string, args *KubeletServiceArgs, opts ...pulumi.ResourceOption) (*KubeletService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.After == nil {
		return nil, errors.New("invalid value for required argument 'After'")
	}
	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Connection == nil {
		return nil, errors.New("invalid value for required argument 'Connection'")
	}
	if args.Requires == nil {
		return nil, errors.New("invalid value for required argument 'Requires'")
	}
	args.Connection = args.Connection.ToConnectionOutput().ApplyT(func(v pulumiCommand.Connection) pulumiCommand.Connection { return *v.Defaults() }).(pulumiCommand.ConnectionOutput)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubeletService
	err := ctx.RegisterRemoteComponentResource("kubernetes-the-hard-way:remote:KubeletService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type kubeletServiceArgs struct {
	// Waits for any units defined here.
	After []string `pulumi:"after"`
	// Kubelet configuration.
	Configuration KubeletConfigurationProps `pulumi:"configuration"`
	// The parameters with which to connect to the remote host.
	Connection pulumiCommand.Connection `pulumi:"connection"`
	// Optional systemd unit description.
	Description *string `pulumi:"description"`
	// The location to create the service file.
	Directory *string `pulumi:"directory"`
	// Optional systemd unit documentation
	Documentation *string `pulumi:"documentation"`
	// Requires any units defined here.
	Requires []string `pulumi:"requires"`
	// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
	Restart *SystemdServiceRestart `pulumi:"restart"`
	// Optionally override the systemd service RestartSec. Defaults to `5`.
	RestartSec *string `pulumi:"restartSec"`
	// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
	WantedBy *string `pulumi:"wantedBy"`
}

// The set of arguments for constructing a KubeletService resource.
type KubeletServiceArgs struct {
	// Waits for any units defined here.
	After pulumi.StringArrayInput
	// Kubelet configuration.
	Configuration KubeletConfigurationPropsInput
	// The parameters with which to connect to the remote host.
	Connection pulumiCommand.ConnectionInput
	// Optional systemd unit description.
	Description pulumi.StringPtrInput
	// The location to create the service file.
	Directory pulumi.StringPtrInput
	// Optional systemd unit documentation
	Documentation pulumi.StringPtrInput
	// Requires any units defined here.
	Requires pulumi.StringArrayInput
	// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
	Restart SystemdServiceRestartPtrInput
	// Optionally override the systemd service RestartSec. Defaults to `5`.
	RestartSec pulumi.StringPtrInput
	// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
	WantedBy pulumi.StringPtrInput
}

func (KubeletServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeletServiceArgs)(nil)).Elem()
}

type KubeletServiceInput interface {
	pulumi.Input

	ToKubeletServiceOutput() KubeletServiceOutput
	ToKubeletServiceOutputWithContext(ctx context.Context) KubeletServiceOutput
}

func (*KubeletService) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletService)(nil)).Elem()
}

func (i *KubeletService) ToKubeletServiceOutput() KubeletServiceOutput {
	return i.ToKubeletServiceOutputWithContext(context.Background())
}

func (i *KubeletService) ToKubeletServiceOutputWithContext(ctx context.Context) KubeletServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletServiceOutput)
}

// KubeletServiceArrayInput is an input type that accepts KubeletServiceArray and KubeletServiceArrayOutput values.
// You can construct a concrete instance of `KubeletServiceArrayInput` via:
//
//	KubeletServiceArray{ KubeletServiceArgs{...} }
type KubeletServiceArrayInput interface {
	pulumi.Input

	ToKubeletServiceArrayOutput() KubeletServiceArrayOutput
	ToKubeletServiceArrayOutputWithContext(context.Context) KubeletServiceArrayOutput
}

type KubeletServiceArray []KubeletServiceInput

func (KubeletServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeletService)(nil)).Elem()
}

func (i KubeletServiceArray) ToKubeletServiceArrayOutput() KubeletServiceArrayOutput {
	return i.ToKubeletServiceArrayOutputWithContext(context.Background())
}

func (i KubeletServiceArray) ToKubeletServiceArrayOutputWithContext(ctx context.Context) KubeletServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletServiceArrayOutput)
}

// KubeletServiceMapInput is an input type that accepts KubeletServiceMap and KubeletServiceMapOutput values.
// You can construct a concrete instance of `KubeletServiceMapInput` via:
//
//	KubeletServiceMap{ "key": KubeletServiceArgs{...} }
type KubeletServiceMapInput interface {
	pulumi.Input

	ToKubeletServiceMapOutput() KubeletServiceMapOutput
	ToKubeletServiceMapOutputWithContext(context.Context) KubeletServiceMapOutput
}

type KubeletServiceMap map[string]KubeletServiceInput

func (KubeletServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeletService)(nil)).Elem()
}

func (i KubeletServiceMap) ToKubeletServiceMapOutput() KubeletServiceMapOutput {
	return i.ToKubeletServiceMapOutputWithContext(context.Background())
}

func (i KubeletServiceMap) ToKubeletServiceMapOutputWithContext(ctx context.Context) KubeletServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletServiceMapOutput)
}

type KubeletServiceOutput struct{ *pulumi.OutputState }

func (KubeletServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletService)(nil)).Elem()
}

func (o KubeletServiceOutput) ToKubeletServiceOutput() KubeletServiceOutput {
	return o
}

func (o KubeletServiceOutput) ToKubeletServiceOutputWithContext(ctx context.Context) KubeletServiceOutput {
	return o
}

// Waits for any units defined here.
func (o KubeletServiceOutput) After() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringArrayOutput { return v.After }).(pulumi.StringArrayOutput)
}

// Kubelet configuration.
func (o KubeletServiceOutput) Configuration() KubeletConfigurationPropsOutput {
	return o.ApplyT(func(v *KubeletService) KubeletConfigurationPropsOutput { return v.Configuration }).(KubeletConfigurationPropsOutput)
}

// The parameters with which to connect to the remote host.
func (o KubeletServiceOutput) Connection() pulumiCommand.ConnectionOutput {
	return o.ApplyT(func(v *KubeletService) pulumiCommand.ConnectionOutput { return v.Connection }).(pulumiCommand.ConnectionOutput)
}

// Optional systemd unit description.
func (o KubeletServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The location to create the service file.
func (o KubeletServiceOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringPtrOutput { return v.Directory }).(pulumi.StringPtrOutput)
}

// Optional systemd unit documentation
func (o KubeletServiceOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringPtrOutput { return v.Documentation }).(pulumi.StringPtrOutput)
}

// Requires any units defined here.
func (o KubeletServiceOutput) Requires() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringArrayOutput { return v.Requires }).(pulumi.StringArrayOutput)
}

// Optionally override the systemd service restart behaviour. Defaults to `on-failure`.
func (o KubeletServiceOutput) Restart() SystemdServiceRestartPtrOutput {
	return o.ApplyT(func(v *KubeletService) SystemdServiceRestartPtrOutput { return v.Restart }).(SystemdServiceRestartPtrOutput)
}

// Optionally override the systemd service RestartSec. Defaults to `5`.
func (o KubeletServiceOutput) RestartSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringPtrOutput { return v.RestartSec }).(pulumi.StringPtrOutput)
}

// The remote systemd service.
func (o KubeletServiceOutput) Service() SystemdServiceOutput {
	return o.ApplyT(func(v *KubeletService) SystemdServiceOutput { return v.Service }).(SystemdServiceOutput)
}

// Optionally override the systemd service wanted-by. Defaults to `multi-user.target`.
func (o KubeletServiceOutput) WantedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletService) pulumi.StringPtrOutput { return v.WantedBy }).(pulumi.StringPtrOutput)
}

type KubeletServiceArrayOutput struct{ *pulumi.OutputState }

func (KubeletServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeletService)(nil)).Elem()
}

func (o KubeletServiceArrayOutput) ToKubeletServiceArrayOutput() KubeletServiceArrayOutput {
	return o
}

func (o KubeletServiceArrayOutput) ToKubeletServiceArrayOutputWithContext(ctx context.Context) KubeletServiceArrayOutput {
	return o
}

func (o KubeletServiceArrayOutput) Index(i pulumi.IntInput) KubeletServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubeletService {
		return vs[0].([]*KubeletService)[vs[1].(int)]
	}).(KubeletServiceOutput)
}

type KubeletServiceMapOutput struct{ *pulumi.OutputState }

func (KubeletServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeletService)(nil)).Elem()
}

func (o KubeletServiceMapOutput) ToKubeletServiceMapOutput() KubeletServiceMapOutput {
	return o
}

func (o KubeletServiceMapOutput) ToKubeletServiceMapOutputWithContext(ctx context.Context) KubeletServiceMapOutput {
	return o
}

func (o KubeletServiceMapOutput) MapIndex(k pulumi.StringInput) KubeletServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubeletService {
		return vs[0].(map[string]*KubeletService)[vs[1].(string)]
	}).(KubeletServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeletServiceInput)(nil)).Elem(), &KubeletService{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeletServiceArrayInput)(nil)).Elem(), KubeletServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeletServiceMapInput)(nil)).Elem(), KubeletServiceMap{})
	pulumi.RegisterOutputType(KubeletServiceOutput{})
	pulumi.RegisterOutputType(KubeletServiceArrayOutput{})
	pulumi.RegisterOutputType(KubeletServiceMapOutput{})
}
