// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

import {Certificate, RemoteFile} from "./index";

/**
 * Creates a RemoteFile resource representing the copy operation.
 */
export function installKey(args: InstallKeyArgs, opts?: pulumi.InvokeOptions): Promise<InstallKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes-the-hard-way:index:installKey", {
        "cert": args.cert,
        "connection": args.connection ? inputs.connectionProvideDefaults(args.connection) : undefined,
        "name": args.name,
        "opts": args.opts,
        "path": args.path,
    }, opts);
}

export interface InstallKeyArgs {
    /**
     * The certificate to install.
     */
    cert: Certificate;
    /**
     * The connection details.
     */
    connection: inputs.Connection;
    name: string;
    opts?: inputs.ResourceOptions;
    /**
     * The path to install to.
     */
    path?: string;
}

export interface InstallKeyResult {
    readonly result: RemoteFile;
}
/**
 * Creates a RemoteFile resource representing the copy operation.
 */
export function installKeyOutput(args: InstallKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<InstallKeyResult> {
    return pulumi.output(args).apply((a: any) => installKey(a, opts))
}

export interface InstallKeyOutputArgs {
    /**
     * The certificate to install.
     */
    cert: pulumi.Input<Certificate>;
    /**
     * The connection details.
     */
    connection: pulumi.Input<inputs.ConnectionArgs>;
    name: string;
    opts?: inputs.ResourceOptionsArgs;
    /**
     * The path to install to.
     */
    path?: pulumi.Input<string>;
}
