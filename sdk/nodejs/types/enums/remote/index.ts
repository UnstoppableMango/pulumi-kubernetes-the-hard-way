// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const Architecture = {
    Amd64: "amd64",
    Arm64: "arm64",
} as const;

/**
 * CPU architecture
 */
export type Architecture = (typeof Architecture)[keyof typeof Architecture];

export const SystemdDelegate = {
    Yes: "yes",
    No: "no",
    Cpu: "cpu",
    Cpuacct: "cpuacct",
    Cpuset: "cpuset",
    Io: "io",
    Blkio: "blkio",
    Memory: "memory",
    Devices: "devices",
    Pids: "pids",
    Bpf_firewall: "bpf-firewall",
    Bpf_devices: "bpf-devices",
} as const;

/**
 * https://www.man7.org/linux/man-pages/man5/systemd.resource-control.5.html
 */
export type SystemdDelegate = (typeof SystemdDelegate)[keyof typeof SystemdDelegate];

export const SystemdKillMode = {
    Control_group: "control-group",
    Mixed: "mixed",
    Process: "process",
    None: "none",
} as const;

/**
 * https://www.freedesktop.org/software/systemd/man/latest/systemd.kill.html#Description
 */
export type SystemdKillMode = (typeof SystemdKillMode)[keyof typeof SystemdKillMode];

export const SystemdServiceExitType = {
    Main: "main",
    Cgroup: "cgroup",
} as const;

/**
 * Systemd service exit type.
 */
export type SystemdServiceExitType = (typeof SystemdServiceExitType)[keyof typeof SystemdServiceExitType];

export const SystemdServiceRestart = {
    No: "no",
    On_success: "on-success",
    On_failure: "on-failure",
    On_abnormal: "on-abnormal",
    On_watchdog: "on-watchdog",
    On_abort: "on-abort",
    Always: "always",
} as const;

/**
 * Systemd service restart behavior.
 */
export type SystemdServiceRestart = (typeof SystemdServiceRestart)[keyof typeof SystemdServiceRestart];

export const SystemdServiceType = {
    Simple: "simple",
    Exec: "exec",
    Forking: "forking",
    Oneshot: "oneshot",
    Dbus: "dbus",
    Notify: "notify",
    Notify_reload: "notify-reload",
    Idle: "idle",
} as const;

/**
 * Systemd service type.
 */
export type SystemdServiceType = (typeof SystemdServiceType)[keyof typeof SystemdServiceType];
