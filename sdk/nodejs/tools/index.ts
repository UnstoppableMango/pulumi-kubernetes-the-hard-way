// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { MkdirArgs } from "./mkdir";
export type Mkdir = import("./mkdir").Mkdir;
export const Mkdir: typeof import("./mkdir").Mkdir = null as any;
utilities.lazyLoad(exports, ["Mkdir"], () => require("./mkdir"));

export { TarArgs } from "./tar";
export type Tar = import("./tar").Tar;
export const Tar: typeof import("./tar").Tar = null as any;
utilities.lazyLoad(exports, ["Tar"], () => require("./tar"));

export { WgetArgs } from "./wget";
export type Wget = import("./wget").Wget;
export const Wget: typeof import("./wget").Wget = null as any;
utilities.lazyLoad(exports, ["Wget"], () => require("./wget"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes-the-hard-way:tools:Mkdir":
                return new Mkdir(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:tools:Tar":
                return new Tar(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:tools:Wget":
                return new Wget(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes-the-hard-way", "tools", _module)
