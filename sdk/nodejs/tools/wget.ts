// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

import * as pulumiCommand from "@pulumi/command";

/**
 * Abstraction over the `wget` utility on a remote system.
 */
export class Wget extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'kubernetes-the-hard-way:tools:Wget';

    /**
     * Returns true if the given object is an instance of Wget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Wget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Wget.__pulumiType;
    }

    /**
     * Represents the remote `tar` operation.
     */
    public /*out*/ readonly command!: pulumi.Output<pulumiCommand.remote.Command>;
    /**
     * Corresponds to the --directory-prefix option.
     */
    public readonly directoryPrefix!: pulumi.Output<string | undefined>;
    /**
     * Corresponds to the --https-only option.
     */
    public readonly httpsOnly!: pulumi.Output<boolean>;
    /**
     * Corresponds to the --no-verbose option.
     */
    public readonly noVerbose!: pulumi.Output<boolean | undefined>;
    /**
     * Corresponds to the --output-document option.
     */
    public readonly outputDocument!: pulumi.Output<string | undefined>;
    /**
     * Corresponds to the --quiet option.
     */
    public readonly quiet!: pulumi.Output<boolean>;
    /**
     * The process' stderr.
     */
    public /*out*/ readonly stderr!: pulumi.Output<string>;
    /**
     * The process' stdin.
     */
    public /*out*/ readonly stdin!: pulumi.Output<string | undefined>;
    /**
     * The process' stdout.
     */
    public /*out*/ readonly stdout!: pulumi.Output<string>;
    /**
     * Corresponds to the --timestamping option.
     */
    public readonly timestamping!: pulumi.Output<boolean>;
    /**
     * Corresponse to the [URL] argument.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a Wget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WgetArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.connection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connection'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["connection"] = args ? (args.connection ? pulumi.output(args.connection).apply(pulumiCommand.types.input.remote.connectionArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["directoryPrefix"] = args ? args.directoryPrefix : undefined;
            resourceInputs["httpsOnly"] = args ? args.httpsOnly : undefined;
            resourceInputs["noVerbose"] = args ? args.noVerbose : undefined;
            resourceInputs["outputDocument"] = args ? args.outputDocument : undefined;
            resourceInputs["quiet"] = args ? args.quiet : undefined;
            resourceInputs["timestamping"] = args ? args.timestamping : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["command"] = undefined /*out*/;
            resourceInputs["stderr"] = undefined /*out*/;
            resourceInputs["stdin"] = undefined /*out*/;
            resourceInputs["stdout"] = undefined /*out*/;
        } else {
            resourceInputs["command"] = undefined /*out*/;
            resourceInputs["directoryPrefix"] = undefined /*out*/;
            resourceInputs["httpsOnly"] = undefined /*out*/;
            resourceInputs["noVerbose"] = undefined /*out*/;
            resourceInputs["outputDocument"] = undefined /*out*/;
            resourceInputs["quiet"] = undefined /*out*/;
            resourceInputs["stderr"] = undefined /*out*/;
            resourceInputs["stdin"] = undefined /*out*/;
            resourceInputs["stdout"] = undefined /*out*/;
            resourceInputs["timestamping"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Wget.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Wget resource.
 */
export interface WgetArgs {
    /**
     * Connection details for the remote system.
     */
    connection: pulumi.Input<pulumiCommand.types.input.remote.ConnectionArgs>;
    /**
     * Corresponds to the --directory-prefix option.
     */
    directoryPrefix?: pulumi.Input<string>;
    /**
     * Corresponds to the --https-only option.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * Corresponds t- the --no-verbose option.
     */
    noVerbose?: pulumi.Input<boolean>;
    /**
     * Corresponds to the --output-document option.
     */
    outputDocument?: pulumi.Input<string>;
    /**
     * Corresponds to the --quiet option.
     */
    quiet?: pulumi.Input<boolean>;
    /**
     * Corresponds to the --timestamping option.
     */
    timestamping?: pulumi.Input<boolean>;
    /**
     * Corresponse to the [URL] argument.
     */
    url: pulumi.Input<string>;
}
