// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DownloadArgs } from "./download";
export type Download = import("./download").Download;
export const Download: typeof import("./download").Download = null as any;
utilities.lazyLoad(exports, ["Download"], () => require("./download"));

export * from "./etcdInstall";
import { EtcdInstall } from "./etcdInstall";

export { FileArgs } from "./file";
export type File = import("./file").File;
export const File: typeof import("./file").File = null as any;
utilities.lazyLoad(exports, ["File"], () => require("./file"));

export { KubeApiServerInstallArgs } from "./kubeApiServerInstall";
export type KubeApiServerInstall = import("./kubeApiServerInstall").KubeApiServerInstall;
export const KubeApiServerInstall: typeof import("./kubeApiServerInstall").KubeApiServerInstall = null as any;
utilities.lazyLoad(exports, ["KubeApiServerInstall"], () => require("./kubeApiServerInstall"));

export { KubeControllerManagerInstallArgs } from "./kubeControllerManagerInstall";
export type KubeControllerManagerInstall = import("./kubeControllerManagerInstall").KubeControllerManagerInstall;
export const KubeControllerManagerInstall: typeof import("./kubeControllerManagerInstall").KubeControllerManagerInstall = null as any;
utilities.lazyLoad(exports, ["KubeControllerManagerInstall"], () => require("./kubeControllerManagerInstall"));

export { KubeSchedulerInstallArgs } from "./kubeSchedulerInstall";
export type KubeSchedulerInstall = import("./kubeSchedulerInstall").KubeSchedulerInstall;
export const KubeSchedulerInstall: typeof import("./kubeSchedulerInstall").KubeSchedulerInstall = null as any;
utilities.lazyLoad(exports, ["KubeSchedulerInstall"], () => require("./kubeSchedulerInstall"));

export * from "./systemdService";
import { SystemdService } from "./systemdService";


// Export enums:
export * from "../types/enums/remote";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes-the-hard-way:remote:Download":
                return new Download(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:EtcdInstall":
                return new EtcdInstall(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:File":
                return new File(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:KubeApiServerInstall":
                return new KubeApiServerInstall(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:KubeControllerManagerInstall":
                return new KubeControllerManagerInstall(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:KubeSchedulerInstall":
                return new KubeSchedulerInstall(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:remote:SystemdService":
                return new SystemdService(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes-the-hard-way", "remote", _module)
