// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getKubeconfig(args: GetKubeconfigArgs, opts?: pulumi.InvokeOptions): Promise<GetKubeconfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes-the-hard-way:config:getKubeconfig", {
        "caPem": args.caPem,
        "options": args.options,
    }, opts);
}

export interface GetKubeconfigArgs {
    /**
     * Certificate authority data.
     */
    caPem: string;
    /**
     * Options for creating the kubeconfig.
     */
    options: inputs.config.KubeconfigAdminOptions | inputs.config.KubeconfigKubeControllerManagerOptions | inputs.config.KubeconfigKubeProxyOptions | inputs.config.KubeconfigKubeSchedulerOptions | inputs.config.KubeconfigWorkerOptions;
}

export interface GetKubeconfigResult {
    readonly result: outputs.config.Kubeconfig;
}
export function getKubeconfigOutput(args: GetKubeconfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubeconfigResult> {
    return pulumi.output(args).apply((a: any) => getKubeconfig(a, opts))
}

export interface GetKubeconfigOutputArgs {
    /**
     * Certificate authority data.
     */
    caPem: pulumi.Input<string>;
    /**
     * Options for creating the kubeconfig.
     */
    options: pulumi.Input<inputs.config.KubeconfigAdminOptionsArgs> | pulumi.Input<inputs.config.KubeconfigKubeControllerManagerOptionsArgs> | pulumi.Input<inputs.config.KubeconfigKubeProxyOptionsArgs> | pulumi.Input<inputs.config.KubeconfigKubeSchedulerOptionsArgs> | pulumi.Input<inputs.config.KubeconfigWorkerOptionsArgs>;
}
