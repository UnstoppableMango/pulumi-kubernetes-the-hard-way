// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get the `bridge` configuration.
 */
export function getCniBridgePluginConfiguration(args: GetCniBridgePluginConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetCniBridgePluginConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes-the-hard-way:config:getCniBridgePluginConfiguration", {
        "bridge": args.bridge,
        "cniVersion": args.cniVersion,
        "ipMasq": args.ipMasq,
        "ipam": args.ipam,
        "isGateway": args.isGateway,
        "name": args.name,
        "subnet": args.subnet,
        "type": args.type,
    }, opts);
}

export interface GetCniBridgePluginConfigurationArgs {
    /**
     * Bridge name.
     */
    bridge?: string;
    /**
     * CNI version.
     */
    cniVersion?: string;
    /**
     * IP masq.
     */
    ipMasq?: boolean;
    /**
     * IPAM
     */
    ipam?: inputs.config.CniBridgeIpam;
    /**
     * Is gateway.
     */
    isGateway?: boolean;
    /**
     * CNI plugin name.
     */
    name?: string;
    /**
     * The subnet to use.
     */
    subnet: string;
    /**
     * CNI plugin type.
     */
    type?: string;
}

/**
 * Get the `bridge` configuration.
 */
export interface GetCniBridgePluginConfigurationResult {
    readonly result: outputs.config.CniBridgePluginConfiguration;
}
/**
 * Get the `bridge` configuration.
 */
export function getCniBridgePluginConfigurationOutput(args: GetCniBridgePluginConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCniBridgePluginConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getCniBridgePluginConfiguration(a, opts))
}

export interface GetCniBridgePluginConfigurationOutputArgs {
    /**
     * Bridge name.
     */
    bridge?: pulumi.Input<string>;
    /**
     * CNI version.
     */
    cniVersion?: pulumi.Input<string>;
    /**
     * IP masq.
     */
    ipMasq?: pulumi.Input<boolean>;
    /**
     * IPAM
     */
    ipam?: pulumi.Input<inputs.config.CniBridgeIpamArgs>;
    /**
     * Is gateway.
     */
    isGateway?: pulumi.Input<boolean>;
    /**
     * CNI plugin name.
     */
    name?: pulumi.Input<string>;
    /**
     * The subnet to use.
     */
    subnet: pulumi.Input<string>;
    /**
     * CNI plugin type.
     */
    type?: pulumi.Input<string>;
}
