// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./certificate";
import { Certificate } from "./certificate";

export { ClusterPkiArgs } from "./clusterPki";
export type ClusterPki = import("./clusterPki").ClusterPki;
export const ClusterPki: typeof import("./clusterPki").ClusterPki = null as any;
utilities.lazyLoad(exports, ["ClusterPki"], () => require("./clusterPki"));

export { EncryptionKeyArgs } from "./encryptionKey";
export type EncryptionKey = import("./encryptionKey").EncryptionKey;
export const EncryptionKey: typeof import("./encryptionKey").EncryptionKey = null as any;
utilities.lazyLoad(exports, ["EncryptionKey"], () => require("./encryptionKey"));

export { NewCertificateArgs, NewCertificateResult, NewCertificateOutputArgs } from "./newCertificate";
export const newCertificate: typeof import("./newCertificate").newCertificate = null as any;
export const newCertificateOutput: typeof import("./newCertificate").newCertificateOutput = null as any;
utilities.lazyLoad(exports, ["newCertificate","newCertificateOutput"], () => require("./newCertificate"));

export * from "./rootCa";
import { RootCa } from "./rootCa";


// Export enums:
export * from "../types/enums/tls";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes-the-hard-way:tls:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:tls:ClusterPki":
                return new ClusterPki(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:tls:EncryptionKey":
                return new EncryptionKey(name, <any>undefined, { urn })
            case "kubernetes-the-hard-way:tls:RootCa":
                return new RootCa(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes-the-hard-way", "tls", _module)
