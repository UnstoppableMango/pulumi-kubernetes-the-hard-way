name: pull-request

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - CHANGELOG.md

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PROVIDER: kubernetes-the-hard-way
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..

jobs:
  version:
    uses: ./.github/workflows/dev-version.yml
    secrets: inherit

  build_test:
    runs-on: ubuntu-latest
    needs: version
    env:
      PROVIDER_VERSION: ${{ needs.version.outputs.version }}
    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
          - java
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: ${{ matrix.language != 'dotnet' && matrix.language != 'java' }}

      - run: make ensure

      - name: Build binaries
        run: make provider

      - name: Build SDK
        run: make build_${{ matrix.language }}

      # Enable when we actually have some tests
      # - name: Test Provider Library
      #   run: |
      #     set -euo pipefail
      #     cd provider && go test -v -json -coverprofile="coverage.txt" -coverpkg=./... -timeout 1h -parallel 16 ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Install Node dependencies
        if: matrix.language == 'nodejs'
        run: yarn global add typescript

      - name: Install Python deps
        if: matrix.language == 'python'
        run: |-
          pip3 install virtualenv==20.0.23
          pip3 install pipenv

      - name: Install gotestfmt
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          tag: v2.5.0
          repo: GoTestTools/gotestfmt

      - name: Install dependencies
        run: make install_${{ matrix.language }}_sdk

      - name: Build test image
        uses: ./.github/actions/build-test-image

      - name: Run tests
        run: |
          set -euo pipefail
          cd examples && go test -v -json -cover -timeout 15m -tags=${{ matrix.language }} -parallel 16 . 2>&1 | tee /tmp/gotest.log | gotestfmt

  lint_workflows:
    # Temporary since it doesn't seem to like large diffs
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Lint actions
        uses: reviewdog/action-actionlint@v1.45.0
